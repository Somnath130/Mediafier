%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: banner_on_blue_bg_15.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 1/17/2019
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 24510 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF857E595A85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%A9FFA95A5AAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AFA9AF85AF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A95A8585
%A985AF85A985AFA95A2F84A9A92F8585A985AF85A985AF85A985AF85A985
%AF85A985AFA9FD05FFA9AF85A985AF85A985AF85A985AFAF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85855A5A84AF85A985AF85AF85852F2F285384FF845A85AF85AF85AF85AF
%85AF85AF85AF85AF85AFAFFD08FFAF85AF85AF85AF85AF85AF8585AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF847E5A85A9AFA9AFA98485AF85AF592F062F062F53A9A87E2FA985AF
%85A985AF85A985AF85A985AFA9FD09FF85AF85A985AF85A985AF85A9AF85
%AF85AF85AF85AF85AF85AF85AF84AFFD0985AFFD048584AF85AF858585AF
%84AFFD0585AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9FFAFFFFFFF
%A9FFA95A2F8585AFA95A292F292F292F2984A9AF2F8585AF85AF85AF85AF
%85AF85AF85FD09FFA9AF85AF85AF85AF85AF85AF8585AF85A985AF85A985
%AF85A92F5A5A2F855A2F5A2F852F5A2F5A855A2F5A2F5A2F5A2F5A2F5A84
%2F84302F5A2F7E85A985AF85A985AF85A985AF85A985AF85A985A9535353
%85A9FF5A302F2F2F8585AF2F2F062F062F062F062F7EAF845A7EA985AF85
%A985AF85A985AFFD08FF85A985AF85A985AF85A985AF85A9AF85AF85AF85
%AF85AF85AF853084852FAF2F855A30845A5A842FAF5A5A84855A5A84365A
%5A2F852F852F855A305AAF85AF85AF85AF85AF85AF85AF85AF85AF85AF29
%2F292F287EAFFF2F5A2F5A2FA9842F282F292F282F292F282F2FA9A9A92F
%8585AF85AF85AF85AFA9FD06FFAF85AF85AF85AF85AF85AF85AF85AF8585
%A985AF85A985AF85A985AF2F855A2F852F5A5A2F852F5A5A5A85852F5A5A
%5A2F852F5A2F5A2F305A2F5A5A2F8585AF85A985AF85A985AF85A985AF85
%A984857E2F062F062F062FA8AF2F5A2F302F7E062F062F062F062F062F06
%2F065A84AF595A85AF85A985AFA9FD05FFA9AF85A985AF85A985AF85A985
%AF85A985AFAF85AF85AF85AF85AF85AF855A2F852F852F5A5A5A2FFD045A
%AF7E5A5A85FD055A852F5A5A5A2F5A5A305AAF85AF85AF85AF85AF85AF85
%AF85AFA9AF8584292F292F292F295AA9AF305A2F5A5A2F292F2F53292F29
%2F282F292F282F7EAFA85A5AAF85AF85FD05FF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF8585A985AF85A985AF85A985AFFD048584857EA9FD0485
%848585AF848584858585848585857EA984857E85848585AF85A985AF85A9
%85AF85A985AFA9AFA9FF5A2F062F062F062F067EA87E2F5A2F5A062F0653
%A97E282F062F062F062F062F2F84A8A92F8585AFFFFFA9AF85A985AF85A9
%85AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AFA97E292F537E292F282F292F062F2FA9A9
%5A5A5A302F292F7E847EAF062F292F062F292F062F295984FF7E5A85AFA9
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585AF85A985AF85A9
%85AF85A985AF85A985AFA9AF85AF85A985AF85AF85AF85AF85AF85A985AF
%85A985AF85A985AF85AF85AF85A985AF85A985AF85AF062F062F062F062F
%062F062F062F2FAF5A5A2F5A2F2F062F7EFF532F062F0629062F0629062F
%062953AFA85A59AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%AF85AF85AF85AF85AF85AF85FD0CFFAFFD04FFAFFFAFFFAFFD04FFAFFD04
%FFAFFD06FFAF85AF85AF85AF85AF842F292F292F292F292F292F282F292F
%A9AFFD045A292F292F5384282F292F282F292F062F292F062F2F7EA9AF53
%8585AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585AF85A985AF85A9
%85AF85A9A9FFA9FFA9FFA9FFA9FFA9FFA9FFAFFFA9AFA9AFA9FFA9FFA9FF
%A9FFA9FFAFFFA9FFAFAFA9FFA9A985AF85A985AF85A9062F062F062F062F
%062F062F062F067EA85A5A5A2F5A2F84282F062F062F062F062F0629062F
%0629062F062F7EAF842F84AF85A985AFA9AF85AF85A985AF85A985AF85A9
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AFAFAF85AFA9AF85AF85AFA9
%AFA9AF85AF85AF85AF85AF85AF85AF85AFA9AF85AFA9AF85AF85AF85AFAF
%2F282F292F282F292F062F292F062F53FFFD045A365A5AA95A2F292F062F
%292F062F282F062F282F062F282F2FAFA97E2FAFA9AF85AFA9AF85AF85AF
%85AF85AF85AF8585A985AF85A985AF85A985AFAFFFA9FFA9FFA9FFA9FFA9
%FFA9AFA9FFA9FFA9FFA9FFA9FFAFFFA9FFFFAFA9FFAFFFA9FFA9A985AF85
%AF85AF85A985AF532F062F062F062F062F062F06290653A8AF7E5A365A30
%5A367E062F0629062F0629062F0629062F062906290629067EA82F5AAF85
%A985AF85AF85AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85FFAFFF
%FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFAFFFA9FFAFFF
%AFFFAFAF85AF85AF85AFA9AFA9AFA9A9292F292F292F292F282F5AA9362F
%2F7E84FFFF855A5B5A5A5A2F2F2F282F4D77062F292F062F282F062F282F
%062F2FAF7E5A85AF85AF85AF85AFAFAF85AF85AF85AF8585A985AF85A985
%AF85A985AF85A985AF85A985AF85AF85AF85A985AF85A985AF85A985AF85
%A985AF85A985AFA9AF85AF85A985AF85A985AFA9AF85AFA953062F062F06
%2F062F7EAFA985292F06292F85A985305A365A5A7E842F062F28FF062F06
%29062F0629062F0629062F7EA92FAF85A985AF85A985AFA9A985AF85A985
%AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85AF85AFA9AF85AFA9AF
%A9AFA92F282F292F062F84AFA9FFA95A062F282F067EAF855AA9AFAF5A84
%A984282F285A5353282F062F062F062F062F0684848585AF85AF85AFA9AF
%85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A984A29CA29CA29CA29CA29CA29CA29CA29CA985AF85AF85
%AFA9AF85A985AF85AFA9AF842F062F062F062F7EAFA9AF842F062F062906
%84A9AFA9AFA985A87E5AA9532F0629702906290629062906290629847E84
%AF85AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AFA9AF85BEB7B7B7BEBDBEBDBEB7BEBDBEBDB8
%B7B8B7A985AFAFAFA9AF85AF85AF85AF85AFAFAF8453292F282F295AA9FF
%AFFF5A2F292F062F2FA9FFFFAF855A7EA8FF59A9A959062F282F062F282F
%062F062F28FF53AF85AFAFAFA9AF85AF85AF85AF85AF85AF8585AF85A985
%AF85A985AF85A985AF85A985AF85A985AFA9AFA9FF85A9B2B7B7B7C4CBCA
%FFFFC4FFFFCACBB7B7B2B7A2A985AFA9AF85AF85A985AF85A985AFA9AF84
%7E282F062F2FAFA9AFA9A92F2F0629062F2FFF845A365A5A8459FF7E5A84
%84282F0629062F062906290653A85A85AFA9AFA9AF85AF85A985AF85A985
%AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85BEB7B7B7FD05C4BDC4C4C4BEBEB7B7B7A9A9AF85AFA9AFA9AF85AF85AF
%A9AF85AF85AFA9AF592F062FA9AFA985592F062F282F062F84AFFD055AAF
%5A84FF535AAF592F062F062F062F062F5AA95AA9A9AFA9AFA9AFA9AF8585
%85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF859C95BE95BE95BE95BE95BE95BE95BE9BA285AF85A985AF85
%AFA9AFA9FFA9AF85A985AF85A985A97E2F062F59AF5A2F06290629062906
%5AA85A2F5A2F5A2F84845A28B74D7E842906280629062806847E855A5A7E
%AFA8AFA9A97E2F5AA985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFAFAF
%85AF85AF85AF85AF85AFFD04FFAFAF85AF85AF85AF2F85A9852F2F292F29
%2F062F282F062F2FAF847E5A5A2F5A2F5AA9A94DB79553062F062F062F06
%2FA95A857E305A5AA9A9AF532F288585AF85AF85AF8585A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AFA9AF85AF85A985AF85A9A9FD06FFA985AF85A9855A2F5A7E
%AF5929062F0629062F0629062F5AA9A8842F5A2F5A2F292F2F06714C2906
%290629062929AF2FAF5A5A5A302F5A062F062F7EA985AF85A985AFAF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AFA9AF85AF85AF85AFAFFD07FF85AF85AFA9AF
%5A5A2F305AAF855A062F282F062F062F062F2F7EA9852F5A2F5A292F062F
%062F062F0629062F065AA85A855A2FFFA8302F2F292F068585AF85AF85AF
%8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85AF85AF85AFA9FD07FF85AF85
%AFA9AF85852F302F5A3085848406290629062906290629065AA85AFD042F
%0629062906280629062806295A845AAF5A307EA92F2F062F06295AAF85A9
%85AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85FD04AFFD07FFA9AF
%A9AFA9AFAFAFA95A2F305A5B5A8584AF5A2F062F282F062F062F0685A95A
%2F5A2F2F062F062F062F062F062F06857EAF85852F5A2F302F2F292F2FAF
%85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85AF85AF85FD06
%FFAF85A9A9AF85FD04FFA95A5A2F5A30855A5A2F85845A062F0629062906
%282FAF2F2F2F300629062F062906290628062F845385AFA9FF5A302F2F06
%2F84FF85AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AFFD04FFAFAF85AFAFAFA9FFAFAF7E85A9855A5A5A85365A5A5A2F5A85
%852F2F062F062F062F84842F302F2F062F062F062F062F06292FAF2FAF85
%FFFFAF845A2F5A85FFFFAF85AF85AF85AF8585A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AFA9A985AF85A985FFFFFFA9AFA9AF85AFAFFFA9AFA985FD045A2F84FD
%045A2F5A2F2F5A85592F0628062906857E2F2F2F06290629845A06280629
%065A7E7EA9AF85AFFFA95A8584AFA8AF85A985AF85A985AFAF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AFA9AF85AF85AF85AFA9AF85AFAFAFA9FFFFFFA9FFAFAF7E
%AF845A2FA9FFAF5A855A5B2F5A2F5A5A85855A062F062F84A92F30292F28
%2F062F84A92F2F062F7EA984AFA98B6185AFFFAFFFA98585AF85AF85AF85
%AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85AF85AF85A985AF85AFA9AF85AF
%A9FFAFAF8484595A5385852F3685A8FF7E5A5A2F2F305A5A305A7E852F2F
%2FA9597E845A2F2F0629062F2F530629068553AF85AFA9AF608584AF6085
%84AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85
%AFA9AFA9AF85AFAFAFA9FFFFA8597E5A7E597E2FAF5A5A5AFFAF855A302F
%5A5A855A5A5A85848584A985AF85852F2F062F062F062F062FA95A85AF85
%AFA9AF8585608585AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AFA9AF85AF85AFA9AFA9855984A8AF5A5A595A535A5AA9
%7E5A3684A8855A2F30FD055A365A365A5A84848584855A5A062906290629
%2FA953A985AF85A985AFA9A985AFA9FF85AF85A985AF85A9AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AFA9AFA9AF855AFFFFAFA95A7E5A7E84FFA8
%7E597E5A7E598585615A5B5A5A2F5A5A5B5A5B5A615A5B5A5A5A855A5A84
%AF857E2F2F282F067E848585AF85AF85AFAFAFA9AFFFFF85AF85AF85AF85
%AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AFFFAF85AF85AFA9AF5A7EA8FF
%A9A95A7E595A59A9FFA8537E597E597E7EA95A5A2F84AF85365A36FD075A
%30FD045A858485532F062F5A7E84A985AFA9AF85AF85FFA9AF85A985AF85
%A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AFA9FFAFFF85AF85AF85AFA9AF
%5A307EFFAFAF847E5A7E5984A9FFFD047E597E5AA9845A5A85A9FFFD075A
%85FD055A855A8584857E5A7EA953AF85AFA9AF85AFA9FFAFAF85AFA9AF85
%AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85AFA9FFA9A985AF85A985AF85A9
%A9FF842F2FA9A9AFA884595A537E7EFFA884597E597E597E2F85365A7EFF
%A85A305A36FD075A36FD045A857E857E8485AFA9A985AFFFAF85AF85A985
%AFA9A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85FFAFFFA9AFA9AF85AF85AF
%85AF85FFFFAF85612F5AA9FFAFAFFD057EAFFFFF7E847E7E7E5A7EAF5A85
%5AA9FFAF5A5A5A5B5A5B5A855A5B5A5B5A8584A984AFA9AFA9AFAFFFFFAF
%85AF85AF85AFA9AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFFFAF85AF85
%A985AFA9AF85AFA9AF85AFFF855A852F2F5AFFAFAF847E597E5984A8FF84
%7E597E597E5984845A365AA8FF845A5A5A36FD055A365A5AA9A85AA9AF85
%AFA9FFA9AF85A985AF85AF85AF85A985AF85A985AFAF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AFA9AFA9AFA9AFA9AF85AF6085AFFF8485615A2FA9FFFFA9A9
%5A7E597E7EFFAFA87E7E597E5A7E84855A5A84FF845A36855A5A5A5B5A85
%84FF7E2F84AF85AFA9FFA9AF85AFA9AFA9AF85AF85AF85AF85AF85AF8585
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85AFA9AFA9842F5A5AA984A985615A8584FFA8
%855A602F5A84FFA8AF7E5A597E59A8A8FF7D7E535A535A59A9A8FF84855A
%5A30FD045AA9A9A80653A8AF85AF85A985AF85A985AFA9AF85AF85A985AF
%85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AFA9AFA9FF855A305A5A5A308585
%A98485618560AFFFAF60855A305AFFFFAF85845A7E7E84A8FFA87E5A5A59
%85FFFF85855A5A5A855A5A84FFAF532F8585FFFFAF85AF85AF85AFA9AFA9
%AF85AFA9AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985FFA9AFA95A
%365A7E85365A5AA984A9848560855A85A9FF8485605A2F84AFFFA9A95A7E
%595A5AA9A9845AAFA884535A7E855A5A5A85A9FF592F358560AFFFAF85AF
%85A985AFA9AF85AF85A985AFA9AF85AF85A985AF85A9AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85FFFFAFA9AF5A5A368585A984FF845AA9AF8585608585FFA98561
%852F3084FFA9AF847E597E5A84A9FF845A595A597E84AF84A9AFA9065A5A
%8585FFAFAF85AF85AFAFAFA9AF85AF85AF85AF85AFA9AF85AF85AF85AF85
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A92F84A9FFA8AF7E8584A9A9A95A842FAF85AF
%85855A855A85A8AF60615A2F2FA9A9AF847E535A535A535A535A538584A9
%84FFA82F06605A8584FF84615AAF85A9A9AFA9AF85AF85A985AF85A985AF
%85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF845A5A5A7EFFAFAF85FFAF
%845A7E5A8585AFAFAF85AF85856085A9FFA985615A2F5AFFFFA9AF7E5A59
%7E5A7E7EAFA9AFA9FF532F5A8561AFFFAF8585608585AFA9AF85AFA9FFA9
%AF85AF85AFA9AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85FFA85A
%2F5A2FA9A9FF7E302F2F5AFFAFA985AFA9AF85AF85855A8560AFA9856085
%2F307EFFA9AF845A538484A984AFA97E065A608584FFA9855A85608585AF
%85A985AF85A985AFA9AF85AFA9AF85AF85A985AF85A985AFAF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AFFFFF8585305A2F5A36302F5A6085AFFF85AF85AFA9AFA9AF85
%8560856185AFFF85855A5A2FA9AFFFA9A9A9AFA9FF842F2F856085AFFF84
%85618585AFAFAF85AF85AF85AF85AF85AFAFAF85AF85AF85AF85AF85AF85
%AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985A9A9FF84855A2F2F5A2F605AAFFFAF84AF
%85A985AF85AFA9AF858560855A6184FFA8855A5A2F54A8FFA9AFA8A92F2F
%5A8560A9A9A95A615A8585AFA9AFA9AF85AF85A985AF85A9A9AF85AF85AF
%85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF858585FFFF85608560
%8585FFAF8560AF85AFA9AF85AF85AFAFAF85AF8585608585AFFFAF61855A
%5A5A7E5A53295A608585FFA985618560AFAFAF85AF85AFA9FFA9AF85AF85
%AFA9AF85AF85AFAFAF85AF85AF85AF85AF8585AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85855AAFFFAF8485A9FF848560A985AFA9A985AF85A985AF85AF85AFA985
%5A856085A9FF84855A5A2F2F2F856085A9FF84855A8585AFA9AF85AFA9AF
%85A985AFA9AF85AF85A985AF85A985AFA9AF85AF85A985AF85A9AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AFA9856085A9FFAFAF618585AFAFAFA9AF85AFFFFF85
%AF85AF85AFA9AF85AF8585618584FFAF856085618584AFFFA96085618585
%AFAFAFA9FFA9AF85AF85AF85AFAFAF85AF85AF85AF85AF85AFA9AF85AF85
%AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A960855A615A8585AFA9AF
%85AFA9FFA9FFA9AF85A985AF85A985AF85A984855A615AA9AFA9848584FF
%84855A615AA9A9AF85AFA9AF85AF85A985AF85AF85AF85AF85AF85A985AF
%85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%8585AFA9AFA9AF85AF85AFFD04FF85AFA9AF85AF85AFA9AFA9AF85AF6085
%6185A9FFAFAF6085618585AFAFAFA9AFAFAFA9AFA9AF85AFAFAF85AF85AF
%85AFAFAF85AF85AFA9AF85AF85AF85AF85AF8585A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AFA9AFA9AF85A985AF85A985FFAFFFA9AFA9A985AF85A985
%AFA9AFA9AFA9AF848560855A8560855A85A9AF85AF85FFA9AF85A985AFA9
%AFA9AF85A985AF85A985AFA9AF85AF85A985AF85A985AF85A985AFAF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AFAFAFA9AF85AF85AF85AFAFAFA9AF
%A9AF85AF85AFAFAFA9FFAFFFA9AFA9AF85856185608585AFA9AFAFAF85AF
%A9AF85AF85AF85AFAFAF85AF85AF85AF85AF85AFAFAFA9AF85AF85AF85AF
%85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85AF85AF85AFA9AF85
%A985AF85AFA9AF85A985AF85AFA9AFA9AFA9FFA9AF85AFA9A985A9858585
%AFA9A985AFA9AF85AF85A985AFA9AF85AF85AF85AF85A985AF85AF85AF85
%A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF
%85AF85AF85AFAFAF85AFA9AFA9AF85AF85AFA9AFAFFFAFFFAFFFAFAF85AF
%85AFA9AF85AFA9AFA9AF85AF85AFA9AFA9AF85AFAFAF85AF85AF85AFAFAF
%85AFAFAF85AF85AF85AFA9AF85AF85AF85AF85AF8585AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85AF85AF85A985AF85A985AF85AFA9AF85A985AF85A985AFA9AFA9
%FFAFAFA9AF85A985AF85A985AFA9AF85AF85A985AF85A985AFA9AF85AF85
%A985AF85A985AFA9AFA9AF85A985AF85A985AF85AF85AF85A985AF85A9AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AFA9AF85AF85AF85AF85AF85AFA9AFA9AF85AF
%85AF85AF85AFAFFFAFFFAFAF85AF85AF85AF85AFA9AFA9AF85AF85AF85AF
%85AFA9AFA9AF85AF85AF85AF85AF85AFA9AFA9AF85AF85AF85AF85AFA9AF
%85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85AF85AF85A985AF85
%AF85AF85A985AF85A985AF85AFA9AFA9AF85AF85A985AF85A985AF85A985
%AF85AF85AF85A985AF85A985AF85AF85AF85A985AF85AF85AF85A985AF85
%A985AF85AF85AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AFA9AF85AFAFAF85AF85AF85AF85AFA9AFA9AFAFFFAFAF85AF85AFA9AF
%85AFA9AF85AF85AF85AF85AFA9AFA9AFA9AF85AF85AF85AFAFAF85AFAFAF
%85AF85AF85AFA9AF85AFA9AF85AF85AF85AF85AF85AF8585A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85AF85AF85A985AF85A985AF85AF85AF85AFA9
%AF85A985AF85A985AF85A985AF85A985AF85A985AFA9AF85AF85A985AF85
%A985AF85AF85AF85A985AF85A985AF85AF85AF85A985AF85A985AF85A985
%AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85A9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFFDFCFFFFFFFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 15 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">banner_on_blue_bg</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-01-17T16:24:57+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-01-17T16:24:57+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-01-17T16:24:56+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7l6kC1D+pUUPwIWFD71G&#xA;/sM3EpEdHV4dPxi+KI95H61V4o9vSZpPGq0/icQT1aTEdEDf6pp1jdR29zOsbzP6cXLarEFgpPQH&#xA;iK/LDE2y8I9E/wBCjdNQowIrGSKilRUbjMbUkGHxbtKCJ/BkOa92TsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYTm6dExz8z7nWLDy1p99pt5LZiK9WS9u&#xA;IImn9OBYJf7xF6qz8F6ilRuOuRx0ZEEOVAAAE8vL3bMCm8yXHnRPL2iQOV1eWQ3Gp3VuNo4p1BBe&#xA;vw1O7BOoVct4eCz0RAXu940l2bVCWJJ9Mip37jMHOKh8WzTm8nwT7MB2DsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYt+hdT/3z/wyf1zafmId7qvy2TuV&#xA;RpeqBOHobUofjX+DZE5sfeyGDJ3IKy8pfUZnmtdOiilk+06CJTQUoPhpt8IwnUQPX70DT5B0TjSr&#xA;G9hvTLPHwXgRWqneo8Ccoz5YmNAt+DFISshOcw3NdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirDxc3bGglkJ/1j/XNxwR7g6YTl3lRvdWayUm6nlU7AKvq&#xA;O1WYKPgQM3U0wcMT3JufmrLcXjiqSyMCSBRidwaEbHxx4Y9wXin3lG6TPO08oeR2Aic0LE77ZTni&#xA;ABt1bdPMkmz0Sm81n6ooM1y4dldoogxMknpryZY0rVmp2GX8Ee5pEpHqW7TWDdJWO5cSqiyS27sV&#xA;liDio9VCap9ODgj3JJn3lQPmJReyWRuJVuIuBaFxKjuHrQwAr++pT4uBNMl4cauh9jIcfenugXcs&#xA;tzLWR24xNVXJqrVU7q24ND3zG1MAIjbq3aaUuI33JZc+Z9Sgk9P0r2bp8cFrJKm/gyIRlvgY/L5t&#xA;QzZPNWTXtRNoLqV5beLizkTx+kyqtallcAjpg8DH0U5sg6pHov5h3t3evZ6hNFYzHnJATLGytAsr&#xA;RrIxIHEGg+8eNMlLTwAuk+NkvmzHR766nugsk4liZC6FaEEbUYEDvmLnxxEbAb9PkkZUSlF95j1G&#xA;3uXiWO7mAqQ1vbvMoAJ2LIrCu3TL44Mdb182g5slmrXW2u6pPAZj69uikg/WITCfhAJNJFU0364f&#xA;Bx+SPGyeaG1zzkmhwW0+o3jLFdSiJWhQSlCY2k+NV+L7KdFBO42xjgjK6HJmMk+9E+VvOdlrmr3F&#xA;pY3wvUs6Cd0AMdXDFQrgUb7H7JyrPgEYXVFnhyyM6uwide1q9sbyRYhPIgpRLeFpiPhBJIRWNMOD&#xA;FAxBNIz5ZiZAU7bVdYngWcCeNWrRZojG4oabq6gjJnFi8vm1+Ll80DL51tIJb2G41aKCfT97uKUr&#xA;GUFFPL4wtV/eLuKipp1w/l47enmnxclc00t9TvJba0uo7v1YrniygAfYahB6dwcrOOFkVyZeJPY3&#xA;zXeYdYvLG4PpCaRAF/dW8TTPv34orNTI6fFAxsstRlmJ1FB2euatdQNOFuYUVipE8DQnam9HUGm/&#xA;XLjhx3W3zafGy+azUfMFxZWjT39yYbbYMzrseZ4gUAJNSe2A4cdcm3BLNOYjE+o8rofaVaLVb826&#xA;SQyt9XKrwYIFUAioG4FMRhx9zHJlyxkQTuDv72V5rHZOxV2KuxVj3mLV7ywnHoiaReK/ureJpnqS&#xA;d+KBmzO0+KMo2XB1GSYlUUpTzXqTSIhgv05kDm9nKqLU0qzFKKPc5f4GPy+bR42Xz+Su3mG5UI31&#xA;sMklQjrxYEgEsAQP2ab+GajW9p6XTTEZg2f2+fk7DFo9VMHpXfsfu80S2paosYkM+zEgAcSdtq7D&#xA;Njh8HLESjuC4WSeWBqR3Q1oIjMPUJCgEjj1JzIyXWzRjq93meu6jqOn+Y7uO5iaKO7uHWG548Z/Q&#xA;VfWURSdfT9WP7NePXv0ujEEbNg/X9jMPJclykF3KsItofUPoeknBCeT8mFNi3QE+2++VZIjYc0CR&#xA;5sl0b/eiX/jC/wDDKtRyHvZab6j7nlHmi+1HTfNtxM8biwuRBHBIyvxBdPSmaFxxKvR1B4HwrmYI&#xA;gjza8d/M0q2y3+r2uo2lnbmY/UGhWtasTFJFGsjsTy5FNuVfamAgRo+axJkxG88w65Gt5o2pQPNc&#xA;zXBW0S9tTLdQhSjwJAX9ORKrKabNQU4qK5dCIsEfe3SNG/6T1v8AJ3T9ds7K+bW43ivbt2uOMzmS&#xA;UqYoU5SEs7BmZCSpO3gOmYGuIIFcr/WulviN9ycetMImiWR0RwVPFipFRSoI6H3GTMAebRjyygQR&#xA;0+XySzzPHqVx5Zv7WwS4uru6jaOedWDmGNl41EXVu+wHjkcYiJ7mg5ObNLJG+EfAAPMtK823mgxX&#xA;lqI1gtCqt+5Mcj+rLyYvGZRCsaFkfZ+XAnaozKlh3F82kTjKOz2vyfFbRQ2S20YihNorLGCTTmFY&#xA;1NBU1O5zXam+E+9u0/1/BReeaOaQI5UFmqAduvhmQIggW4xmQTTF/Ndpf6tot7aQ3N7bvZNbSNOs&#xA;ir6saMWaONiSeQX4i/HrxrWhGGAEZe9yM2oOQbiIruAH4/R82J3+na5rdjLbR6bNBq+mXXIzzKit&#xA;LaxetAqpJT0uklft7cW/lWtwIHXm1RNHdkv5JeWde0WSeTVwEa5CLbQ8+bJHEr9afCK+pWgPz3yj&#xA;XTEommenvjHxZxq8kkeqTFGKn4a0NP2RleAA4xaNRIjIaSfUoNRbS39G5n9VgI4HWUBloftGqyV6&#xA;dWRt/pOTAiDybMmolkjuIj3AD7nlfnry75ll8x35stOe5F0YntXMayKeUUUbGWR6xrxKH7RFN26U&#xA;OZOOUaFtMvp87eoaJa6hbSW0FxzSO3t7eEQl+SCRFVXcDiKcuAp8RFN6AnfGJG/xT3J9rjumpFkY&#xA;q3FdwaHplWmFwZaokT2QVoHMpaSeVlHKiFiw+NuR2779K9B0yyUAOQZnVSnHhIjW3IC9vxv38+aW&#xA;+b7ewfTWuL+5mVzJG6WpYFneB0kRYhRk4lkFQykeNMrgJXUXYabLiMRDIAASPV1G/f3fLZF6dc6n&#xA;LZyLqChJ2pLwUrwQOCOACnqvHc0+nrlgiLFOv1IAMqNjiNe7oeVb/wBrOM1TsHYq7FXYqx3XXdNQ&#xA;DIxU+mNwaHqc2OlAMPi63VEie3cgLX1Obc55nX4yEZywq7cj18D08O2TljA5Mvzcpx4SI9OgB293&#xA;29/Pmw7TodS0mzM+p3U7SXTTWkNqjc1RvVZVkG0jqW5EbN0I25VzU9sdnHVQrHwxmOv07VRHI/i6&#xA;PftNLm8OVjjyARHFtxb8+/kBQ37uS/yrYeYLDzJrVtc8/wBFMkcsIehUSsADwoSKkA+pTvQ5sdFp&#xA;hgwwxg8XD1+P4pyu2dTpc2lxShXj78Vd39L9HxZkthqCmogev+qcvOWHe8yMU+4rptNkugovbA3X&#xA;BuUYkRWCmhWoDq+9DT5ZDjj0IDYIz6grmtNQOy28gToFIrQfQBhE4d4YmE+4ojSrO7jnkMkTKDEw&#xA;BII3PbK8+SJAo9W3BjkCbHRAS6PLcRtBdWbTW705xsnIVBqpoe6ncHsemWnLHvao45g8iqxabcW0&#xA;SW9naNFbRgCOMJSm1O3fbr1yInDmTukwn0Bpo6SzTC7exrfqhijufRUyLG3VBIRzCmpqBth8SPK9&#xA;vengnXIo7RbO6iuZDJEyAxMoLCgqSMp1OSJiKPVs02OQkbHRRXQr8EEqpHhyplh1MGA0s3TaFfSs&#xA;HKKsoJPqq5D7kE/F1oabjwyHjwZ+BkYz5k/KGx166Se4VoyAFl9ORQZFVzJRiVJHxMfskbfRS2Gs&#xA;jEIOnycujMdH0q4s5UDIqQxx+miq1aAUAG+/QZjZs0ZRoNuDDKMrKFl0O/aV2AWhYkfF4nLo6mFN&#xA;MtLMlcukakIjFwjKEhiCRWo6b9RT2wHPAm0jT5AK2Qt15VnurRLWeMNCknqKokKCo3A+DjUVrWvW&#xA;u+EaiANo/L5KpM9P06/ivEln48FBGx8RTKsuWBjQbcWGYkCVPUtIvLi9kmjC8G40qadFAyWHPGMQ&#xA;CxzaeUpEhAXnlW4vLZ7a4QNDJTkA5Q7b7MpDD6Dln5qDWNLN0/le8mnt5SqD6sKRqOJ7U2JBZf8A&#xA;YkV77YBqIebL8vk8l0PledNSa/8ATX6xKFWR+ZPwqR0UniOg6DE6mFUo087R+q6Vd3N2ZYgpQqBu&#xA;adMrwZ4xjRbM+CUpWEPHouoxmoVD/sssOogWqOmmGrnQ765aJpY0YxPzWrV34lf1HIjPANox5AD5&#xA;r30jUWUrwQf7LCM8A1nTzLIM17sXYq7FXYqk+raXd3V0JIgCvEDc03FczMGaMY0XC1GCUpWEPb6T&#xA;qcDl0VOVKAkjauWTzwkKLXDT5Imw1Lo19MVMsUblN15MDTI+LjbYDNGxE1fmuk0rUpAQyp4fawjP&#xA;ANZwTKEGrakSAJiSegAH9Mt8CHc0/mJ965NT1RmZRMQU+2CFFK9K7e2A4sY6MhlyHq0dX1CrBbgu&#xA;FNCwA60r4YRhh3IOeY6ovS9RvZppFklLARswFB1H0ZVmxRAFDq24M0iTZ6JYfMOofWRbj6yzGgEi&#xA;20rRb/8AFojMf/DZb4GPy+bUM2TzX3+uanZWslzM0vCNeRVVXkRWm3LiPvOAYcZ5BPi5O9Ts/MOo&#xA;XDMXuUjgaYQ2sxZQstVBNKgbg7UwHFAdG/JMgR4Z3fPaqN/qTnTLq+e6ljnkLqI2ZTSgNCKEbA5T&#xA;mhERBA6rgyTMiCeiSv5j1YXa2yw3coYqPXjg5RDl4uB275k+Bj8vm44zZD3r9T8w32m2b3d3JIkE&#xA;dPUfioCqWALMW4gKvUknIjDjPIJ8XJ3rrLWNYuC4kkEK+sYoXLKVkUCvMVUHsQR7YDjxjo35SRXD&#xA;O7G9iqO+3X33596a6Vd3z3xinkLKEJG1AelD0B75TnhERsBcGSZnRKTX/mPVLe6eKOC7uAKkPbwG&#xA;RBQn4SwHXbpmRHBjrevm0HNks1axPNN36aPcyS2PqSelEl2ghZ2JVQFDgVqzgDxOHwMfTdHjZO9J&#xA;o/zMlivtQi1Qy6fa2ckscdzKqkP6IjLNReRC/vg1SNlofGhOmh0C+PPvZZoWsTX08Lrci4tZlLxy&#xA;IVZGWlQVZdiPllGfFGMbAbcGWZnRLXmLWb6wuD6CTzLRf3VtH6rioJLUArTBp8UJRsp1GWYlUUNb&#xA;6xrE1uJys8CmtVmi9NhQ03BG2XeDjvo0+Nl80H/jSFZTG9+AqhS8o4MF5ECjKPiUio+0BWu1cHgR&#xA;/msvGl/ORlrrl5cJHNFcc4ZArKwAoVbcdsJwQ7mIz5O9FeYdXvrG4b0FmmUBf3NvH6r79+IFaZTp&#xA;8UDGy3ajLMTqKSnzhqwBLWOpKo6sbRgP1Zf+Xx+XzaTmy+fyRllr+p3cCyr68PMkCKaMJJsabqR3&#xA;xOCA6IGfJ3oqbUNXhcpJKVYUJFFPX5DIxxYyLAZSy5ImiUZ5j1G7slje3EjnixMUKc3ahH2V6nMf&#xA;TY4yu3I1OSUSOFjx83auELGx1IU3INowNKA16e+ZXgY/L5uN42Xz+S7XfNt7pGly6hPI3pxoXHOi&#xA;KaKSAXKkLypxBO3Igd8Rp4E0A2YcplICcuGJ61dedKHl/wA9T6xZwygzQTTh3jjKhkKRsFZhIF4H&#xA;4jT54y00AaoN+SExA5IS4sYlw3sP9jzZ1ZSPJZwu5q7ICx9yM1uQVIgN+IkxBKtkGbsVdirDrV3S&#xA;dWQ0YdD4ffm4mLDpYGjs8k/N/UL7T/NUlxZTS29yLKGl1CeLAepLUGQGoDHt+0fll+nAMRfm2Hay&#xA;y78n545vJMk/F39a7uGR5ZDI/wAT7szbF2NN2ynOPWFiRwlm+jf70S/8YX/hlOo5D3p031H3IP17&#xA;gQtEkzorKV+FiCOXdfA5aYA8wwx5pQII6dOiUeaNZ1vSNJ+tafC13NPJxkuJucq2ycTWT0Y6PIo4&#xA;/ZTffx2MBjF05GTUHJRIEfcKeTyaf5284XZshDbT2kUokGvTpKkgDFZDHEgZVZfh4UCKCy/EFfLx&#xA;wx339zlHWQjhOLgjxfztu++67/zvLk908l6XPplutpPdSXciQv8AvJWLMAWUhAzFm4r0XkzGnUk5&#xA;hag2Pi42D6j7lESzCNo1kZUYEEKxU7+BFCD7jMkwB5uLjyygQR0+P2HZIvOWva1ommLLptqbie6J&#xA;D3t008sNsAp4OYo+cjBm4rRB3r45EQjbkyzyyVxV8gPuAS2+1W917TP0ZotvRLqMjUJ5G9SzVyK1&#xA;gZSrPU8irJQ1FKoaUEIUeIuTLPDwjGhxbUQPPe+/YftZx5O0+6sFhtbq7e9mjjes8pq9CwIBJJJA&#xA;6DkS1PtEnfKdQbj8XH0/1/BRneTnNGruiuzBuDFTvtsVIIPvmQIggW44yShKx3+/7Dsw/wDMq78z&#xA;R28K6M80Onvya61BI/rt5FIF4I0ULuiqhrRuJLb/AAgmuDHADnzbsmbxCLNfAD7q7/e880zy7r3m&#xA;e7vIxE6Qx8ki1YKyOSUCu4Esay/EHq5cVZfs8jVzfxcIDVKiS9f/ACx0Oz0lAltO87Tu8k7OONX4&#xA;cefEKqjkoH2aA05UFd8XVH0ltwEmYJ82Q627pqLFGKngoqDTI6YAw3Y6okT2S8XqWaS3lw8kixow&#xA;CM7spLmv2S3Ctdlr06DLJYh0ZDVSlGjVf1Y+7mBf6+fN5rqOm6vYoZWJigvrgBZouVGQ8afApqdy&#xA;SOh/a9syYkGg45sWWc+XDqEFrFatAUs5F9YysoDlyQFDUZj9nc/rymYBN9WQJqmQ647pqRZSVPFd&#xA;xt2ynTC4NmqNTQVqGaarSyH7WzSSMvxtyNVJI69Ntu2TlADcBl+anMcJqtv4Yjl5gX7+/md2HeYI&#xA;fNLatOlpNdFppYzaXEU6wpboprx9H1FV1boT6THv8XdjH5PV6PtLs6OCInGPHEbgwsyPfxVY8qkP&#xA;gzaQOIAJDWQKA70pybuab0xjzeQyEb0KTDzGzLLbspIYBqEbHtlGkGxbtYaIYZ5r8x3Gi6c11bq1&#xA;3fSOOFu9wY0AC0ZynL4wqqTwUfF8zmSMQJZYp5pYzUbhEbngG3vlV/b5PJLy880+YNfY3t++rTRI&#xA;/wBWaxd4ordWYxcDFJ6P1R+PKpl+M9uWZEeGMdh8/wAbtcIR4rySPCB/Dz93cPxtez0jyJ5Q1LR2&#xA;OqXV49416zrJEk5aJVIBDu0nxXMi8EUSkBuJ+zTMaUt6/H7ESG1n8fretad/vBb/AOov6s1ub6y5&#xA;2H6B7kRlbY7FXYqwxBIrBuJNPY5uTRdILCG1XQNF11I49Yso51hJMRdWqOVOQDLQ0am4wCRj9JbA&#xA;b5ouNVhgW3ggWKCJeEUca8VVRsAABsMAA52gyKM0WNzdSChBaJgK+JplWoI4R723TA8R9zv0DqHg&#xA;v/BY/moI/KTVDpGqFOBCEeJNTt0yPj42f5fJSy30G9t4wlvDFCorshpWvXE6iB52gaeY5UjdM068&#xA;gnd5gtDGUFD3JH9MqzZYyFDvbsOGUTZ7kD+gdQ8F/wCCy/8ANQcf8pNfJo+pSxskqpIG2JZqmlKZ&#xA;EZ8bM6fIVlv5fu7ZBHawxwxgU4IQAPGgAFMTqIHmgaaY5I7S9OvILv1ZwvHgV2NdzTKs2WMo0G7B&#xA;hlGVlBy6HftK7ALQsSPi8Tl0dTCmmWlmSh4/KkqXUl2IVNxKvB3LnoBTYVoDt1G+J1MT1UaaaKg0&#xA;a9t4vSt4YoY6ceKGgoTUj5V7ZE5oHckshgmOQCI07TLuG8SWREVFBrxPiKZDLmiY0GeHDISstarp&#xA;V3c3ZliClCoG5p0w4M8YxornwSlKwh4tG1CNq+mjezHbJy1EC1R00x3KI8sy/W2uWgjZ2AB+IDZa&#xA;kCoFaVPTH8xGqtl+Xn3BE/orUSFUogUEUAbYb9sHjwXwJquq6Vd3N2ZYgpQqBuadMjgzxjGizz4J&#xA;SlYQ8Oj6lE4dVTkNxVhk5aiBao6aYNqh03VCxYqpYmpPLeuR8bGy8HItfSdSdSCib/5WSGeAQdPM&#xA;ozWdPubtojCAQgNamnWmU6fKIXbfqcMp1SVHyxPJPFNNEHaFuSUlZNx05BSAwHWjVy6WeBThlnxw&#xA;MAfTLmFOTyhzK/6LEqq/qcFbipPgQtOQ2BodqjeuP5iPeWmOGYBFR3+z3IptD1E3LT0+0nDgZDxA&#xA;rWtOn4fLAM8Ag4JlPbOJ4rWKN/tIoBp4jMPJK5EubjjUQCrZBm7FXYqxzWZrhdQkWORwoC7KSB09&#xA;s2OniODcOt1MpCZopfNe3UMZkeSUIKlmq1AAKk/QMo7Q1ePTY/EMbHl97LS4Z5p8INKdjqk96QsE&#xA;k3NhVUJYEgioI36UzV9m9v4NVPg4OAnlfVzdX2Zlwx4uLiTF7i5/RkTeo/MysCeRr0Gb0RHGdujr&#xA;jOXhjfqhhNfHpJIaCp+JumWcMe4NXFPvKnd6j9UNslzdvFLeGluHLKrmlQquTxLkAngN6ZGIiSdh&#xA;szPGADZRlpNdBbnnI9fQLLViafEu/XIzjHah1ZY5S3s9EvvNVmtIPWklkK1CgB6Enqacio2AJywx&#xA;iOiMIM5UZcPPck1sL8113qnoRAi4llnA5NChJb4m4qFFamp2r0yFDfYMoRMiBxVfU3XOlTTNTa7a&#xA;3nguWlgkZeLBiQRyoe+GcI0dvsYRlISG/wBrMc1TtnYqwS/TVjPLJa/U1t05F3upniYMCT0VHHHp&#xA;vXNuJgAXbqI4pTlUedoHVtRv9J0C+1O5ihu5rNGc29jIZdgARyLLGRseTbfZ33yUJiR2Tl088dcQ&#xA;q2J3H5i6vYyNe32lONJRUF2sZLTWzleR57AUpIlfvFQwy3hHfuwELek+V7+w1F7K/wBPLtZ3UPqw&#xA;vIOLMGUnlx7D2zC1F8BtvwADIKZZmudk7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWNa20y3&#xA;ty0ArMI/3Q2+3w+Hr75sMH0B12c/vCxPSr7Vb+exk1BZ7S5s1mN8ApjimeMBQnpl5AvItzTkeXwn&#xA;p2sz4YTiQd4lu02s8OMo8IJPXrEg3see4sV1RGjX9rqmpzz21yZI4FUACvFBxK8P2QvKgPTft0zk&#xA;+zOxNRj1Hi5fTw1Q2NiiDVGgORO2/k7HWdo4p4uCG98/nfd8t2QSsE0yNiCQszkgAk7KOgGdWPrP&#xA;udJ/AP6zzSw/M3UNU15xe6fDa+X7eKYXummRhqiCNkCXEkQ4KYiDX92zgitWbpk5Y6G3NvwyIkJj&#xA;+H8Wp+a9XbzDaNpOkyCHQpZUP1m9Q+jN6b+o3CHZpfsn7IUct2ZWGHFAQ3PN2c45NWAcceKcT6qG&#xA;1dL6fP8AYJ15Ot4rfQBDDfyalAts5iu5JPVqplBorEseK9ACar0JJFTDJzH9b9DqsmKeOUoTBjID&#xA;kUs806jp9vBFHcW090x/eejDVuXFhQ0X4tjQGnSu9K73RiSedOPEgDlbF7BNQubu51WaZXN1FIDa&#xA;oQszhaiNOMdGbgu4Ck0+eSsAAdzttQMMjknCE+AxjXPaXUy95+9nuhKUaGKOVHsoXjjtUWpaNVpW&#xA;N613Tp1J8fAUyNgkuFlOL0CAIkPq3294Z5mpc92KsMuADNKCKgswIPzzcx5B0sjUkP8AWboetYWN&#xA;vRXirLLwHcnlxqONVWhG5qevTK5x6lujkJ57sAvvy5gu55YbdJY/rZjS6UMygrGOJZt/tLQ7/tCv&#xA;Sgy+Ob+cwIo+k/jq9I8o+X9N0a5toLNCrCBIZGLEhhDHxWinZQKnpmJnkTA23Ya4wzLNc7F2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksb1hwmpyE+C/8RzY6cXAOs1BrIUo1FbmaOllObWU7NIV&#xA;aQmrA1+3H4HatDXplnAW/R6rDjJOSHHfnX60YLhAiKAaqoVmJqSQOvt9GEQcSWQHkFcuF06F6VAm&#xA;c0P+qMhXrPuZXUAfNjmqeVfL2o3cd1PZRvLE3NWdEc8iKEnkDWvc9T45cLAaSe5X1LRrW6t4o4ZJ&#xA;bWWGpjuIiokUleNVLBqGm1aVp3yPBfN2Oh7UyaUngoiXMS3Br5JhoFhBp+nSWUFfSgtmVSaVNXBJ&#xA;226ntt4ADI5Onva82qnqMk8k/qkP1LJ7PTby29G+gSdQ3JQ4rQjuKZM8V7OJCQFHqEjtfI2hRap9&#xA;ckJeJSWig+IKpPUgAhR0G6gE9+9WzWzus3b2bJAxPCOMVKQG8h5/r+VUGSW0drFPbxWqCOCN1CIB&#xA;QAVFOmRN8JvudNGuIV3svzUu4diqTv5dRnZvXI5EmnHx+nMwasgcnCOjBPNtPL/D7NyR/sR/XAdV&#xA;fRI0ldWzoJLFjcsWPU8RX9eP5ryX8r5qtppH1e4WYzFyoIAK06injkMmo4hVM8en4ZXaY5juS7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUHc/or1T9Y9L1dq86V9suh4lbXTTPw79VWpf7gf+KP&#xA;wyX73zYfufJ3+4H/AIo/DH975r+58lQ/oj0Fr6Xo8jx6ceVN8j+8vrbL93XSlP8A3A/8Ufhkv3vm&#xA;x/c+Tv8AcD/xR+GP73zX9z5L4/0PR/T9GnH95Sn2ajr7VwHxOtso+H0pZ/uB/wCKPww/vfNj+58n&#xA;f7gf+KPwx/e+a/ufJcn6E5rw9HnUcaUrXtifFre0jwr2pH5juQ7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:416eec19-72db-1042-9a5e-b4bdd730665f</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:416eec19-72db-1042-9a5e-b4bdd730665f</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:201650fa-6700-7641-9c67-adbd4f0de4fc</stRef:instanceID>
            <stRef:documentID>xmp.did:201650fa-6700-7641-9c67-adbd4f0de4fc</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:416eec19-72db-1042-9a5e-b4bdd730665f</stEvt:instanceID>
                  <stEvt:when>2019-01-17T16:24:57+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>РћС‚С‚РµРЅРєРё СЃРµСЂРѕРіРѕ</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=156 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=162 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>162</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=232 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>232</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=224 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=184 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>134</xmpG:red>
                           <xmpG:green>184</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=121 G=177 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>121</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=105 G=157 B=209</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>105</xmpG:red>
                           <xmpG:green>157</xmpG:green>
                           <xmpG:blue>209</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=9 G=46 B=99</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>9</xmpG:red>
                           <xmpG:green>46</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=79 B=137</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>79</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=61 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=6 G=3 B=62</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>6</xmpG:red>
                           <xmpG:green>3</xmpG:green>
                           <xmpG:blue>62</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=44 G=38 B=96</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>44</xmpG:red>
                           <xmpG:green>38</xmpG:green>
                           <xmpG:blue>96</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=25 B=187</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>25</xmpG:green>
                           <xmpG:blue>187</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=45 G=9 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>45</xmpG:red>
                           <xmpG:green>9</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=91 G=4 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>91</xmpG:red>
                           <xmpG:green>4</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=101 G=7 B=250</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>7</xmpG:green>
                           <xmpG:blue>250</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=183 G=0 B=131</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>183</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>131</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=211 G=0 B=141</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>211</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=229 G=115 B=181</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>115</xmpG:green>
                           <xmpG:blue>181</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=226 G=64 B=152</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>226</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=44 B=156</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>44</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=253 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>253</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 2</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=180 B=42</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>42</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=162 B=0 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>162</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=191 B=48</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>48</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=215 B=98</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=184 B=224 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>134</xmpG:red>
                           <xmpG:green>184</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=9 G=46 B=99 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>9</xmpG:red>
                           <xmpG:green>46</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 3</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=239 G=152 B=132</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>239</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>132</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
600 400 mo
-.000300407 400 li
-.000300407 .000300407 li
600 .000300407 li
600 400 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.261051 .0218814 0 0 cmyk
f
536.826 154.518 mo
536.826 154.518 li
536.826 154.518 li
535.843 153.951 li
535.718 153.878 li
518.09 143.7 li
535.718 153.878 li
564.788 137.095 li
535.718 120.312 li
506.649 137.095 li
505.542 136.455 li
535.718 119.032 li
567.003 137.095 li
536.826 154.518 li
534.611 154.518 mo
520.076 146.126 li
534.611 154.518 li
534.611 154.518 li
.159609 .0111391 0 0 cmyk
f
476.473 154.517 mo
476.472 154.517 li
486.97 148.456 li
476.473 154.517 li
475.365 153.877 mo
475.365 153.877 li
446.294 137.094 li
446.295 137.094 li
445.324 136.534 li
445.187 136.454 li
475.364 119.032 li
475.64 119.193 li
505.541 136.455 li
504.434 137.095 li
475.364 120.312 li
446.295 137.094 li
475.365 153.877 li
495.441 142.287 li
475.365 153.877 li
f
506.649 171.941 mo
506.649 171.941 li
519.376 164.593 li
506.649 171.941 li
504.434 171.941 mo
487.99 162.446 li
504.434 171.941 li
504.434 171.941 li
505.542 171.301 mo
505.542 171.301 li
491.007 162.909 li
505.542 171.301 li
524.653 160.267 li
505.542 171.301 li
536.826 154.518 mo
535.995 154.038 li
535.843 153.951 li
536.826 154.518 li
534.611 154.518 mo
520.076 146.126 li
505.542 137.735 li
486.97 148.456 li
476.472 154.517 li
475.365 153.877 li
495.441 142.287 li
504.434 137.095 li
505.542 136.455 li
506.649 137.095 li
518.09 143.7 li
535.718 153.878 li
534.611 154.518 li
f
536.827 189.364 mo
536.826 189.364 li
536.827 189.364 li
535.857 188.803 li
535.719 188.724 li
506.649 171.941 li
506.649 171.941 li
505.652 171.365 li
505.542 171.301 li
524.653 160.267 li
534.611 154.518 li
534.611 154.518 li
535.718 153.878 li
535.843 153.951 li
535.995 154.038 li
536.826 154.518 li
536.826 154.518 li
567.004 171.941 li
536.827 189.364 li
506.649 171.941 mo
535.719 188.724 li
564.789 171.941 li
535.718 155.158 li
519.376 164.593 li
506.649 171.941 li
f
416.118 154.517 mo
416.118 154.517 li
433.746 144.339 li
416.118 154.517 li
415.01 153.877 mo
385.94 137.094 li
385.94 137.094 li
384.968 136.533 li
384.833 136.454 li
415.009 119.031 li
415.286 119.192 li
445.187 136.454 li
444.079 137.094 li
415.009 120.311 li
385.94 137.094 li
415.01 153.877 li
429.545 145.486 li
415.011 153.877 li
415.01 153.877 li
446.294 137.094 mo
445.463 136.615 li
445.324 136.534 li
446.295 137.094 li
f
446.296 171.94 mo
446.296 171.94 li
460.83 163.548 li
446.296 171.94 li
445.188 171.3 mo
416.118 154.517 li
416.118 154.517 li
415.228 154.003 li
415.011 153.877 li
429.545 145.486 li
444.079 137.094 li
445.187 136.454 li
445.187 136.454 li
445.324 136.534 li
445.463 136.615 li
446.294 137.094 li
475.364 153.877 li
474.257 154.517 li
445.187 137.734 li
433.746 144.339 li
416.118 154.517 li
445.188 171.3 li
457.915 163.952 li
445.188 171.3 li
445.188 171.3 li
f
476.474 189.363 mo
476.473 189.362 li
491.007 180.971 li
476.474 189.363 li
475.366 188.723 mo
446.295 171.94 li
446.296 171.94 li
445.36 171.4 li
445.188 171.3 li
457.915 163.952 li
474.257 154.517 li
475.365 153.877 li
476.472 154.517 li
476.473 154.517 li
491.007 162.909 li
505.541 171.301 li
504.434 171.941 li
487.99 162.446 li
475.365 155.156 li
460.83 163.548 li
446.296 171.94 li
475.366 188.723 li
485.515 182.863 li
475.366 188.723 li
475.366 188.723 li
506.649 171.941 mo
505.818 171.461 li
505.652 171.365 li
506.649 171.941 li
f
506.651 206.785 mo
506.65 206.785 li
526.726 195.195 li
506.651 206.785 li
504.435 206.785 mo
489.901 198.394 li
504.435 206.785 li
504.435 206.785 li
505.542 206.146 mo
487.914 195.968 li
505.543 206.146 li
515.994 200.112 li
505.543 206.146 li
505.543 206.146 li
536.826 189.364 mo
535.996 188.884 li
535.857 188.803 li
536.827 189.364 li
534.612 189.364 mo
505.542 172.58 li
491.007 180.971 li
476.473 189.362 li
475.366 188.723 li
485.515 182.863 li
504.434 171.941 li
504.434 171.941 li
505.542 171.301 li
505.542 171.301 li
505.652 171.365 li
505.818 171.461 li
506.649 171.941 li
535.719 188.724 li
534.612 189.363 li
f
536.828 224.209 mo
536.828 224.209 li
536.828 224.209 li
535.913 223.681 li
535.72 223.57 li
517.587 213.1 li
535.72 223.57 li
564.79 206.786 li
535.719 190.003 li
526.726 195.195 li
506.65 206.785 li
505.543 206.146 li
515.994 200.112 li
534.612 189.363 li
535.719 188.724 li
535.857 188.803 li
535.996 188.884 li
536.826 189.364 li
536.827 189.364 li
567.004 206.786 li
536.828 224.209 li
534.612 224.209 mo
525.046 218.686 li
534.613 224.209 li
534.612 224.209 li
f
355.764 154.516 mo
355.763 154.516 li
371.783 145.267 li
355.764 154.516 li
354.656 153.876 mo
325.585 137.093 li
325.586 137.093 li
324.578 136.511 li
324.478 136.453 li
354.655 119.031 li
384.832 136.454 li
383.725 137.094 li
354.655 120.31 li
325.586 137.093 li
354.656 153.876 li
365.154 147.815 li
354.656 153.876 li
354.656 153.876 li
385.94 137.094 mo
385.109 136.615 li
384.968 136.533 li
385.94 137.094 li
f
385.941 171.94 mo
385.941 171.94 li
397.382 165.334 li
385.941 171.94 li
383.726 171.94 mo
374.159 166.416 li
383.726 171.94 li
383.726 171.94 li
384.834 171.3 mo
384.834 171.3 li
365.33 160.04 li
384.834 171.3 li
399.368 162.908 li
384.834 171.3 li
416.118 154.517 mo
415.287 154.037 li
415.228 154.003 li
416.118 154.517 li
413.903 154.517 mo
384.833 137.734 li
371.783 145.267 li
355.763 154.516 li
354.656 153.876 li
365.154 147.815 li
383.725 137.094 li
384.833 136.454 li
384.833 136.454 li
384.968 136.533 li
385.109 136.615 li
385.94 137.094 li
415.01 153.877 li
413.903 154.517 li
f
416.119 189.362 mo
416.119 189.362 li
435.23 178.329 li
416.119 189.363 li
415.011 188.723 mo
385.941 171.94 li
385.941 171.94 li
384.984 171.387 li
384.834 171.3 li
399.368 162.908 li
413.903 154.517 li
415.01 153.877 li
415.011 153.877 li
415.228 154.003 li
415.287 154.037 li
416.118 154.517 li
445.188 171.3 li
444.08 171.94 li
415.01 155.156 li
397.382 165.334 li
385.941 171.94 li
415.011 188.723 li
424.97 182.973 li
415.011 188.723 li
415.011 188.723 li
446.295 171.94 mo
445.465 171.46 li
445.36 171.4 li
446.296 171.94 li
f
446.297 206.785 mo
446.297 206.785 li
460.831 198.394 li
446.297 206.785 li
445.189 206.146 mo
416.118 189.363 li
416.119 189.362 li
415.111 188.781 li
415.011 188.723 li
424.97 182.973 li
444.08 171.94 li
445.188 171.3 li
445.188 171.3 li
445.36 171.4 li
445.465 171.46 li
446.295 171.94 li
475.366 188.723 li
474.258 189.362 li
445.188 172.579 li
435.23 178.329 li
416.119 189.362 li
445.189 206.146 li
459.724 197.754 li
445.189 206.146 li
445.189 206.146 li
f
476.473 224.208 mo
476.473 224.208 li
489.2 216.86 li
476.474 224.208 li
474.258 224.208 mo
459.724 215.817 li
474.258 224.208 li
474.258 224.208 li
475.366 223.569 mo
475.366 223.569 li
460.831 215.177 li
475.366 223.569 li
489.901 215.177 li
475.366 223.569 li
504.435 206.785 mo
489.901 198.394 li
475.366 190.002 li
460.831 198.394 li
446.296 206.785 li
445.189 206.146 li
459.724 197.754 li
474.258 189.362 li
475.366 188.723 li
476.473 189.362 li
476.474 189.363 li
487.914 195.968 li
505.542 206.146 li
504.435 206.785 li
f
506.652 241.631 mo
506.651 241.631 li
522.671 232.383 li
506.652 241.631 li
505.543 240.992 mo
476.473 224.208 li
476.473 224.208 li
475.448 223.616 li
475.366 223.569 li
489.901 215.177 li
504.435 206.785 li
504.435 206.785 li
505.543 206.146 li
506.65 206.785 li
506.651 206.785 li
517.587 213.1 li
535.72 223.57 li
534.613 224.209 li
525.046 218.686 li
505.543 207.425 li
489.2 216.86 li
476.473 224.208 li
505.544 240.991 li
520.078 232.6 li
505.544 240.992 li
505.544 240.991 li
536.828 224.209 mo
535.997 223.73 li
535.913 223.681 li
536.828 224.209 li
f
536.829 259.055 mo
536.828 259.055 li
536.829 259.055 li
535.795 258.458 li
535.721 258.415 li
526.154 252.892 li
535.721 258.415 li
564.791 241.632 li
535.72 224.849 li
522.671 232.383 li
506.651 241.631 li
505.544 240.991 li
520.078 232.6 li
534.612 224.209 li
534.613 224.209 li
535.72 223.57 li
535.913 223.681 li
535.997 223.73 li
536.828 224.209 li
536.828 224.209 li
567.005 241.632 li
536.829 259.055 li
534.613 259.055 mo
520.079 250.663 li
534.614 259.055 li
534.613 259.055 li
f
295.409 154.516 mo
295.409 154.516 li
309.943 146.124 li
295.409 154.516 li
294.301 153.876 mo
265.231 137.093 li
265.231 137.093 li
264.197 136.496 li
264.124 136.453 li
294.3 119.031 li
294.577 119.191 li
324.478 136.453 li
323.371 137.093 li
294.3 120.31 li
265.231 137.093 li
294.301 153.876 li
308.836 145.485 li
294.301 153.876 li
294.301 153.876 li
325.585 137.093 mo
324.755 136.614 li
324.578 136.511 li
325.586 137.093 li
f
325.587 171.939 mo
325.587 171.939 li
340.121 163.547 li
325.587 171.939 li
324.479 171.299 mo
295.409 154.516 li
295.409 154.516 li
294.401 153.934 li
294.301 153.876 li
308.836 145.485 li
323.371 137.093 li
324.478 136.453 li
324.478 136.453 li
324.578 136.511 li
324.755 136.614 li
325.585 137.093 li
354.656 153.876 li
353.548 154.516 li
324.478 137.733 li
309.943 146.124 li
295.409 154.516 li
324.479 171.299 li
343.59 160.265 li
324.479 171.299 li
324.479 171.299 li
f
334.921 177.328 mo
325.586 171.939 li
325.587 171.939 li
324.616 171.379 li
324.479 171.299 li
343.59 160.265 li
353.548 154.516 li
354.656 153.876 li
355.763 154.516 li
355.764 154.516 li
365.33 160.04 li
384.833 171.3 li
383.726 171.94 li
374.159 166.416 li
354.656 155.156 li
340.121 163.547 li
325.587 171.939 li
334.921 177.328 li
334.921 177.328 li
385.941 171.94 mo
385.11 171.46 li
384.984 171.387 li
385.941 171.94 li
f
401.436 196.561 mo
401.436 196.561 li
403.452 195.397 li
401.436 196.561 li
416.118 189.363 mo
415.288 188.883 li
415.111 188.781 li
416.119 189.362 li
413.904 189.362 mo
384.834 172.579 li
372.366 179.777 li
371.258 179.138 li
383.726 171.94 li
383.726 171.94 li
384.834 171.3 li
384.834 171.3 li
384.984 171.387 li
385.11 171.46 li
385.941 171.94 li
415.011 188.723 li
413.904 189.362 li
f
444.082 206.785 mo
415.011 190.002 li
402.543 197.2 li
401.436 196.561 li
403.452 195.397 li
413.904 189.362 li
415.011 188.723 li
415.011 188.723 li
415.111 188.781 li
415.288 188.883 li
416.118 189.363 li
445.189 206.146 li
444.081 206.785 li
f
461.79 231.407 mo
461.79 231.407 li
464.3 229.958 li
461.79 231.407 li
476.473 224.208 mo
475.642 223.729 li
475.448 223.616 li
476.473 224.208 li
474.258 224.208 mo
459.724 215.817 li
445.189 207.425 li
432.721 214.623 li
431.614 213.984 li
444.081 206.785 li
445.189 206.146 li
446.297 206.785 li
446.297 206.785 li
460.831 215.177 li
475.366 223.569 li
474.258 224.208 li
f
483.435 255.035 mo
483.435 255.035 li
486.433 253.305 li
483.435 255.035 li
484.409 253.194 mo
484.41 253.194 484.41 253.194 484.41 253.193 cv
491.709 248.979 li
484.409 253.194 li
504.436 241.631 mo
475.366 224.848 li
462.898 232.046 li
461.79 231.407 li
464.3 229.958 li
474.258 224.208 li
474.258 224.208 li
475.366 223.569 li
475.366 223.569 li
475.448 223.616 li
475.642 223.729 li
476.473 224.208 li
505.543 240.992 li
504.436 241.631 li
f
506.652 276.477 mo
506.652 276.477 li
519.702 268.943 li
506.652 276.477 li
505.544 275.837 mo
485.842 264.463 li
485.842 264.462 485.842 264.462 485.842 264.462 cv
505.545 275.837 li
524.162 265.089 li
505.545 275.837 li
505.545 275.837 li
536.828 259.055 mo
535.998 258.575 li
535.795 258.458 li
536.829 259.055 li
534.614 259.055 mo
520.079 250.663 li
505.544 242.271 li
486.433 253.305 li
483.435 255.035 li
483.934 254.438 484.26 253.815 484.409 253.194 cv
491.709 248.979 li
504.436 241.631 li
505.544 240.991 li
506.651 241.631 li
506.652 241.631 li
526.154 252.892 li
535.721 258.415 li
534.614 259.055 li
f
536.83 293.9 mo
535.722 293.26 li
506.652 276.477 li
506.652 276.477 li
505.762 275.963 li
505.545 275.837 li
524.162 265.089 li
534.613 259.055 li
534.614 259.055 li
535.721 258.415 li
535.795 258.458 li
535.998 258.575 li
536.828 259.055 li
536.829 259.055 li
567.006 276.478 li
536.83 293.9 li
506.652 276.477 mo
535.722 293.26 li
564.792 276.478 li
535.721 259.695 li
519.702 268.943 li
506.652 276.477 li
f
235.054 154.515 mo
235.054 154.515 li
245.553 148.454 li
235.054 154.515 li
232.839 154.515 mo
202.662 137.092 li
233.946 119.029 li
264.124 136.453 li
263.016 137.093 li
233.946 120.309 li
204.877 137.092 li
233.947 153.875 li
254.023 142.285 li
233.947 153.875 li
233.947 153.875 li
232.839 154.515 li
265.231 137.093 mo
264.4 136.614 li
264.197 136.496 li
265.231 137.093 li
f
265.233 171.938 mo
265.232 171.938 li
278.282 164.404 li
265.233 171.938 li
264.124 171.298 mo
234.223 154.035 li
233.947 153.875 li
254.023 142.285 li
263.016 137.093 li
264.124 136.453 li
264.124 136.453 li
264.197 136.496 li
264.4 136.614 li
265.231 137.093 li
294.301 153.876 li
293.194 154.516 li
264.124 137.733 li
245.553 148.454 li
235.054 154.515 li
264.125 171.298 li
282.742 160.55 li
264.125 171.298 li
264.125 171.298 li
295.409 154.516 mo
294.578 154.036 li
294.401 153.934 li
295.409 154.516 li
f
295.41 189.362 mo
295.41 189.362 li
308.29 181.925 li
295.41 189.362 li
293.195 189.361 mo
278.66 180.969 li
293.195 189.362 li
293.195 189.361 li
294.302 188.722 mo
279.767 180.33 li
294.302 188.722 li
308.837 180.33 li
294.303 188.722 li
294.302 188.722 li
325.586 171.939 mo
324.755 171.459 li
324.616 171.379 li
325.587 171.939 li
323.372 171.939 mo
294.301 155.156 li
278.282 164.404 li
265.232 171.938 li
264.125 171.298 li
282.742 160.55 li
293.194 154.516 li
294.301 153.876 li
294.301 153.876 li
294.401 153.934 li
294.578 154.036 li
295.409 154.516 li
324.479 171.299 li
323.371 171.939 li
f
304.739 194.748 mo
295.409 189.362 li
295.41 189.362 li
294.453 188.809 li
294.303 188.722 li
308.837 180.33 li
323.371 171.939 li
324.479 171.299 li
324.479 171.299 li
324.616 171.379 li
324.755 171.459 li
325.586 171.939 li
334.921 177.328 li
333.813 177.967 li
324.479 172.578 li
308.29 181.925 li
295.41 189.362 li
304.739 194.748 li
304.739 194.748 li
f
476.475 293.9 mo
476.475 293.9 li
487.916 287.294 li
476.475 293.9 li
475.367 293.26 mo
469.984 290.152 li
469.984 290.152 li
475.368 293.26 li
489.902 284.868 li
475.368 293.26 li
475.368 293.26 li
506.652 276.477 mo
505.821 275.997 li
505.762 275.963 li
506.652 276.477 li
504.437 276.477 mo
485.951 265.804 li
485.957 265.707 485.961 265.609 485.961 265.511 cv
485.961 265.153 485.921 264.803 485.842 264.463 cv
505.544 275.837 li
504.437 276.477 li
f
506.653 311.322 mo
506.653 311.322 li
522.842 301.976 li
506.653 311.323 li
505.545 310.683 mo
476.475 293.9 li
476.475 293.9 li
475.54 293.36 li
475.368 293.26 li
489.902 284.868 li
504.437 276.477 li
505.545 275.837 li
505.545 275.837 li
505.762 275.963 li
505.821 275.997 li
506.652 276.477 li
535.722 293.26 li
534.615 293.9 li
505.545 277.116 li
487.916 287.294 li
476.475 293.9 li
505.546 310.683 li
515.504 304.933 li
505.546 310.683 li
505.546 310.683 li
f
536.831 328.746 mo
536.83 328.745 li
536.831 328.745 li
535.823 328.164 li
535.723 328.106 li
506.653 311.323 li
506.653 311.322 li
505.645 310.741 li
505.546 310.683 li
515.504 304.933 li
534.615 293.9 li
535.722 293.26 li
536.83 293.9 li
567.007 311.323 li
536.831 328.746 li
506.653 311.322 mo
535.723 328.106 li
564.793 311.323 li
535.722 294.539 li
522.842 301.976 li
506.653 311.322 li
f
235.055 189.361 mo
235.055 189.361 li
251.245 180.014 li
235.056 189.361 li
232.84 189.36 mo
202.663 171.938 li
232.839 154.515 li
233.947 153.875 li
233.947 153.875 li
234.223 154.035 li
264.124 171.298 li
263.017 171.938 li
233.947 155.154 li
204.878 171.938 li
233.948 188.721 li
243.906 182.972 li
233.948 188.721 li
233.948 188.721 li
232.84 189.36 li
f
265.233 206.783 mo
265.233 206.783 li
281.253 197.535 li
265.233 206.783 li
264.125 206.144 mo
234.224 188.881 li
233.948 188.721 li
243.906 182.972 li
263.017 171.938 li
264.125 171.298 li
265.232 171.938 li
265.233 171.938 li
279.767 180.33 li
294.302 188.722 li
293.195 189.361 li
278.66 180.969 li
264.125 172.577 li
251.245 180.014 li
235.055 189.361 li
264.126 206.144 li
274.624 200.083 li
264.126 206.144 li
264.126 206.144 li
295.409 189.362 mo
294.579 188.882 li
294.453 188.809 li
295.41 189.362 li
f
265.233 206.783 mo
264.126 206.144 li
274.624 200.083 li
293.195 189.361 li
293.195 189.361 li
294.302 188.722 li
294.303 188.722 li
294.453 188.809 li
294.579 188.882 li
295.409 189.362 li
304.739 194.748 li
303.631 195.387 li
294.302 190.001 li
281.253 197.535 li
265.233 206.783 li
f
446.298 311.322 mo
446.298 311.322 li
465.409 300.289 li
446.299 311.323 li
444.083 311.322 mo
438.694 308.211 li
438.695 308.211 li
444.084 311.322 li
444.083 311.322 li
445.191 310.683 mo
445.191 310.683 li
439.802 307.572 li
439.802 307.572 li
445.191 310.683 li
455.149 304.933 li
445.191 310.683 li
476.475 293.9 mo
475.644 293.42 li
475.54 293.36 li
476.475 293.9 li
474.26 293.9 mo
468.876 290.791 li
469.984 290.152 li
475.367 293.26 li
474.26 293.9 li
f
476.476 328.745 mo
476.476 328.745 li
491.011 320.354 li
476.476 328.745 li
475.369 328.106 mo
475.369 328.106 li
446.298 311.323 li
446.298 311.322 li
445.267 310.727 li
445.191 310.683 li
455.149 304.933 li
474.26 293.9 li
475.368 293.26 li
475.368 293.26 li
475.54 293.36 li
475.644 293.42 li
476.475 293.9 li
505.545 310.683 li
504.438 311.322 li
475.368 294.539 li
465.409 300.289 li
446.298 311.322 li
475.369 328.106 li
492.997 317.928 li
475.369 328.106 li
506.653 311.323 mo
505.822 310.843 li
505.645 310.741 li
506.653 311.322 li
f
505.547 346.808 mo
505.546 346.808 li
505.547 346.808 li
505.547 346.808 li
505.547 346.808 li
506.654 346.168 mo
506.654 346.168 li
522.996 336.733 li
506.654 346.168 li
505.546 345.529 mo
476.476 328.745 li
476.476 328.745 li
475.469 328.164 li
475.369 328.106 li
492.997 317.928 li
504.438 311.322 li
505.546 310.683 li
505.546 310.683 li
505.645 310.741 li
505.822 310.843 li
506.653 311.323 li
535.723 328.106 li
534.616 328.745 li
505.546 311.962 li
491.011 320.354 li
476.476 328.745 li
505.547 345.529 li
520.081 337.137 li
505.546 345.529 li
536.83 328.745 mo
536 328.266 li
535.823 328.164 li
536.831 328.745 li
f
535.724 364.231 mo
535.448 364.07 li
505.547 346.808 li
505.547 346.808 li
506.654 346.168 li
505.546 345.529 li
520.081 337.137 li
534.616 328.745 li
535.723 328.106 li
535.823 328.164 li
536 328.266 li
536.83 328.745 li
536.831 328.746 li
567.008 346.168 li
535.724 364.231 li
506.654 346.168 mo
535.724 362.951 li
564.794 346.168 li
535.723 329.385 li
522.996 336.733 li
506.654 346.168 li
f
235.056 224.206 mo
235.056 224.206 li
249.591 215.815 li
235.057 224.206 li
232.842 224.206 mo
202.664 206.783 li
232.84 189.36 li
233.948 188.721 li
233.948 188.721 li
234.224 188.881 li
264.125 206.144 li
263.018 206.783 li
233.948 190 li
204.879 206.783 li
233.949 223.567 li
251.577 213.389 li
233.949 223.567 li
233.949 223.567 li
232.842 224.206 li
f
265.234 241.629 mo
265.234 241.629 li
268.042 240.008 li
268.042 240.008 li
265.234 241.629 li
264.126 240.99 mo
262.22 239.889 li
262.221 239.889 li
264.127 240.989 li
266.934 239.368 li
266.935 239.369 li
264.127 240.99 li
264.127 240.989 li
259.309 238.208 mo
234.225 223.727 li
233.949 223.567 li
251.577 213.389 li
263.018 206.783 li
264.126 206.144 li
265.233 206.783 li
265.233 206.783 li
274.558 212.167 li
273.45 212.807 li
264.126 207.423 li
249.591 215.815 li
235.056 224.206 li
259.309 238.208 li
259.309 238.208 li
f
272.65 245.911 mo
265.234 241.629 li
265.234 241.629 li
264.279 241.078 li
264.127 240.99 li
266.935 239.369 li
268.042 240.008 li
265.234 241.629 li
272.65 245.911 li
272.65 245.911 li
f
416.122 328.744 mo
416.122 328.744 li
429.171 321.211 li
416.122 328.745 li
415.014 328.105 mo
409.621 324.991 li
409.621 324.991 li
415.014 328.105 li
433.632 317.356 li
415.015 328.105 li
415.014 328.105 li
446.298 311.323 mo
445.467 310.843 li
445.267 310.727 li
446.298 311.322 li
444.084 311.322 mo
438.695 308.211 li
439.802 307.572 li
445.191 310.683 li
444.083 311.322 li
f
445.192 346.807 mo
445.192 346.807 li
445.192 346.807 li
445.192 346.807 li
445.192 346.807 li
446.299 346.167 mo
446.299 346.167 li
456.751 340.133 li
446.3 346.167 li
445.192 345.528 mo
416.121 328.745 li
416.122 328.744 li
415.186 328.204 li
415.015 328.105 li
433.632 317.356 li
444.083 311.322 li
444.083 311.322 li
445.191 310.683 li
445.191 310.683 li
445.267 310.727 li
445.467 310.843 li
446.298 311.323 li
475.369 328.106 li
474.261 328.745 li
445.191 311.962 li
429.171 321.211 li
416.122 328.744 li
445.192 345.528 li
461.212 336.279 li
445.192 345.528 li
476.476 328.745 mo
475.645 328.266 li
475.469 328.164 li
476.476 328.745 li
f
475.37 364.231 mo
445.192 346.807 li
445.192 346.807 li
446.299 346.167 li
445.192 345.528 li
461.212 336.279 li
474.261 328.745 li
475.369 328.106 li
475.369 328.106 li
475.469 328.164 li
475.645 328.266 li
476.476 328.745 li
505.546 345.529 li
506.654 346.168 li
505.547 346.808 li
505.546 346.808 li
475.37 364.231 li
446.299 346.167 mo
475.37 362.951 li
504.439 346.168 li
475.369 329.385 li
456.751 340.133 li
446.299 346.167 li
f
235.057 259.052 mo
235.057 259.052 li
243.417 254.226 li
235.057 259.052 li
232.842 259.052 mo
202.665 241.629 li
232.842 224.206 li
233.949 223.567 li
233.949 223.567 li
234.225 223.727 li
259.309 238.208 li
258.847 238.475 li
258.632 238.599 258.424 238.728 258.223 238.86 cv
233.949 224.846 li
204.88 241.629 li
233.95 258.412 li
248.485 250.021 li
233.95 258.412 li
233.95 258.412 li
232.842 259.052 li
265.234 241.629 mo
264.403 241.15 li
264.279 241.078 li
265.234 241.629 li
263.019 241.629 mo
261.113 240.529 li
262.22 239.889 li
264.126 240.99 li
263.019 241.629 li
f
265.235 276.475 mo
265.235 276.475 li
274.99 270.843 li
274.99 270.843 li
265.235 276.475 li
264.127 275.835 mo
234.226 258.573 li
233.95 258.412 li
248.485 250.021 li
255.184 246.153 li
255.335 246.483 255.525 246.8 255.752 247.104 cv
243.417 254.226 li
235.057 259.052 li
264.128 275.835 li
273.883 270.203 li
273.883 270.203 li
264.128 275.835 li
264.128 275.835 li
271.542 246.55 mo
264.127 242.269 li
258.311 245.626 li
258.05 245.354 257.839 245.038 257.738 244.678 cv
263.019 241.629 li
264.127 240.989 li
264.127 240.99 li
264.279 241.078 li
264.403 241.15 li
265.234 241.629 li
272.65 245.911 li
271.542 246.55 li
f
295.413 293.898 mo
295.413 293.898 li
305.168 288.266 li
295.413 293.898 li
294.305 293.258 mo
265.235 276.475 li
265.235 276.475 li
264.302 275.936 li
264.128 275.835 li
273.883 270.203 li
274.99 270.843 li
265.235 276.475 li
294.305 293.258 li
304.06 287.626 li
304.061 287.626 li
294.306 293.258 li
294.305 293.258 li
f
325.59 311.322 mo
325.59 311.322 li
335.346 305.689 li
325.591 311.322 li
323.375 311.321 mo
308.84 302.929 li
323.376 311.322 li
323.375 311.321 li
324.483 310.682 mo
324.483 310.682 li
309.948 302.29 li
324.483 310.682 li
334.238 305.049 li
334.239 305.05 li
324.483 310.682 li
295.413 293.898 mo
294.305 293.258 li
304.061 287.626 li
305.168 288.266 li
295.413 293.898 li
f
355.769 328.744 mo
355.768 328.744 li
365.524 323.112 li
355.769 328.744 li
354.661 328.105 mo
354.661 328.105 li
325.59 311.322 li
325.59 311.322 li
324.6 310.75 li
324.483 310.682 li
334.239 305.05 li
335.346 305.689 li
325.59 311.322 li
354.661 328.105 li
364.416 322.472 li
364.416 322.472 li
354.661 328.105 li
f
384.837 346.807 mo
384.837 346.807 li
384.838 346.807 li
384.838 346.807 li
384.837 346.807 li
383.73 346.167 mo
372.289 339.562 li
383.73 346.167 li
385.945 346.167 mo
385.945 346.167 li
397.386 339.562 li
385.945 346.167 li
384.837 345.528 mo
370.303 337.136 li
384.837 345.528 li
399.372 337.136 li
384.837 345.528 li
416.121 328.745 mo
415.291 328.265 li
415.186 328.204 li
416.122 328.744 li
413.907 328.744 mo
408.513 325.631 li
409.621 324.991 li
415.014 328.105 li
413.907 328.744 li
355.768 328.744 mo
354.661 328.105 li
364.416 322.472 li
365.524 323.112 li
355.768 328.744 li
f
415.015 364.23 mo
414.739 364.07 li
384.838 346.807 li
384.838 346.807 li
385.945 346.167 li
384.837 345.528 li
399.372 337.136 li
413.907 328.744 li
415.014 328.105 li
415.015 328.105 li
415.186 328.204 li
415.291 328.265 li
416.121 328.745 li
445.192 345.528 li
446.299 346.167 li
445.192 346.807 li
445.192 346.807 li
415.015 364.23 li
385.945 346.167 mo
415.015 362.95 li
444.085 346.167 li
415.014 329.384 li
397.386 339.562 li
385.945 346.167 li
f
235.058 293.898 mo
235.058 293.898 li
249.593 285.506 li
235.058 293.898 li
232.843 293.897 mo
202.666 276.475 li
232.842 259.052 li
233.95 258.412 li
233.95 258.412 li
234.226 258.573 li
264.127 275.835 li
263.02 276.475 li
233.95 259.692 li
204.88 276.475 li
233.951 293.258 li
250.293 283.823 li
233.951 293.258 li
233.951 293.258 li
232.843 293.897 li
265.235 276.475 mo
264.404 275.995 li
264.302 275.936 li
265.235 276.475 li
f
265.236 311.32 mo
265.236 311.32 li
285.946 299.364 li
265.236 311.321 li
264.128 310.681 mo
234.227 293.418 li
233.951 293.258 li
250.293 283.823 li
263.02 276.475 li
264.128 275.835 li
264.128 275.835 li
264.302 275.936 li
264.404 275.995 li
265.235 276.475 li
294.305 293.258 li
293.198 293.898 li
264.128 277.114 li
249.593 285.506 li
235.058 293.898 li
264.129 310.681 li
274.027 304.966 li
264.129 310.681 li
264.129 310.681 li
f
295.414 328.743 mo
295.414 328.743 li
315.49 317.153 li
295.414 328.744 li
294.306 328.104 mo
265.236 311.321 li
265.236 311.32 li
264.252 310.753 li
264.129 310.681 li
274.027 304.966 li
293.198 293.898 li
294.305 293.258 li
295.413 293.898 li
295.413 293.898 li
309.948 302.29 li
324.483 310.682 li
323.375 311.321 li
308.84 302.929 li
294.305 294.537 li
285.946 299.364 li
265.236 311.32 li
294.306 328.104 li
304.758 322.07 li
294.306 328.104 li
294.306 328.104 li
325.59 311.322 mo
324.759 310.842 li
324.6 310.75 li
325.59 311.322 li
f
314.189 339.583 mo
295.413 328.743 li
295.414 328.743 li
294.449 328.187 li
294.306 328.104 li
304.758 322.07 li
323.375 311.321 li
323.375 311.321 li
324.483 310.682 li
324.483 310.682 li
324.6 310.75 li
324.759 310.842 li
325.59 311.322 li
354.66 328.105 li
353.553 328.744 li
324.483 311.961 li
315.49 317.153 li
295.414 328.743 li
314.189 339.583 li
314.189 339.583 li
f
354.661 364.23 mo
332.014 351.154 li
333.122 350.514 li
354.661 362.95 li
383.73 346.167 li
372.289 339.562 li
354.661 329.384 li
353.602 329.995 li
353.438 329.634 353.229 329.326 352.98 329.075 cv
353.553 328.744 li
354.661 328.105 li
355.768 328.744 li
355.769 328.744 li
370.303 337.136 li
384.837 345.528 li
385.945 346.167 li
384.838 346.807 li
384.837 346.807 li
354.661 364.23 li
f
235.059 328.743 mo
235.059 328.743 li
247.786 321.396 li
235.06 328.743 li
232.844 328.743 mo
202.667 311.32 li
232.843 293.897 li
233.951 293.258 li
233.951 293.258 li
234.227 293.418 li
264.128 310.681 li
263.021 311.32 li
233.951 294.537 li
204.882 311.32 li
233.952 328.104 li
248.486 319.712 li
233.952 328.104 li
233.952 328.104 li
232.844 328.743 li
265.236 311.321 mo
264.405 310.841 li
264.252 310.753 li
265.236 311.32 li
f
264.129 346.806 mo
264.129 346.806 li
264.13 346.806 li
264.13 346.806 li
264.129 346.806 li
265.237 346.166 mo
265.237 346.166 li
277.964 338.818 li
265.237 346.166 li
264.129 345.527 mo
234.228 328.264 li
233.952 328.104 li
248.486 319.712 li
263.021 311.32 li
264.129 310.681 li
264.129 310.681 li
264.252 310.753 li
264.405 310.841 li
265.236 311.321 li
294.306 328.104 li
293.199 328.743 li
264.129 311.96 li
247.786 321.396 li
235.059 328.743 li
264.129 345.527 li
278.664 337.135 li
264.129 345.527 li
295.413 328.743 mo
294.583 328.264 li
294.449 328.187 li
295.414 328.743 li
f
294.307 364.229 mo
294.031 364.069 li
264.13 346.806 li
264.13 346.806 li
265.237 346.166 li
264.129 345.527 li
278.664 337.135 li
293.199 328.743 li
294.306 328.104 li
294.306 328.104 li
294.449 328.187 li
294.583 328.264 li
295.413 328.743 li
314.189 339.583 li
314.03 339.92 313.878 340.258 313.733 340.599 cv
294.306 329.383 li
277.964 338.818 li
265.237 346.166 li
294.307 362.949 li
303.811 357.462 li
303.596 357.986 303.418 358.518 303.281 359.047 cv
294.307 364.229 li
f
233.953 364.229 mo
202.668 346.165 li
232.844 328.743 li
233.952 328.104 li
233.952 328.104 li
234.228 328.264 li
264.129 345.527 li
265.237 346.166 li
264.13 346.806 li
264.129 346.806 li
233.953 364.229 li
233.952 329.383 mo
204.882 346.165 li
233.953 362.949 li
263.022 346.166 li
233.952 329.383 li
f
443.073 322.985 mo
443.073 324.903 441.725 327.236 440.064 328.195 cv
438.403 329.154 437.056 328.376 437.056 326.458 cv
437.056 324.539 438.403 322.206 440.064 321.247 cv
441.725 320.288 443.073 321.066 443.073 322.985 cv
cp
0 0 0 0 cmyk
f
452.824 317.355 mo
452.824 319.273 451.477 321.606 449.815 322.565 cv
448.154 323.524 446.807 322.746 446.807 320.828 cv
446.807 318.909 448.154 316.576 449.815 315.617 cv
451.477 314.658 452.824 315.436 452.824 317.355 cv
cp
f
462.575 311.725 mo
462.575 313.643 461.228 315.976 459.566 316.935 cv
457.905 317.894 456.558 317.116 456.558 315.198 cv
456.558 313.28 457.905 310.947 459.566 309.988 cv
461.228 309.029 462.575 309.806 462.575 311.725 cv
cp
f
472.326 306.095 mo
472.326 308.013 470.979 310.346 469.318 311.305 cv
467.656 312.265 466.309 311.487 466.309 309.569 cv
466.309 307.65 467.656 305.318 469.318 304.358 cv
470.979 303.399 472.326 304.176 472.326 306.095 cv
cp
f
193.594 249.787 mo
188.323 252.831 li
188.323 246.743 li
193.594 243.699 li
193.594 249.787 li
cp
f
202.139 244.855 mo
196.867 247.898 li
196.867 241.811 li
202.139 238.767 li
202.139 244.855 li
cp
f
210.683 239.921 mo
205.411 242.965 li
205.411 236.878 li
210.683 233.834 li
210.683 239.921 li
cp
f
219.227 234.989 mo
213.955 238.032 li
213.955 231.945 li
219.227 228.902 li
219.227 234.989 li
cp
f
283.874 320.035 mo
277.857 323.509 li
277.857 316.562 li
283.874 313.088 li
283.874 320.035 li
cp
f
292.224 315.155 mo
286.208 318.628 li
286.208 311.681 li
292.224 308.207 li
292.224 315.155 li
cp
f
283.925 329.049 mo
277.909 332.523 li
277.909 325.575 li
283.925 322.102 li
283.925 329.049 li
cp
f
292.224 324.257 mo
286.208 327.731 li
286.208 320.783 li
292.224 317.31 li
292.224 324.257 li
cp
f
306.098 365.43 mo
304.241 365.43 302.965 363.949 302.965 361.389 cv
302.965 360.632 303.077 359.842 303.281 359.047 cv
324.484 346.806 li
324.484 346.806 li
332.014 351.154 li
308.627 364.656 li
307.718 365.181 306.859 365.43 306.098 365.43 cv
303.811 357.462 mo
304.809 355.027 306.592 352.758 308.627 351.584 cv
309.531 351.062 310.385 350.817 311.143 350.817 cv
311.422 350.817 311.688 350.85 311.939 350.915 cv
311.869 350.356 311.821 349.775 311.821 349.152 cv
311.821 346.404 312.524 343.44 313.733 340.599 cv
323.377 346.166 li
303.811 357.462 li
333.122 350.514 mo
325.591 346.166 li
344.209 335.418 li
353.602 329.995 li
353.87 330.583 354.017 331.312 354.017 332.166 cv
354.017 335.637 351.581 339.858 348.575 341.592 cv
333.122 350.514 li
324.484 345.527 mo
314.189 339.583 li
316.348 335.022 319.783 330.894 323.651 328.66 cv
325.545 327.567 327.333 327.05 328.918 327.05 cv
331.221 327.05 333.096 328.143 334.243 330.147 cv
335.383 328.766 336.692 327.598 338.085 326.793 cv
339.368 326.052 340.58 325.702 341.654 325.702 cv
344.219 325.702 345.997 327.702 346.08 331.169 cv
346.828 330.29 347.674 329.544 348.575 329.025 cv
349.449 328.52 350.274 328.281 351.006 328.281 cv
351.791 328.281 352.468 328.557 352.98 329.075 cv
333.477 340.335 li
324.484 345.527 li
.12958 .00274662 0 0 cmyk
f
324.484 346.806 mo
324.484 346.806 li
324.484 346.806 li
324.484 346.806 li
324.484 346.806 li
325.591 346.166 mo
325.591 346.166 li
344.209 335.418 li
325.592 346.166 li
324.484 345.527 mo
314.189 339.583 li
314.189 339.583 li
324.484 345.527 li
333.477 340.335 li
324.484 345.527 li
.0717174 .000488289 0 0 cmyk
f
332.014 351.154 mo
324.484 346.806 li
324.484 346.806 li
325.591 346.166 li
324.484 345.527 li
333.477 340.335 li
352.98 329.075 li
353.229 329.326 353.438 329.634 353.602 329.995 cv
344.209 335.418 li
325.591 346.166 li
333.122 350.514 li
332.014 351.154 li
f
303.281 359.047 mo
303.418 358.518 303.596 357.986 303.811 357.462 cv
323.377 346.166 li
313.733 340.599 li
313.878 340.258 314.03 339.92 314.189 339.583 cv
324.484 345.527 li
325.591 346.166 li
324.484 346.806 li
324.484 346.806 li
303.281 359.047 li
f
540.329 221.417 mo
517.738 208.374 li
540.328 195.332 li
562.919 208.375 li
540.329 221.417 li
cp
.470191 .0827344 .00714122 0 cmyk
f
521.172 198.58 mo
540.329 209.64 li
559.484 198.58 li
540.328 187.522 li
521.172 198.58 li
cp
540.329 213.341 mo
540.032 213.341 539.736 213.264 539.47 213.111 cv
516.88 200.068 li
516.347 199.761 516.02 199.194 516.02 198.58 cv
516.02 197.967 516.348 197.4 516.88 197.093 cv
539.469 184.051 li
540.001 183.744 540.655 183.744 541.186 184.051 cv
563.777 197.093 li
564.308 197.4 564.636 197.967 564.636 198.58 cv
564.636 199.194 564.309 199.761 563.777 200.068 cv
541.187 213.111 li
540.922 213.264 540.626 213.341 540.329 213.341 cv
cp
0 0 0 0 cmyk
f
562.919 188.39 mo
540.329 201.432 li
540.329 175.348 li
562.919 162.306 li
562.919 188.39 li
cp
level3{
gsave
clp
[33.6688 0 0 33.6688 538.191 174.523 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~nA6mgnA6mgnA?sin\['jn\d-kn\d0lo#3?no#3?no#<Eoo>WNpo>`Tro>`TroZ/ctoZ/fuoZ/fuouT!"
ouT!"ou]'$ou]'$p<,6&p<,9'p<5?(pWPH)pWYN+pWYQ,ps(`.ps(`.q9Lo0q9Lr1qTq,4qTq,4qTq,4
qU%56qp@>7qpID8qpID8r6mS;r6mS;rR<b=rR<e>rm`t@rm`t@rm`t@s40.Cs40.Cs494Ds497Es4B=F
s4B=Fs4KCHs4KCHs4TLJs4TLJs4TLKs4TOLs4]UMs4]UNs4]XOs4]XPs4f^Qs4faRs4faSs4ogTs4ogT
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.6688 0 0 33.6688 538.191 174.523 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~n*f`6n*f`6n*oi9nF5r:nF5r:nF?&=naZ/>naZ/>nac8Ao()ABo()ABo(2JEoCMSFoCMSFoCV\Io^qeJ
o^qeJo^qeJo^qhLp%A"Np%A"Np%A%Pp@e4Rp@e4Rp@e7Tp\4FVp\4IXq"XXZq"X[\q>'j^q>'j^q>'j^
q>'j_qYL'bqYL'bqYL'cqtp9fqtp9gr;?Kjr;?KkrVc]nrVc]nrVc]orr2oss8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~_83t(_8=(+_SX1,_Sa:/_o'C0_o0L3`5KU4`5T^7`Pog8`Q#p;`l?$<`lH-?a2c6@a2c6@a2l?CaN2HD
aN2KFaiVZHaiV]Jb0%lLb0%oNbKJ)PbKJ,Rbfn;Tbfn>Vc-=MXc-=PZcHa_\cHab^cd0q`cd0q`cd0tb
d*U.dd*U.edF$@hdF$@idaHRldaHRme'ldpe'ldqeC<!teC<!teC<!ue^`4#e^`4$f%/F'f%/F(f@SX+
f@SX+f\"j/f\"j/g"G'3g"G'3g"G'3g"G'3g=k97g=k97g=k97g=k97gY:K;gY:K;gY:K;gt^]?gt^]?
~>
<~0JG170JG170JG170JG170JP::0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0etL>1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:XA1G^gC1G^gC1G^gC1G^jE1c.$G1c.$G1c.$G1c.'I2)R6K2)R6K2)R6K2)R9M
2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HP2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZT3&ilW3&ilW
3&ilW3&ilW3&ilW3B9)[3B9)[3B9)[3]];_3]];_3]];_4$,Mc4$,Mc4$,Mc4?P_g4?P_g4?P_g4?P_g
~>
<~$O[=M$OdFP$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k3XT%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU
%1NdW%LrsY%LrsY%LrsY%LrsY%LrsY%Ls![%hB0]%hB0]%hB0]%hB0]%hB0]%hB3_&.fBa&.fBa&.fBa
&.fBa&.fBa&.fBa&.fBb&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Tf&eYfi&eYfi&eYfi&eYfi&eYfi
&eYfi',)#m',)#m',)#m',)#m'GM5q'GM5q'GM5q'bqGu'bqGu()@Z$()@Z$()@Z$(Ddl((Ddl((Ddl(
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
540.329 175.348 mo
517.739 162.306 li
540.328 149.264 li
562.918 162.306 li
540.329 175.348 li
cp
level3{
gsave
clp
[59.5775 0 0 59.5775 517.739 162.306 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-NjDL-NjDL-NjDL-j0MM-j0MM.0T\O.0T\O.0T\O
.KoeP.KoeP.g5nQ.g5nQ/-Z(S/Hu1T/d;:U/d;:U0*_IW0F%RX0a@[Y1'dj[1C*s\1C*s\2$j6_2@0?`
2[KHa3!oWc3=>fe3su#g4:D2i4UhAk57RYn5n3kp64X%r6k97t71]G!7hG_$8J2"'9+q:*9b[R-:DNs2
;&004;\oH7<>Y`:<uD#==W.;@>T3\D>oWnG?l]:K@NGRNA0:pRB-@<VC*E]ZCa9)_D^>JcE@1hgF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[59.5775 0 0 59.5775 517.739 162.306 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pjrc-71&d-71&d-7:/g-RU8h-R^Ak-n$Jl-n$Jl-n-So
.4H\p.4H_r.Olnt.Olr!.k</%/1`A)/M/P+/M/S-/hSe10/#"50JG490ekF=1,:U?1,:XA1c.'I2)R9M
2E!HP2`EZT3&ilX3BB2_4$,Md4?P_h4[)%o5<qJ"5s[e'6:4+.6psF377Ka:7n?0B8P2TJ92&#R9hnGZ
:JXe`;,L4h;c?Xp<E3(#='&L+=^#!5>[1N=?!^iE?smDO@U`hWA7]=aB4kmlC2.O"Ci!s+Df9T6EH-#?
~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tJ=#6tM?#RC\A#RC\A
#RC\B#mgnF$47+I$47+J$O[=N$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0^&.fBb&J5Tf&eYfj',)#n'GV>t
'bqGu()@Z$(Ddl((`4),)&X;0)B'M4)]K_8*#oq<*??.@*ZcCF+<VdL+X&!P+sJ6V,U=W\,palb-RU;j
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E3%!
<E3%!WiE)!WiE)!WiE)!WiE)~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
540.329 201.432 mo
517.739 188.39 li
517.739 162.306 li
540.329 175.348 li
540.329 201.432 li
cp
level3{
gsave
clp
[60.8593 0 0 60.8593 489.786 139.682 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Pt;&XQ:V/YQ:V/YQ:_5ZQ:_8[QV%A\QV.G]QqIP^QqRV_R7m_`R8!eaRSEtcRna+eRnj1fS50:gSPTIi
SPTIiSl#XkT2GgmTMl$pTi;3rTi;3rU/_BtUK.U"UfRd$V-!s&VHF0)VcsE,W*BT.WEfc0Wa5u3X'Z/5
XC)>7X^MM9Y$q\;Y@It?Y[n.AZ"==CZY0[GZtTjI[;$$K[VQ9N[quHP\ShiU\o8#W]5\2Y]Q4G\^2sb`
^NL"c^j$7f_0HIi_Ku^l_gN!p`IA?t`dnU"a+=g%ab10)b(^H-b_Qf1c&*)5c\rG9d#Se>d?"t@dutCE
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[60.8593 0 0 60.8593 489.786 139.682 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Pa.N!Q'IW"Q'IW"Q'IW"Q'R`%QBmi&QC!r)Q^=&*Q^F/-R$a8.R$jA1R@9S5R[T\6R[]e9S"-"=S=H+>
S=H.@SXl@DSt;RHT:_dLTV.sNTV/!PTqS3TU8"EXUSFW\Unji`V5:&dVP^8hVl-JlW2Q\pWMuntWiE,#
X/i;&XK8M*Xf\_.Y-+q2YHP.6Yct@:Z*L[AZa7!F['[3J[C*EN[^NWR\%&rY\[f8^]"5Jb]=Y\f]Y2"m
^:q=q^V@Ou^qdb$_83t(_SX1,_o'F2`Pog8`l?$<a2c9BaiVZHb0%oNbfn;Tc-=PZcd0q`d*U.ddF$Cj
~>
<~84Z9B84Z9B84cBE8P)KF8P)KF8P2TI8kM]J8kVfM91qoN92&#Q9MJ5U9he>V9hnGY:/4PZ:/=Y]:JXb^
:JXe`:f("d;,L4h;GpFl;c?Un;c?Xp<)cjt<E3(#<`W:'='&L+=BJ^/>$>-7>?b?;>[1Q??!UcC?=$uG
?XI/J?smAN@:<SR@UinYA7T4^AS#FbAnPaiBP;'nBk_9rC27U$Ci!p)D/O60Df9Q5E,]c9EH6)@F)uDE
FEDYJG'8(RG^+IXH$O^^H[C-fI=6QnIt*!!JUrB'JqAW-KS5&5L5(J=LkpnEMMd=MN/WaVO,o?_OH>Tf
~>
<~!WiE)!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tM?#RC\A#RC\A
#RC\A#RC\A#RC\B#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnF$47+I$47+I$47+I$47+J$O[=M
$O[=M$O[=M$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%LrsY%hB0]%hB0]&.fBa&.fBa&J5Te&J5Te&J5Te
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
532.193 187.34 mo
525.875 183.693 li
525.875 176.397 li
532.193 180.045 li
532.193 187.34 li
cp
0 0 0 0 cmyk
f
225.87 320.735 mo
194.705 302.741 li
192.793 301.637 193.033 299.708 195.241 298.433 cv
225.333 281.06 li
227.542 279.784 230.882 279.646 232.796 280.75 cv
263.96 298.743 li
265.873 299.847 265.632 301.777 263.423 303.051 cv
233.332 320.425 li
231.124 321.7 227.783 321.838 225.87 320.735 cv
cp
.470191 .0827344 .00714122 0 cmyk
f
226.755 309.355 mo
228.13 310.15 230.79 310.003 232.446 309.046 cv
262.539 291.671 li
263.295 291.235 263.476 290.84 263.481 290.766 cv
263.47 290.744 263.369 290.6 263.075 290.43 cv
231.911 272.437 li
230.536 271.643 227.877 271.787 226.217 272.746 cv
196.126 290.119 li
195.37 290.556 195.188 290.95 195.184 291.025 cv
195.194 291.047 195.296 291.193 195.59 291.363 cv
226.755 309.355 li
cp
229.128 313.411 mo
227.605 313.411 226.135 313.084 224.985 312.421 cv
193.82 294.428 li
192.437 293.629 191.644 292.388 191.644 291.024 cv
191.644 289.496 192.632 288.049 194.355 287.054 cv
224.448 269.68 li
227.232 268.073 231.203 267.942 233.68 269.37 cv
264.844 287.364 li
266.227 288.161 267.021 289.403 267.021 290.767 cv
267.021 292.296 266.032 293.742 264.308 294.738 cv
234.216 312.112 li
232.724 312.974 230.89 313.411 229.128 313.411 cv
cp
0 0 0 0 cmyk
f
265.241 279.741 mo
265.241 279.741 li
265.241 268.989 li
241.13 268.975 li
232.796 264.163 li
230.882 263.059 227.542 263.198 225.333 264.473 cv
217.557 268.962 li
193.423 268.948 li
193.423 280.008 li
193.37 280.755 193.786 281.476 194.706 282.007 cv
225.87 299.999 li
227.783 301.104 231.124 300.965 233.332 299.691 cv
263.423 282.317 li
264.698 281.581 265.312 280.628 265.241 279.741 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
229.333 263.424 mo
227.933 263.457 226.48 263.81 225.333 264.473 cv
217.557 268.962 li
193.423 268.948 li
193.423 280.008 li
193.37 280.755 193.786 281.476 194.706 282.007 cv
225.87 299.999 li
226.789 300.531 228.039 300.771 229.333 300.74 cv
229.333 263.424 li
cp
level3{
gsave
clp
[39.3914 0 0 39.3914 195.398 265.82 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[39.3914 0 0 39.3914 195.398 265.82 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
196.155 268.95 mo
193.423 268.948 li
193.423 280.008 li
193.37 280.755 193.786 281.476 194.706 282.007 cv
196.155 282.844 li
196.155 268.95 li
cp
.147219 .0154116 0 0 cmyk
f
226.35 300.235 mo
228 300.942 230.386 300.903 232.315 300.167 cv
232.315 287.611 li
226.35 287.611 li
226.35 300.235 li
cp
.657221 .328313 0 0 cmyk
f
225.87 288.981 mo
194.705 270.988 li
192.793 269.884 193.033 267.954 195.241 266.68 cv
225.333 249.306 li
227.542 248.031 230.882 247.893 232.796 248.996 cv
263.96 266.99 li
265.873 268.094 265.632 270.023 263.423 271.298 cv
233.332 288.671 li
231.124 289.947 227.783 290.085 225.87 288.981 cv
cp
level3{
gsave
clp
[61.7032 36.7866 -36.7866 61.7032 202.833 253.19 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-NjDL-NjDL-NjDL-j0MM-j0MM.0T\O.0T\O.0T\O
.KoeP.KoeP.g5nQ.g5nQ/-Z(S/Hu1T/d;:U/d;:U0*_IW0F%RX0a@[Y1'dj[1C*s\1C*s\2$j6_2@0?`
2[KHa3!oWc3=>fe3su#g4:D2i4UhAk57RYn5n3kp64X%r6k97t71]G!7hG_$8J2"'9+q:*9b[R-:DNs2
;&004;\oH7<>Y`:<uD#==W.;@>T3\D>oWnG?l]:K@NGRNA0:pRB-@<VC*E]ZCa9)_D^>JcE@1hgF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.842316 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[61.7032 36.7866 -36.7866 61.7032 202.833 253.19 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,pai`,pai`,pai`,pai`,pai`,pai`-71&d-71&d-71&e-RU8h-RU;j-n$Jl-n$Jl.4H\p.4H\q.Olnt
.Olr!.kE5&/M/P+/M/P,/hSb00/#"50JP::0etL>1,:U?1GgpG2)R6L2E!KQ2`NcV3&ru[4$,Mc4?P_h
4[)%o5X7V$5sdn*6UX=177B[87n?0B8P2TJ9MA/T:/=Y^:f1(f;c?Xp<E<.%='/U.>$G6:>[:ZB?XR;N
@U`hWA7]@cBPD3rCMRa'DJsH4E,fo>F)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDD
~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\i1"9\i1"9\i1
"9\l3"U,&5"U,&5"U,&6"pP89"pP89"pYA<#6tJ=#6tJ=#RC\A#RC\A#RC_C#mq"H$47+I$O[=M$k*OR
%1NaU%1NdW%LrsY%M''\&.fBa&J5Tf&eYfj',)&o'bqGu'c%Q#(Ddl((`4)-)&X>2)B'P6)]Th;*$$%?
*ZcCF+<VdM+X&$R,9nHZ,UF``-7:2i-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
263.423 269.182 mo
233.332 286.555 li
231.124 287.83 227.783 287.969 225.87 286.865 cv
194.706 268.871 li
194.279 268.625 193.965 268.337 193.751 268.025 cv
193.093 269.082 193.392 270.23 194.706 270.988 cv
225.87 288.981 li
227.783 290.085 231.124 289.947 233.332 288.671 cv
263.423 271.298 li
265.14 270.307 265.662 268.923 264.914 267.836 cv
264.614 268.319 264.116 268.782 263.423 269.182 cv
cp
0 0 0 0 cmyk
f
253.778 282.579 mo
253.778 283.382 253.214 284.359 252.519 284.76 cv
251.824 285.161 251.26 284.835 251.26 284.032 cv
251.26 283.23 251.824 282.254 252.519 281.853 cv
253.214 281.451 253.778 281.777 253.778 282.579 cv
cp
.147219 .0154116 0 0 cmyk
f
257.828 280.241 mo
257.828 281.044 257.264 282.02 256.569 282.421 cv
255.875 282.823 255.31 282.497 255.31 281.695 cv
255.31 280.892 255.875 279.916 256.569 279.515 cv
257.264 279.114 257.828 279.439 257.828 280.241 cv
cp
f
261.879 277.903 mo
261.879 278.705 261.314 279.682 260.62 280.083 cv
259.924 280.485 259.361 280.159 259.361 279.357 cv
259.361 278.554 259.924 277.577 260.62 277.176 cv
261.314 276.775 261.879 277.1 261.879 277.903 cv
cp
f
227.713 277.825 mo
213.129 269.406 li
212.234 268.889 212.346 267.987 213.38 267.39 cv
227.462 259.26 li
228.495 258.663 230.058 258.598 230.953 259.115 cv
245.537 267.534 li
246.431 268.051 246.319 268.954 245.286 269.551 cv
231.205 277.681 li
230.171 278.278 228.607 278.342 227.713 277.825 cv
cp
.657221 .328313 0 0 cmyk
f
229.109 270.776 mo
227.09 269.611 li
226.967 269.539 226.983 269.414 227.126 269.332 cv
229.074 268.207 li
229.216 268.124 229.433 268.115 229.557 268.187 cv
231.575 269.352 li
231.699 269.423 231.683 269.548 231.54 269.631 cv
229.591 270.756 li
229.449 270.838 229.232 270.847 229.109 270.776 cv
cp
.147219 .0154116 0 0 cmyk
f
213.129 269.406 mo
213.171 269.43 li
213.38 269.285 li
227.462 261.156 li
228.495 260.559 230.058 260.494 230.953 261.011 cv
245.496 269.406 li
246.32 268.816 246.364 268.012 245.537 267.534 cv
230.953 259.115 li
230.058 258.598 228.495 258.663 227.462 259.26 cv
213.38 267.39 li
212.346 267.987 212.234 268.889 213.129 269.406 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
278.916 172.343 mo
278.325 172.684 277.755 173.111 277.211 173.592 cv
276.974 165.92 271.433 162.868 264.614 166.806 cv
259.059 170.013 254.354 176.878 252.668 183.607 cv
251.296 183.422 249.685 183.779 247.956 184.778 cv
242.984 187.648 238.954 194.628 238.954 200.368 cv
238.954 206.11 242.984 208.436 247.956 205.566 cv
278.916 187.692 li
282.587 185.572 285.562 180.418 285.562 176.18 cv
285.562 171.942 282.587 170.224 278.916 172.343 cv
cp
0 0 0 0 cmyk
f
538.334 63.717 mo
537.304 64.3108 536.337 65.1633 535.481 66.1672 cv
535.347 60.5452 531.313 58.2991 526.345 61.1672 cv
524.754 62.0862 523.257 63.4211 521.954 64.9993 cv
519.742 61.1331 515.16 60.2356 509.85 63.301 cv
502.382 67.6125 496.329 78.0969 496.329 86.719 cv
496.329 87.4309 496.384 88.094 496.464 88.7346 cv
495.4 88.4592 494.094 88.6819 492.678 89.4993 cv
489.106 91.5618 486.21 96.5784 486.21 100.704 cv
486.21 104.829 489.106 106.501 492.678 104.439 cv
538.334 78.0803 li
541.768 76.0969 544.553 71.2737 544.553 67.3079 cv
544.553 63.3411 541.768 61.7336 538.334 63.717 cv
cp
f
506.841 257.248 mo
506.604 257.248 506.364 257.193 506.139 257.075 cv
505.397 256.687 505.11 255.771 505.498 255.028 cv
507.04 252.078 509.298 249.594 511.696 248.211 cv
513.202 247.341 514.678 246.937 516.063 247.003 cv
516.248 247.008 li
518.169 247.008 520.519 245.551 522.578 243.071 cv
523.787 241.614 525.113 240.464 526.519 239.652 cv
528.03 238.781 529.499 238.38 530.887 238.444 cv
532.807 238.568 535.276 237.072 537.403 234.511 cv
538.593 233.076 539.957 231.895 541.344 231.093 cv
542.852 230.222 544.308 229.818 545.713 229.885 cv
547.621 230.014 550.101 228.513 552.227 225.952 cv
553.436 224.495 554.762 223.346 556.169 222.533 cv
558.395 221.25 560.612 220.975 562.418 221.757 cv
563.185 222.092 563.538 222.986 563.204 223.754 cv
562.868 224.523 561.975 224.87 561.207 224.54 cv
560.306 224.146 559.056 224.369 557.686 225.161 cv
556.607 225.784 555.526 226.728 554.561 227.89 cv
551.789 231.233 548.481 233.043 545.561 232.916 cv
544.771 232.866 543.841 233.155 542.862 233.721 cv
541.781 234.345 540.701 235.288 539.737 236.448 cv
536.964 239.789 533.696 241.603 530.736 241.475 cv
529.952 241.422 529.018 241.713 528.037 242.281 cv
526.958 242.903 525.877 243.846 524.912 245.008 cv
522.138 248.35 518.827 250.163 515.912 250.034 cv
515.112 249.981 514.192 250.273 513.213 250.839 cv
511.3 251.943 509.468 253.982 508.187 256.434 cv
507.916 256.951 507.388 257.248 506.841 257.248 cv
cp
f
57.4606 120.254 mo
57.4606 110.982 li
59.15 110.982 li
59.15 119.085 li
61.3698 119.085 li
61.3698 120.254 li
57.4606 120.254 li
cp
f
64.1656 119.259 mo
64.2926 119.259 64.3961 119.231 64.4762 119.175 cv
64.5563 119.118 64.6139 119.032 64.65 118.914 cv
64.6852 118.797 64.7086 118.684 64.7194 118.573 cv
64.7311 118.464 64.736 118.322 64.736 118.146 cv
64.736 115.746 li
64.736 115.609 64.733 115.494 64.7281 115.403 cv
64.7223 115.312 64.7096 115.212 64.6891 115.104 cv
64.6686 114.995 64.6373 114.91 64.5963 114.849 cv
64.4283 114.693 li
64.358 114.65 64.2701 114.628 64.1656 114.628 cv
64.0387 114.628 63.9352 114.657 63.8551 114.715 cv
63.775 114.773 63.7174 114.861 63.6823 114.978 cv
63.6461 115.095 63.6237 115.209 63.6119 115.319 cv
63.6012 115.429 63.5953 115.572 63.5953 115.746 cv
63.5953 118.146 li
63.5953 118.283 63.5983 118.399 63.6041 118.49 cv
63.609 118.581 63.6227 118.68 63.6432 118.786 cv
63.6637 118.893 63.694 118.976 63.735 119.037 cv
63.903 119.195 li
63.9733 119.238 64.0612 119.259 64.1656 119.259 cv
cp
64.1598 120.361 mo
63.4479 120.361 62.9176 120.16 62.569 119.759 cv
62.2203 119.359 62.0465 118.785 62.0465 118.039 cv
62.0465 115.853 li
62.0465 115.108 62.2203 114.534 62.569 114.133 cv
62.9176 113.733 63.4479 113.532 64.1598 113.532 cv
64.8756 113.532 65.4098 113.733 65.7623 114.133 cv
66.1149 114.534 66.2906 115.108 66.2906 115.853 cv
66.2906 118.039 li
66.2906 118.785 66.1149 119.359 65.7623 119.759 cv
65.4098 120.16 64.8756 120.361 64.1598 120.361 cv
cp
f
67.3873 120.254 mo
67.3873 113.633 li
68.9528 113.633 li
68.9528 114.651 li
69.1725 114.259 69.3951 113.978 69.6207 113.806 cv
69.8463 113.635 70.0885 113.549 70.3453 113.549 cv
70.5807 113.576 li
70.5807 115.126 li
70.4049 115.059 70.2242 115.026 70.0377 115.026 cv
69.8141 115.032 69.6178 115.089 69.4479 115.193 cv
69.278 115.297 69.1129 115.471 68.9528 115.713 cv
68.9528 120.254 li
67.3873 120.254 li
cp
f
72.7506 116.239 mo
73.8805 116.239 li
73.8805 115.607 li
73.8805 115.272 73.8385 115.031 73.7545 114.885 cv
73.6705 114.74 73.5221 114.667 73.3092 114.667 cv
73.0934 114.667 72.9459 114.749 72.8678 114.913 cv
72.7897 115.077 72.7506 115.376 72.7506 115.808 cv
72.7506 116.239 li
cp
73.3268 120.361 mo
72.5699 120.361 72.025 120.152 71.693 119.734 cv
71.3619 119.317 71.1959 118.699 71.1959 117.883 cv
71.1959 116.009 li
71.1959 115.193 71.3639 114.576 71.6989 114.158 cv
72.0348 113.74 72.5748 113.532 73.3209 113.532 cv
73.7155 113.532 74.0485 113.59 74.319 113.705 cv
74.5895 113.822 74.8004 113.996 74.9508 114.231 cv
75.1022 114.466 75.2096 114.738 75.2721 115.045 cv
75.3356 115.353 75.3678 115.723 75.3678 116.155 cv
75.3678 117.022 li
72.7506 117.022 li
72.7506 118.017 li
72.7506 118.156 72.7516 118.262 72.7535 118.339 cv
72.7555 118.415 72.7614 118.507 72.7731 118.615 cv
72.7838 118.724 72.8014 118.808 72.8258 118.867 cv
72.9235 119.049 li
73.0856 119.18 li
73.3209 119.22 li
73.5299 119.22 73.6754 119.146 73.7574 118.998 cv
73.8385 118.852 73.8805 118.638 73.8805 118.359 cv
73.8805 117.978 li
75.3619 117.978 li
75.3619 118.24 li
75.3619 118.927 75.191 119.451 74.8502 119.815 cv
74.5094 120.179 74.0016 120.361 73.3268 120.361 cv
cp
f
76.4362 120.254 mo
76.4362 113.633 li
77.9235 113.633 li
77.9235 114.214 li
78.3668 113.748 78.8912 113.515 79.4948 113.515 cv
80.0465 113.515 80.4137 113.785 80.5963 114.326 cv
81.0631 113.785 81.6198 113.515 82.2692 113.515 cv
82.6383 113.515 82.9342 113.65 83.1578 113.918 cv
83.3815 114.187 83.4938 114.576 83.4938 115.087 cv
83.4938 120.254 li
82.0055 120.254 li
82.0055 115.221 li
82.0055 114.979 81.9655 114.807 81.8854 114.706 cv
81.8053 114.606 81.6871 114.558 81.5309 114.561 cv
81.2584 114.569 80.984 114.698 80.7086 114.947 cv
80.7115 115.014 li
80.7145 115.087 li
80.7145 120.254 li
79.2321 120.254 li
79.2321 115.221 li
79.2321 114.979 79.192 114.807 79.1119 114.706 cv
79.0319 114.606 78.9117 114.558 78.7516 114.561 cv
78.4899 114.569 78.2145 114.699 77.9235 114.952 cv
77.9235 120.254 li
76.4362 120.254 li
cp
f
87.4967 120.254 mo
87.4967 113.633 li
89.0631 113.633 li
89.0631 120.254 li
87.4967 120.254 li
cp
87.4967 112.587 mo
87.4967 111.267 li
89.068 111.267 li
89.068 112.587 li
87.4967 112.587 li
cp
f
92.5475 119.237 mo
92.6627 119.237 92.7594 119.203 92.8375 119.139 cv
92.9166 119.073 92.9733 118.978 93.0084 118.853 cv
93.0436 118.729 93.068 118.6 93.0807 118.467 cv
93.0944 118.335 93.1012 118.176 93.1012 117.99 cv
93.1012 115.707 li
93.1012 115.555 93.0924 115.417 93.0758 115.296 cv
93.0592 115.175 93.0299 115.06 92.9889 114.949 cv
92.9479 114.84 92.8864 114.756 92.8043 114.698 cv
92.7223 114.64 92.6237 114.614 92.5074 114.617 cv
92.3024 114.62 92.0865 114.708 91.859 114.88 cv
91.859 119.03 li
92.0826 119.167 92.3121 119.237 92.5475 119.237 cv
cp
90.2936 122.435 mo
90.2936 113.633 li
91.859 113.633 li
91.859 114.142 li
92.2692 113.732 92.7145 113.529 93.1959 113.532 cv
93.4303 113.535 93.6383 113.59 93.819 113.695 cv
94.0006 113.799 94.1422 113.928 94.2448 114.083 cv
94.3473 114.238 94.4303 114.42 94.4957 114.631 cv
94.5612 114.842 94.6051 115.037 94.6276 115.218 cv
94.65 115.399 94.6608 115.582 94.6608 115.769 cv
94.6608 117.939 li
94.6608 118.275 94.6334 118.583 94.5768 118.865 cv
94.5211 119.146 94.4332 119.402 94.3141 119.63 cv
94.1949 119.86 94.0319 120.039 93.8248 120.167 cv
93.6178 120.296 93.3746 120.361 93.0953 120.361 cv
92.6852 120.361 92.2731 120.161 91.859 119.762 cv
91.859 122.435 li
90.2936 122.435 li
cp
f
97.4684 120.361 mo
96.9205 120.361 96.4713 120.207 96.1207 119.902 cv
95.7701 119.596 95.5299 119.156 95.399 118.582 cv
96.5846 118.152 li
96.6666 118.517 96.7819 118.793 96.9313 118.982 cv
97.0807 119.17 97.2672 119.261 97.4908 119.253 cv
97.6549 119.249 97.7897 119.191 97.8961 119.077 cv
98.0026 118.963 98.0514 118.824 98.0446 118.66 cv
98.0289 118.422 97.8112 118.121 97.3903 117.76 cv
96.5006 116.999 li
95.859 116.448 95.5465 115.871 95.5612 115.272 cv
95.5719 114.742 95.7526 114.32 96.1012 114.005 cv
96.4498 113.69 96.8942 113.532 97.4342 113.532 cv
97.9528 113.532 98.3746 113.689 98.6989 114.002 cv
99.0231 114.315 99.233 114.735 99.3307 115.26 cv
98.3014 115.691 li
98.1598 115.005 97.8951 114.66 97.5074 114.656 cv
97.3434 114.653 97.2115 114.702 97.1129 114.807 cv
97.0143 114.911 96.9645 115.036 96.9645 115.182 cv
96.9615 115.383 97.1461 115.646 97.5182 115.97 cv
98.4244 116.792 li
98.5778 116.927 98.7037 117.047 98.8043 117.154 cv
98.9059 117.259 99.0104 117.389 99.1207 117.542 cv
99.2311 117.695 99.3131 117.859 99.3668 118.034 cv
99.4205 118.209 99.4479 118.398 99.4479 118.599 cv
99.4479 119.158 99.2623 119.591 98.8912 119.899 cv
98.5201 120.206 98.0465 120.361 97.4684 120.361 cv
cp
f
101.333 120.355 mo
100.956 120.355 100.681 120.217 100.507 119.941 cv
100.335 119.665 100.248 119.325 100.248 118.923 cv
100.248 113.633 li
101.808 113.633 li
101.808 118.605 li
101.808 118.81 101.839 118.962 101.903 119.063 cv
101.966 119.163 102.084 119.212 102.255 119.208 cv
102.438 119.208 102.662 119.115 102.926 118.929 cv
102.926 113.633 li
104.487 113.633 li
104.487 120.254 li
102.926 120.254 li
102.926 119.633 li
102.401 120.115 101.87 120.355 101.333 120.355 cv
cp
f
105.695 120.254 mo
105.695 113.633 li
107.182 113.633 li
107.182 114.214 li
107.626 113.748 108.15 113.515 108.754 113.515 cv
109.305 113.515 109.672 113.785 109.855 114.326 cv
110.322 113.785 110.879 113.515 111.528 113.515 cv
111.897 113.515 112.193 113.65 112.417 113.918 cv
112.64 114.187 112.753 114.576 112.753 115.087 cv
112.753 120.254 li
111.264 120.254 li
111.264 115.221 li
111.264 114.979 111.224 114.807 111.144 114.706 cv
111.064 114.606 110.946 114.558 110.79 114.561 cv
110.517 114.569 110.243 114.698 109.967 114.947 cv
109.97 115.014 li
109.973 115.087 li
109.973 120.254 li
108.491 120.254 li
108.491 115.221 li
108.491 114.979 108.451 114.807 108.371 114.706 cv
108.291 114.606 108.171 114.558 108.01 114.561 cv
107.749 114.569 107.473 114.699 107.182 114.952 cv
107.182 120.254 li
105.695 120.254 li
cp
f
118.757 119.241 mo
118.948 119.241 119.149 119.182 119.362 119.063 cv
119.362 114.835 li
119.149 114.7 118.946 114.634 118.753 114.634 cv
118.544 114.634 118.393 114.729 118.302 114.919 cv
118.211 115.11 118.165 115.352 118.165 115.646 cv
118.165 118.073 li
118.165 118.312 118.178 118.509 118.204 118.666 cv
118.23 118.823 118.289 118.957 118.38 119.072 cv
118.471 119.185 118.597 119.241 118.757 119.241 cv
cp
118.21 120.361 mo
117.67 120.361 117.264 120.168 116.997 119.784 cv
116.728 119.401 116.593 118.791 116.593 117.955 cv
116.593 116.031 li
116.593 115.678 116.621 115.357 116.674 115.07 cv
116.729 114.782 116.814 114.52 116.932 114.281 cv
117.049 114.043 117.214 113.859 117.426 113.728 cv
117.639 113.597 117.893 113.532 118.187 113.532 cv
118.605 113.532 118.997 113.701 119.362 114.041 cv
119.362 110.982 li
120.927 110.982 li
120.927 120.254 li
119.362 120.254 li
119.362 119.801 li
119.007 120.17 118.624 120.357 118.21 120.361 cv
cp
f
124.121 119.259 mo
124.248 119.259 124.351 119.231 124.431 119.175 cv
124.511 119.118 124.569 119.032 124.605 118.914 cv
124.64 118.797 124.664 118.684 124.674 118.573 cv
124.686 118.464 124.691 118.322 124.691 118.146 cv
124.691 115.746 li
124.691 115.609 124.688 115.494 124.683 115.403 cv
124.677 115.312 124.665 115.212 124.644 115.104 cv
124.624 114.995 124.592 114.91 124.551 114.849 cv
124.383 114.693 li
124.313 114.65 124.225 114.628 124.121 114.628 cv
123.994 114.628 123.89 114.657 123.81 114.715 cv
123.73 114.773 123.672 114.861 123.637 114.978 cv
123.601 115.095 123.579 115.209 123.567 115.319 cv
123.556 115.429 123.55 115.572 123.55 115.746 cv
123.55 118.146 li
123.55 118.283 123.553 118.399 123.559 118.49 cv
123.564 118.581 123.578 118.68 123.598 118.786 cv
123.619 118.893 123.649 118.976 123.69 119.037 cv
123.858 119.195 li
123.928 119.238 124.016 119.259 124.121 119.259 cv
cp
124.115 120.361 mo
123.403 120.361 122.873 120.16 122.524 119.759 cv
122.175 119.359 122.002 118.785 122.002 118.039 cv
122.002 115.853 li
122.002 115.108 122.175 114.534 122.524 114.133 cv
122.873 113.733 123.403 113.532 124.115 113.532 cv
124.831 113.532 125.365 113.733 125.717 114.133 cv
126.07 114.534 126.246 115.108 126.246 115.853 cv
126.246 118.039 li
126.246 118.785 126.07 119.359 125.717 119.759 cv
125.365 120.16 124.831 120.361 124.115 120.361 cv
cp
f
127.421 120.254 mo
127.421 110.982 li
128.986 110.982 li
128.986 120.254 li
127.421 120.254 li
cp
f
132.213 119.259 mo
132.339 119.259 132.443 119.231 132.523 119.175 cv
132.603 119.118 132.661 119.032 132.697 118.914 cv
132.732 118.797 132.755 118.684 132.766 118.573 cv
132.778 118.464 132.783 118.322 132.783 118.146 cv
132.783 115.746 li
132.783 115.609 132.78 115.494 132.775 115.403 cv
132.769 115.312 132.756 115.212 132.736 115.104 cv
132.715 114.995 132.684 114.91 132.643 114.849 cv
132.475 114.693 li
132.405 114.65 132.317 114.628 132.213 114.628 cv
132.086 114.628 131.982 114.657 131.902 114.715 cv
131.822 114.773 131.764 114.861 131.729 114.978 cv
131.693 115.095 131.671 115.209 131.659 115.319 cv
131.648 115.429 131.642 115.572 131.642 115.746 cv
131.642 118.146 li
131.642 118.283 131.645 118.399 131.651 118.49 cv
131.656 118.581 131.67 118.68 131.69 118.786 cv
131.711 118.893 131.741 118.976 131.782 119.037 cv
131.95 119.195 li
132.02 119.238 132.108 119.259 132.213 119.259 cv
cp
132.207 120.361 mo
131.495 120.361 130.964 120.16 130.616 119.759 cv
130.267 119.359 130.093 118.785 130.093 118.039 cv
130.093 115.853 li
130.093 115.108 130.267 114.534 130.616 114.133 cv
130.964 113.733 131.495 113.532 132.207 113.532 cv
132.922 113.532 133.457 113.733 133.809 114.133 cv
134.162 114.534 134.338 115.108 134.338 115.853 cv
134.338 118.039 li
134.338 118.785 134.162 119.359 133.809 119.759 cv
133.457 120.16 132.922 120.361 132.207 120.361 cv
cp
f
135.434 120.254 mo
135.434 113.633 li
137 113.633 li
137 114.651 li
137.219 114.259 137.442 113.978 137.668 113.806 cv
137.893 113.635 138.135 113.549 138.392 113.549 cv
138.628 113.576 li
138.628 115.126 li
138.452 115.059 138.271 115.026 138.085 115.026 cv
137.861 115.032 137.665 115.089 137.495 115.193 cv
137.325 115.297 137.16 115.471 137 115.713 cv
137 120.254 li
135.434 120.254 li
cp
f
143.895 120.361 mo
143.347 120.361 142.898 120.207 142.547 119.902 cv
142.197 119.596 141.957 119.156 141.826 118.582 cv
143.011 118.152 li
143.093 118.517 143.209 118.793 143.358 118.982 cv
143.507 119.17 143.694 119.261 143.918 119.253 cv
144.082 119.249 144.216 119.191 144.323 119.077 cv
144.429 118.963 144.478 118.824 144.471 118.66 cv
144.456 118.422 144.238 118.121 143.817 117.76 cv
142.927 116.999 li
142.286 116.448 141.973 115.871 141.988 115.272 cv
141.999 114.742 142.179 114.32 142.528 114.005 cv
142.877 113.69 143.321 113.532 143.861 113.532 cv
144.38 113.532 144.801 113.689 145.126 114.002 cv
145.45 114.315 145.66 114.735 145.757 115.26 cv
144.728 115.691 li
144.587 115.005 144.322 114.66 143.934 114.656 cv
143.77 114.653 143.638 114.702 143.54 114.807 cv
143.441 114.911 143.391 115.036 143.391 115.182 cv
143.388 115.383 143.573 115.646 143.945 115.97 cv
144.851 116.792 li
145.005 116.927 145.13 117.047 145.231 117.154 cv
145.333 117.259 145.437 117.389 145.547 117.542 cv
145.658 117.695 145.74 117.859 145.794 118.034 cv
145.847 118.209 145.875 118.398 145.875 118.599 cv
145.875 119.158 145.689 119.591 145.318 119.899 cv
144.947 120.206 144.473 120.361 143.895 120.361 cv
cp
f
146.769 120.254 mo
146.769 113.633 li
148.336 113.633 li
148.336 120.254 li
146.769 120.254 li
cp
146.769 112.587 mo
146.769 111.267 li
148.34 111.267 li
148.34 112.587 li
146.769 112.587 li
cp
f
151.412 120.344 mo
151.109 120.34 150.853 120.289 150.642 120.193 cv
150.431 120.096 150.269 119.957 150.156 119.776 cv
150.042 119.595 149.96 119.393 149.91 119.169 cv
149.859 118.946 149.835 118.685 149.835 118.386 cv
149.835 114.667 li
149.18 114.667 li
149.18 113.633 li
149.835 113.633 li
149.835 111.687 li
151.406 111.687 li
151.406 113.633 li
152.413 113.633 li
152.413 114.667 li
151.406 114.667 li
151.406 118.487 li
151.406 118.703 151.453 118.859 151.548 118.954 cv
151.643 119.049 151.796 119.099 152.005 119.102 cv
152.149 119.106 152.308 119.095 152.479 119.069 cv
152.479 120.265 li
152.036 120.324 151.679 120.351 151.412 120.344 cv
cp
f
158.038 119.147 mo
158.157 119.147 158.276 119.102 158.393 119.013 cv
158.51 118.923 158.604 118.832 158.675 118.739 cv
158.675 116.915 li
157.9 117.344 157.512 117.83 157.512 118.375 cv
157.512 118.614 157.558 118.802 157.649 118.94 cv
157.741 119.078 157.87 119.147 158.038 119.147 cv
cp
157.439 120.361 mo
157.022 120.357 156.679 120.194 156.414 119.871 cv
156.147 119.549 156.013 119.184 156.013 118.778 cv
156.013 118.394 156.077 118.058 156.204 117.771 cv
156.331 117.484 156.538 117.238 156.827 117.032 cv
157.116 116.828 157.356 116.679 157.546 116.585 cv
157.736 116.492 158.029 116.369 158.423 116.216 cv
158.536 116.172 158.62 116.138 158.675 116.115 cv
158.675 115.562 li
158.675 115.264 158.641 115.046 158.572 114.907 cv
158.503 114.77 158.362 114.7 158.15 114.7 cv
157.803 114.7 157.626 114.944 157.619 115.428 cv
157.596 115.842 li
156.097 115.785 li
156.1 115.662 li
156.103 115.545 li
156.151 114.852 156.357 114.343 156.721 114.019 cv
157.085 113.695 157.603 113.532 158.278 113.532 cv
158.93 113.532 159.415 113.709 159.729 114.064 cv
160.045 114.417 160.202 114.919 160.202 115.568 cv
160.202 118.593 li
160.202 119.1 160.243 119.654 160.325 120.254 cv
158.911 120.254 li
158.825 119.822 158.77 119.497 158.748 119.281 cv
158.655 119.587 158.5 119.843 158.281 120.05 cv
158.063 120.257 157.783 120.361 157.439 120.361 cv
cp
f
161.349 120.254 mo
161.349 113.633 li
162.837 113.633 li
162.837 114.214 li
163.28 113.748 163.804 113.515 164.408 113.515 cv
164.96 113.515 165.327 113.785 165.509 114.326 cv
165.976 113.785 166.533 113.515 167.182 113.515 cv
167.551 113.515 167.847 113.65 168.071 113.918 cv
168.295 114.187 168.407 114.576 168.407 115.087 cv
168.407 120.254 li
166.919 120.254 li
166.919 115.221 li
166.919 114.979 166.879 114.807 166.798 114.706 cv
166.718 114.606 166.6 114.558 166.444 114.561 cv
166.172 114.569 165.897 114.698 165.622 114.947 cv
165.625 115.014 li
165.628 115.087 li
165.628 120.254 li
164.145 120.254 li
164.145 115.221 li
164.145 114.979 164.105 114.807 164.025 114.706 cv
163.945 114.606 163.825 114.558 163.665 114.561 cv
163.403 114.569 163.128 114.699 162.837 114.952 cv
162.837 120.254 li
161.349 120.254 li
cp
f
170.996 116.239 mo
172.126 116.239 li
172.126 115.607 li
172.126 115.272 172.084 115.031 172 114.885 cv
171.916 114.74 171.767 114.667 171.554 114.667 cv
171.339 114.667 171.191 114.749 171.113 114.913 cv
171.035 115.077 170.996 115.376 170.996 115.808 cv
170.996 116.239 li
cp
171.572 120.361 mo
170.815 120.361 170.27 120.152 169.938 119.734 cv
169.607 119.317 169.441 118.699 169.441 117.883 cv
169.441 116.009 li
169.441 115.193 169.609 114.576 169.944 114.158 cv
170.28 113.74 170.82 113.532 171.566 113.532 cv
171.961 113.532 172.294 113.59 172.564 113.705 cv
172.835 113.822 173.046 113.996 173.196 114.231 cv
173.347 114.466 173.455 114.738 173.517 115.045 cv
173.581 115.353 173.613 115.723 173.613 116.155 cv
173.613 117.022 li
170.996 117.022 li
170.996 118.017 li
170.996 118.156 170.997 118.262 170.999 118.339 cv
171.001 118.415 171.006 118.507 171.018 118.615 cv
171.029 118.724 171.047 118.808 171.071 118.867 cv
171.169 119.049 li
171.331 119.18 li
171.566 119.22 li
171.775 119.22 171.921 119.146 172.003 118.998 cv
172.084 118.852 172.126 118.638 172.126 118.359 cv
172.126 117.978 li
173.607 117.978 li
173.607 118.24 li
173.607 118.927 173.436 119.451 173.095 119.815 cv
172.755 120.179 172.247 120.361 171.572 120.361 cv
cp
f
176.527 120.344 mo
176.224 120.34 175.968 120.289 175.757 120.193 cv
175.547 120.096 175.384 119.957 175.271 119.776 cv
175.157 119.595 175.075 119.393 175.025 119.169 cv
174.974 118.946 174.95 118.685 174.95 118.386 cv
174.95 114.667 li
174.296 114.667 li
174.296 113.633 li
174.95 113.633 li
174.95 111.687 li
176.521 111.687 li
176.521 113.633 li
177.528 113.633 li
177.528 114.667 li
176.521 114.667 li
176.521 118.487 li
176.521 118.703 176.568 118.859 176.664 118.954 cv
176.758 119.049 176.911 119.099 177.12 119.102 cv
177.264 119.106 177.423 119.095 177.594 119.069 cv
177.594 120.265 li
177.151 120.324 176.795 120.351 176.527 120.344 cv
cp
f
178.579 121.825 mo
178.411 121.239 li
178.631 121.183 178.811 121.07 178.951 120.9 cv
179.09 120.731 179.161 120.515 179.161 120.254 cv
178.339 120.254 li
178.339 118.739 li
179.877 118.739 li
179.877 120.148 li
179.877 121.095 179.444 121.655 178.579 121.825 cv
cp
f
185.67 120.361 mo
184.92 120.361 184.381 120.15 184.053 119.729 cv
183.725 119.307 183.561 118.698 183.561 117.9 cv
183.561 115.982 li
183.561 115.184 183.725 114.576 184.053 114.158 cv
184.381 113.74 184.92 113.532 185.67 113.532 cv
186.374 113.532 186.885 113.698 187.205 114.03 cv
187.523 114.362 187.682 114.876 187.682 115.573 cv
187.682 116.111 li
186.223 116.111 li
186.223 115.545 li
186.223 115.21 186.183 114.976 186.103 114.844 cv
186.022 114.711 185.883 114.645 185.686 114.645 cv
185.466 114.645 185.318 114.723 185.242 114.88 cv
185.165 115.036 185.127 115.327 185.127 115.752 cv
185.127 118.168 li
185.127 118.589 185.169 118.874 185.253 119.021 cv
185.337 119.168 185.481 119.241 185.686 119.241 cv
185.895 119.241 186.037 119.17 186.111 119.027 cv
186.185 118.883 186.223 118.666 186.223 118.375 cv
186.223 117.665 li
187.682 117.665 li
187.682 118.291 li
187.682 118.977 187.519 119.493 187.193 119.84 cv
186.867 120.187 186.359 120.361 185.67 120.361 cv
cp
f
190.708 119.259 mo
190.835 119.259 190.938 119.231 191.018 119.175 cv
191.098 119.118 191.156 119.032 191.192 118.914 cv
191.227 118.797 191.251 118.684 191.261 118.573 cv
191.273 118.464 191.278 118.322 191.278 118.146 cv
191.278 115.746 li
191.278 115.609 191.275 115.494 191.27 115.403 cv
191.264 115.312 191.252 115.212 191.231 115.104 cv
191.211 114.995 191.179 114.91 191.138 114.849 cv
190.97 114.693 li
190.9 114.65 190.812 114.628 190.708 114.628 cv
190.581 114.628 190.477 114.657 190.397 114.715 cv
190.317 114.773 190.259 114.861 190.224 114.978 cv
190.188 115.095 190.166 115.209 190.154 115.319 cv
190.143 115.429 190.137 115.572 190.137 115.746 cv
190.137 118.146 li
190.137 118.283 190.14 118.399 190.146 118.49 cv
190.151 118.581 190.165 118.68 190.185 118.786 cv
190.206 118.893 190.236 118.976 190.277 119.037 cv
190.445 119.195 li
190.515 119.238 190.603 119.259 190.708 119.259 cv
cp
190.702 120.361 mo
189.99 120.361 189.46 120.16 189.111 119.759 cv
188.762 119.359 188.589 118.785 188.589 118.039 cv
188.589 115.853 li
188.589 115.108 188.762 114.534 189.111 114.133 cv
189.46 113.733 189.99 113.532 190.702 113.532 cv
191.418 113.532 191.952 113.733 192.304 114.133 cv
192.657 114.534 192.833 115.108 192.833 115.853 cv
192.833 118.039 li
192.833 118.785 192.657 119.359 192.304 119.759 cv
191.952 120.16 191.418 120.361 190.702 120.361 cv
cp
f
193.907 120.254 mo
193.907 113.633 li
195.472 113.633 li
195.472 114.281 li
196.005 113.781 196.545 113.532 197.089 113.532 cv
197.465 113.532 197.74 113.67 197.914 113.946 cv
198.087 114.222 198.173 114.561 198.173 114.964 cv
198.173 120.254 li
196.608 120.254 li
196.608 115.311 li
196.608 115.102 196.578 114.947 196.518 114.846 cv
196.459 114.745 196.343 114.698 196.172 114.7 cv
195.977 114.704 195.745 114.805 195.472 115.003 cv
195.472 120.254 li
193.907 120.254 li
cp
f
201.048 120.361 mo
200.501 120.361 200.051 120.207 199.701 119.902 cv
199.35 119.596 199.11 119.156 198.979 118.582 cv
200.165 118.152 li
200.247 118.517 200.362 118.793 200.511 118.982 cv
200.661 119.17 200.847 119.261 201.071 119.253 cv
201.235 119.249 201.37 119.191 201.476 119.077 cv
201.583 118.963 201.631 118.824 201.625 118.66 cv
201.609 118.422 201.391 118.121 200.97 117.76 cv
200.081 116.999 li
199.439 116.448 199.127 115.871 199.141 115.272 cv
199.152 114.742 199.333 114.32 199.681 114.005 cv
200.03 113.69 200.474 113.532 201.014 113.532 cv
201.533 113.532 201.955 113.689 202.279 114.002 cv
202.603 114.315 202.813 114.735 202.911 115.26 cv
201.881 115.691 li
201.74 115.005 201.475 114.66 201.088 114.656 cv
200.923 114.653 200.792 114.702 200.693 114.807 cv
200.594 114.911 200.545 115.036 200.545 115.182 cv
200.542 115.383 200.726 115.646 201.098 115.97 cv
202.005 116.792 li
202.158 116.927 202.284 117.047 202.384 117.154 cv
202.486 117.259 202.59 117.389 202.701 117.542 cv
202.811 117.695 202.893 117.859 202.947 118.034 cv
203.001 118.209 203.028 118.398 203.028 118.599 cv
203.028 119.158 202.842 119.591 202.471 119.899 cv
202.1 120.206 201.627 120.361 201.048 120.361 cv
cp
f
205.304 116.239 mo
206.434 116.239 li
206.434 115.607 li
206.434 115.272 206.392 115.031 206.308 114.885 cv
206.224 114.74 206.076 114.667 205.863 114.667 cv
205.647 114.667 205.5 114.749 205.422 114.913 cv
205.343 115.077 205.304 115.376 205.304 115.808 cv
205.304 116.239 li
cp
205.88 120.361 mo
205.124 120.361 204.579 120.152 204.247 119.734 cv
203.916 119.317 203.75 118.699 203.75 117.883 cv
203.75 116.009 li
203.75 115.193 203.918 114.576 204.253 114.158 cv
204.589 113.74 205.129 113.532 205.875 113.532 cv
206.269 113.532 206.602 113.59 206.873 113.705 cv
207.143 113.822 207.354 113.996 207.505 114.231 cv
207.656 114.466 207.763 114.738 207.826 115.045 cv
207.889 115.353 207.922 115.723 207.922 116.155 cv
207.922 117.022 li
205.304 117.022 li
205.304 118.017 li
205.304 118.156 205.305 118.262 205.307 118.339 cv
205.309 118.415 205.315 118.507 205.327 118.615 cv
205.338 118.724 205.355 118.808 205.38 118.867 cv
205.477 119.049 li
205.639 119.18 li
205.875 119.22 li
206.084 119.22 206.229 119.146 206.311 118.998 cv
206.392 118.852 206.434 118.638 206.434 118.359 cv
206.434 117.978 li
207.916 117.978 li
207.916 118.24 li
207.916 118.927 207.745 119.451 207.404 119.815 cv
207.063 120.179 206.555 120.361 205.88 120.361 cv
cp
f
210.975 120.361 mo
210.225 120.361 209.687 120.15 209.359 119.729 cv
209.031 119.307 208.867 118.698 208.867 117.9 cv
208.867 115.982 li
208.867 115.184 209.031 114.576 209.359 114.158 cv
209.687 113.74 210.225 113.532 210.975 113.532 cv
211.679 113.532 212.191 113.698 212.51 114.03 cv
212.829 114.362 212.988 114.876 212.988 115.573 cv
212.988 116.111 li
211.529 116.111 li
211.529 115.545 li
211.529 115.21 211.489 114.976 211.409 114.844 cv
211.328 114.711 211.189 114.645 210.992 114.645 cv
210.772 114.645 210.624 114.723 210.547 114.88 cv
210.47 115.036 210.432 115.327 210.432 115.752 cv
210.432 118.168 li
210.432 118.589 210.474 118.874 210.558 119.021 cv
210.642 119.168 210.787 119.241 210.992 119.241 cv
211.201 119.241 211.342 119.17 211.417 119.027 cv
211.491 118.883 211.529 118.666 211.529 118.375 cv
211.529 117.665 li
212.988 117.665 li
212.988 118.291 li
212.988 118.977 212.825 119.493 212.499 119.84 cv
212.172 120.187 211.665 120.361 210.975 120.361 cv
cp
f
215.863 120.344 mo
215.56 120.34 215.304 120.289 215.093 120.193 cv
214.882 120.096 214.72 119.957 214.607 119.776 cv
214.493 119.595 214.411 119.393 214.361 119.169 cv
214.31 118.946 214.286 118.685 214.286 118.386 cv
214.286 114.667 li
213.631 114.667 li
213.631 113.633 li
214.286 113.633 li
214.286 111.687 li
215.857 111.687 li
215.857 113.633 li
216.864 113.633 li
216.864 114.667 li
215.857 114.667 li
215.857 118.487 li
215.857 118.703 215.904 118.859 216 118.954 cv
216.094 119.049 216.247 119.099 216.456 119.102 cv
216.6 119.106 216.759 119.095 216.93 119.069 cv
216.93 120.265 li
216.487 120.324 216.13 120.351 215.863 120.344 cv
cp
f
219.252 116.239 mo
220.381 116.239 li
220.381 115.607 li
220.381 115.272 220.339 115.031 220.255 114.885 cv
220.172 114.74 220.023 114.667 219.81 114.667 cv
219.594 114.667 219.447 114.749 219.369 114.913 cv
219.291 115.077 219.252 115.376 219.252 115.808 cv
219.252 116.239 li
cp
219.828 120.361 mo
219.071 120.361 218.526 120.152 218.194 119.734 cv
217.863 119.317 217.697 118.699 217.697 117.883 cv
217.697 116.009 li
217.697 115.193 217.865 114.576 218.2 114.158 cv
218.536 113.74 219.076 113.532 219.822 113.532 cv
220.216 113.532 220.549 113.59 220.82 113.705 cv
221.09 113.822 221.301 113.996 221.452 114.231 cv
221.603 114.466 221.711 114.738 221.773 115.045 cv
221.837 115.353 221.869 115.723 221.869 116.155 cv
221.869 117.022 li
219.252 117.022 li
219.252 118.017 li
219.252 118.156 219.253 118.262 219.255 118.339 cv
219.256 118.415 219.262 118.507 219.274 118.615 cv
219.285 118.724 219.302 118.808 219.327 118.867 cv
219.424 119.049 li
219.587 119.18 li
219.822 119.22 li
220.031 119.22 220.176 119.146 220.258 118.998 cv
220.339 118.852 220.381 118.638 220.381 118.359 cv
220.381 117.978 li
221.863 117.978 li
221.863 118.24 li
221.863 118.927 221.692 119.451 221.351 119.815 cv
221.01 120.179 220.503 120.361 219.828 120.361 cv
cp
f
224.783 120.344 mo
224.48 120.34 224.224 120.289 224.013 120.193 cv
223.802 120.096 223.64 119.957 223.527 119.776 cv
223.413 119.595 223.331 119.393 223.281 119.169 cv
223.23 118.946 223.206 118.685 223.206 118.386 cv
223.206 114.667 li
222.551 114.667 li
222.551 113.633 li
223.206 113.633 li
223.206 111.687 li
224.777 111.687 li
224.777 113.633 li
225.784 113.633 li
225.784 114.667 li
224.777 114.667 li
224.777 118.487 li
224.777 118.703 224.824 118.859 224.92 118.954 cv
225.014 119.049 225.167 119.099 225.376 119.102 cv
225.52 119.106 225.679 119.095 225.85 119.069 cv
225.85 120.265 li
225.407 120.324 225.05 120.351 224.783 120.344 cv
cp
f
227.78 120.355 mo
227.403 120.355 227.129 120.217 226.955 119.941 cv
226.782 119.665 226.695 119.325 226.695 118.923 cv
226.695 113.633 li
228.255 113.633 li
228.255 118.605 li
228.255 118.81 228.287 118.962 228.35 119.063 cv
228.414 119.163 228.531 119.212 228.703 119.208 cv
228.885 119.208 229.109 119.115 229.374 118.929 cv
229.374 113.633 li
230.934 113.633 li
230.934 120.254 li
229.374 120.254 li
229.374 119.633 li
228.848 120.115 228.317 120.355 227.78 120.355 cv
cp
f
232.165 120.254 mo
232.165 113.633 li
233.73 113.633 li
233.73 114.651 li
233.95 114.259 234.172 113.978 234.398 113.806 cv
234.624 113.635 234.866 113.549 235.123 113.549 cv
235.358 113.576 li
235.358 115.126 li
235.182 115.059 235.002 115.026 234.815 115.026 cv
234.591 115.032 234.395 115.089 234.225 115.193 cv
234.055 115.297 233.89 115.471 233.73 115.713 cv
233.73 120.254 li
232.165 120.254 li
cp
f
59.2389 132.89 mo
59.358 132.89 59.4772 132.845 59.5944 132.756 cv
59.7115 132.666 59.8053 132.575 59.8766 132.482 cv
59.8766 130.658 li
59.1012 131.087 58.7135 131.573 58.7135 132.118 cv
58.7135 132.357 58.7594 132.545 58.8502 132.683 cv
58.942 132.822 59.0709 132.89 59.2389 132.89 cv
cp
58.6403 134.104 mo
58.2233 134.1 57.8805 133.937 57.6149 133.615 cv
57.3483 133.292 57.2145 132.927 57.2145 132.521 cv
57.2145 132.137 57.278 131.801 57.4049 131.514 cv
57.5319 131.227 57.7389 130.981 58.028 130.776 cv
58.317 130.572 58.5573 130.422 58.7467 130.328 cv
58.9371 130.236 59.2301 130.113 59.6246 129.959 cv
59.7369 129.915 59.8209 129.881 59.8766 129.859 cv
59.8766 129.305 li
59.8766 129.007 59.8424 128.789 59.7731 128.651 cv
59.7037 128.513 59.5631 128.444 59.3512 128.444 cv
59.0045 128.444 58.8268 128.687 58.8199 129.171 cv
58.7975 129.585 li
57.2985 129.529 li
57.3014 129.406 li
57.3043 129.288 li
57.3522 128.595 57.5582 128.086 57.9225 127.762 cv
58.2858 127.438 58.8043 127.276 59.4791 127.276 cv
60.1315 127.276 60.6158 127.452 60.9303 127.807 cv
61.2457 128.16 61.403 128.662 61.403 129.311 cv
61.403 132.336 li
61.403 132.843 61.444 133.397 61.526 133.997 cv
60.1119 133.997 li
60.026 133.565 59.9713 133.24 59.9489 133.025 cv
59.8561 133.33 59.7008 133.586 59.4821 133.793 cv
59.2643 134 58.984 134.104 58.6403 134.104 cv
cp
f
64.6022 132.985 mo
64.7926 132.985 64.9938 132.925 65.2067 132.806 cv
65.2067 128.578 li
64.9938 128.444 64.7906 128.377 64.5973 128.377 cv
64.3883 128.377 64.2379 128.472 64.1471 128.662 cv
64.0553 128.853 64.0094 129.095 64.0094 129.389 cv
64.0094 131.817 li
64.0094 132.055 64.0231 132.252 64.0485 132.409 cv
64.0748 132.566 64.1334 132.7 64.2252 132.815 cv
64.316 132.928 64.442 132.985 64.6022 132.985 cv
cp
64.0543 134.104 mo
63.5143 134.104 63.109 133.911 62.8414 133.528 cv
62.5729 133.144 62.4381 132.534 62.4381 131.698 cv
62.4381 129.775 li
62.4381 129.421 62.4655 129.1 62.5192 128.813 cv
62.5739 128.526 62.6588 128.263 62.777 128.025 cv
62.8942 127.786 63.0592 127.602 63.2711 127.471 cv
63.484 127.34 63.7379 127.276 64.0319 127.276 cv
64.4498 127.276 64.8414 127.445 65.2067 127.784 cv
65.2067 124.725 li
66.7721 124.725 li
66.7721 133.997 li
65.2067 133.997 li
65.2067 133.544 li
64.8522 133.913 64.4684 134.1 64.0543 134.104 cv
cp
f
68.0192 133.997 mo
68.0192 127.376 li
69.5856 127.376 li
69.5856 133.997 li
68.0192 133.997 li
cp
68.0192 126.33 mo
68.0192 125.01 li
69.5905 125.01 li
69.5905 126.33 li
68.0192 126.33 li
cp
f
73.0699 132.98 mo
73.1852 132.98 73.2819 132.947 73.36 132.882 cv
73.4391 132.817 73.4957 132.721 73.5309 132.596 cv
73.566 132.472 73.5905 132.343 73.6031 132.21 cv
73.6168 132.078 73.6237 131.919 73.6237 131.733 cv
73.6237 129.45 li
73.6237 129.298 73.6149 129.16 73.5983 129.039 cv
73.5817 128.918 73.5524 128.803 73.5114 128.693 cv
73.4703 128.583 73.4088 128.499 73.3268 128.442 cv
73.2448 128.383 73.1461 128.357 73.0299 128.361 cv
72.8248 128.364 72.609 128.451 72.3815 128.623 cv
72.3815 132.773 li
72.6051 132.91 72.8346 132.98 73.0699 132.98 cv
cp
70.816 136.178 mo
70.816 127.376 li
72.3815 127.376 li
72.3815 127.885 li
72.7916 127.475 73.2369 127.272 73.7184 127.276 cv
73.9528 127.279 74.1608 127.333 74.3414 127.438 cv
74.5231 127.542 74.6647 127.671 74.7672 127.826 cv
74.8698 127.981 74.9528 128.163 75.0182 128.374 cv
75.0836 128.585 75.1276 128.781 75.15 128.961 cv
75.1725 129.142 75.1832 129.325 75.1832 129.512 cv
75.1832 131.682 li
75.1832 132.018 75.1559 132.326 75.0992 132.608 cv
75.0436 132.889 74.9557 133.145 74.8365 133.373 cv
74.7174 133.603 74.5543 133.782 74.3473 133.91 cv
74.1403 134.039 73.8971 134.104 73.6178 134.104 cv
73.2076 134.104 72.7955 133.905 72.3815 133.505 cv
72.3815 136.178 li
70.816 136.178 li
cp
f
76.3239 133.997 mo
76.3239 127.376 li
77.8903 127.376 li
77.8903 133.997 li
76.3239 133.997 li
cp
76.3239 126.33 mo
76.3239 125.01 li
77.8951 125.01 li
77.8951 126.33 li
76.3239 126.33 li
cp
f
80.8375 134.104 mo
80.2897 134.104 79.8405 133.95 79.4899 133.645 cv
79.1393 133.339 78.899 132.9 78.7682 132.325 cv
79.9537 131.895 li
80.0358 132.26 80.151 132.536 80.3004 132.725 cv
80.4498 132.913 80.6364 133.004 80.86 132.996 cv
81.024 132.992 81.1588 132.934 81.2653 132.821 cv
81.3717 132.706 81.4205 132.568 81.4137 132.404 cv
81.3981 132.165 81.1803 131.865 80.7594 131.503 cv
79.8698 130.742 li
79.2281 130.191 78.9156 129.615 78.9303 129.015 cv
78.941 128.486 79.1217 128.063 79.4703 127.748 cv
79.819 127.433 80.2633 127.276 80.8033 127.276 cv
81.3219 127.276 81.7438 127.432 82.068 127.745 cv
82.3922 128.058 82.6022 128.478 82.6998 129.003 cv
81.6705 129.434 li
81.5289 128.748 81.2643 128.404 80.8766 128.4 cv
80.7125 128.396 80.5807 128.446 80.4821 128.55 cv
80.3834 128.655 80.3336 128.78 80.3336 128.925 cv
80.3307 129.126 80.5153 129.389 80.8873 129.713 cv
81.7936 130.535 li
81.9469 130.67 82.0729 130.79 82.1735 130.897 cv
82.275 131.002 82.3795 131.132 82.4899 131.285 cv
82.6002 131.438 82.6823 131.602 82.736 131.778 cv
82.7897 131.952 82.817 132.141 82.817 132.342 cv
82.817 132.902 82.6315 133.334 82.2604 133.642 cv
81.8893 133.949 81.4156 134.104 80.8375 134.104 cv
cp
f
85.6471 134.104 mo
84.8971 134.104 84.359 133.893 84.0309 133.472 cv
83.7028 133.05 83.5387 132.441 83.5387 131.643 cv
83.5387 129.725 li
83.5387 128.927 83.7028 128.32 84.0309 127.902 cv
84.359 127.484 84.8971 127.276 85.6471 127.276 cv
86.3512 127.276 86.8629 127.442 87.1823 127.773 cv
87.5006 128.105 87.6598 128.619 87.6598 129.317 cv
87.6598 129.854 li
86.2008 129.854 li
86.2008 129.288 li
86.2008 128.953 86.1608 128.719 86.0807 128.587 cv
85.9996 128.454 85.861 128.388 85.6637 128.388 cv
85.444 128.388 85.2955 128.466 85.2194 128.623 cv
85.1422 128.78 85.1041 129.071 85.1041 129.495 cv
85.1041 131.911 li
85.1041 132.332 85.1461 132.617 85.2301 132.764 cv
85.3141 132.911 85.4586 132.985 85.6637 132.985 cv
85.8727 132.985 86.0143 132.913 86.0885 132.77 cv
86.1627 132.626 86.2008 132.409 86.2008 132.118 cv
86.2008 131.408 li
87.6598 131.408 li
87.6598 132.034 li
87.6598 132.72 87.4967 133.237 87.1705 133.583 cv
86.8444 133.93 86.3365 134.104 85.6471 134.104 cv
cp
f
88.7389 133.997 mo
88.7389 127.376 li
90.3053 127.376 li
90.3053 133.997 li
88.7389 133.997 li
cp
88.7389 126.33 mo
88.7389 125.01 li
90.3102 125.01 li
90.3102 126.33 li
88.7389 126.33 li
cp
f
91.5358 133.997 mo
91.5358 127.376 li
93.1012 127.376 li
93.1012 128.025 li
93.6344 127.525 94.1735 127.276 94.7174 127.276 cv
95.0944 127.276 95.3688 127.413 95.5426 127.689 cv
95.7155 127.965 95.8024 128.304 95.8024 128.707 cv
95.8024 133.997 li
94.2369 133.997 li
94.2369 129.054 li
94.2369 128.845 94.2067 128.69 94.1471 128.589 cv
94.0875 128.489 93.9723 128.441 93.8004 128.444 cv
93.6061 128.448 93.3737 128.548 93.1012 128.746 cv
93.1012 133.997 li
91.5358 133.997 li
cp
f
98.9342 130.955 mo
99.1949 130.955 99.3649 130.858 99.443 130.664 cv
99.5221 130.47 99.5612 130.127 99.5612 129.635 cv
99.5612 129.128 99.5231 128.776 99.4489 128.578 cv
99.3746 128.381 99.2067 128.281 98.9459 128.281 cv
98.6813 128.281 98.5094 128.382 98.4313 128.581 cv
98.3531 128.781 98.3141 129.132 98.3141 129.635 cv
98.3141 129.814 98.317 129.966 98.3248 130.091 cv
98.3326 130.216 98.3492 130.336 98.3756 130.451 cv
98.401 130.568 98.4371 130.659 98.4811 130.729 cv
98.6608 130.894 li
98.735 130.935 98.8258 130.955 98.9342 130.955 cv
cp
99.236 134.904 mo
99.5573 134.904 99.7906 134.863 99.9381 134.781 cv
100.086 134.698 100.161 134.566 100.165 134.383 cv
100.176 134.186 100.126 134.041 100.013 133.949 cv
99.902 133.859 99.6989 133.8 99.4039 133.774 cv
98.3531 133.673 li
98.1256 133.938 98.0114 134.182 98.0114 134.406 cv
98.0114 134.525 98.0406 134.618 98.0983 134.685 cv
98.1559 134.752 98.275 134.805 98.4567 134.845 cv
98.6373 134.884 98.8971 134.904 99.236 134.904 cv
cp
99.2477 136.005 mo
99.0504 136.005 98.8776 136.003 98.7301 135.999 cv
98.5826 135.995 98.4127 135.986 98.2184 135.969 cv
98.025 135.951 97.858 135.928 97.7184 135.896 cv
97.5787 135.865 97.4352 135.821 97.2877 135.765 cv
97.1403 135.708 97.0211 135.643 96.9293 135.566 cv
96.8385 135.49 96.7623 135.393 96.7028 135.276 cv
96.6432 135.157 96.6139 135.027 96.6139 134.881 cv
96.6139 134.325 96.9244 133.858 97.5475 133.477 cv
97.1002 133.324 96.8629 133.076 96.8375 132.734 cv
96.819 132.495 96.8688 132.289 96.9879 132.115 cv
97.108 131.942 97.3112 131.738 97.5983 131.503 cv
97.3522 131.317 97.1676 131.083 97.0446 130.804 cv
96.9215 130.525 96.86 130.15 96.86 129.68 cv
96.86 128.867 97.0358 128.263 97.3883 127.868 cv
97.7408 127.473 98.2506 127.276 98.9176 127.276 cv
99.6031 127.276 100.077 127.491 100.339 127.924 cv
100.421 127.823 100.545 127.704 100.71 127.566 cv
100.876 127.428 101.05 127.315 101.233 127.225 cv
101.451 127.124 li
101.82 127.996 li
101.689 128.031 101.492 128.097 101.227 128.198 cv
100.963 128.299 100.786 128.377 100.696 128.433 cv
100.767 128.564 100.829 128.747 100.88 128.984 cv
100.933 129.221 100.959 129.458 100.959 129.697 cv
100.959 131.21 100.297 131.967 98.9733 131.967 cv
98.8658 131.967 98.7174 131.951 98.5289 131.92 cv
98.3405 131.888 98.2184 131.861 98.1627 131.839 cv
98.0358 132.029 97.9762 132.174 97.984 132.275 cv
97.9948 132.424 98.1891 132.517 98.5651 132.555 cv
98.61 132.562 98.8073 132.583 99.1578 132.618 cv
99.5084 132.655 99.7135 132.676 99.7731 132.683 cv
100.329 132.742 100.735 132.904 100.993 133.167 cv
101.25 133.43 101.379 133.805 101.379 134.294 cv
101.379 134.879 101.214 135.311 100.886 135.588 cv
100.558 135.866 100.012 136.005 99.2477 136.005 cv
cp
f
106.501 129.982 mo
107.63 129.982 li
107.63 129.35 li
107.63 129.015 107.589 128.774 107.505 128.628 cv
107.421 128.484 107.272 128.41 107.059 128.41 cv
106.843 128.41 106.696 128.492 106.618 128.656 cv
106.54 128.821 106.501 129.119 106.501 129.551 cv
106.501 129.982 li
cp
107.077 134.104 mo
106.32 134.104 105.775 133.895 105.443 133.477 cv
105.112 133.06 104.946 132.443 104.946 131.626 cv
104.946 129.752 li
104.946 128.936 105.114 128.32 105.449 127.902 cv
105.785 127.484 106.325 127.276 107.071 127.276 cv
107.465 127.276 107.798 127.333 108.069 127.448 cv
108.339 127.565 108.55 127.74 108.701 127.974 cv
108.852 128.209 108.96 128.481 109.022 128.788 cv
109.086 129.096 109.118 129.466 109.118 129.898 cv
109.118 130.765 li
106.501 130.765 li
106.501 131.76 li
106.501 131.899 106.502 132.005 106.504 132.082 cv
106.505 132.158 106.511 132.25 106.523 132.359 cv
106.534 132.467 106.551 132.551 106.576 132.611 cv
106.673 132.792 li
106.836 132.923 li
107.071 132.963 li
107.28 132.963 107.425 132.889 107.507 132.741 cv
107.589 132.595 107.63 132.381 107.63 132.102 cv
107.63 131.721 li
109.112 131.721 li
109.112 131.984 li
109.112 132.67 108.941 133.195 108.6 133.558 cv
108.259 133.922 107.752 134.104 107.077 134.104 cv
cp
f
110.287 133.997 mo
110.287 124.725 li
111.852 124.725 li
111.852 133.997 li
110.287 133.997 li
cp
f
113.132 133.997 mo
113.132 127.376 li
114.699 127.376 li
114.699 133.997 li
113.132 133.997 li
cp
113.132 126.33 mo
113.132 125.01 li
114.704 125.01 li
114.704 126.33 li
113.132 126.33 li
cp
f
117.775 134.087 mo
117.472 134.083 117.216 134.032 117.005 133.936 cv
116.795 133.839 116.632 133.7 116.519 133.519 cv
116.405 133.338 116.323 133.136 116.273 132.912 cv
116.222 132.689 116.198 132.428 116.198 132.129 cv
116.198 128.41 li
115.544 128.41 li
115.544 127.376 li
116.198 127.376 li
116.198 125.43 li
117.769 125.43 li
117.769 127.376 li
118.776 127.376 li
118.776 128.41 li
117.769 128.41 li
117.769 132.23 li
117.769 132.447 117.816 132.602 117.912 132.698 cv
118.006 132.792 118.159 132.842 118.368 132.845 cv
118.512 132.849 118.672 132.838 118.842 132.812 cv
118.842 134.008 li
118.399 134.068 118.043 134.094 117.775 134.087 cv
cp
f
119.827 135.569 mo
119.659 134.982 li
119.88 134.926 120.059 134.813 120.199 134.643 cv
120.339 134.474 120.409 134.258 120.409 133.997 cv
119.587 133.997 li
119.587 132.482 li
121.125 132.482 li
121.125 133.891 li
121.125 134.838 120.692 135.398 119.827 135.569 cv
cp
f
126.649 134.104 mo
126.101 134.104 125.652 133.95 125.301 133.645 cv
124.951 133.339 124.711 132.9 124.58 132.325 cv
125.765 131.895 li
125.847 132.26 125.963 132.536 126.112 132.725 cv
126.261 132.913 126.448 133.004 126.672 132.996 cv
126.836 132.992 126.97 132.934 127.077 132.821 cv
127.183 132.706 127.232 132.568 127.225 132.404 cv
127.21 132.165 126.992 131.865 126.571 131.503 cv
125.681 130.742 li
125.04 130.191 124.727 129.615 124.742 129.015 cv
124.753 128.486 124.933 128.063 125.282 127.748 cv
125.63 127.433 126.075 127.276 126.615 127.276 cv
127.133 127.276 127.555 127.432 127.88 127.745 cv
128.204 128.058 128.414 128.478 128.511 129.003 cv
127.482 129.434 li
127.34 128.748 127.076 128.404 126.688 128.4 cv
126.524 128.396 126.392 128.446 126.294 128.55 cv
126.195 128.655 126.145 128.78 126.145 128.925 cv
126.142 129.126 126.327 129.389 126.699 129.713 cv
127.605 130.535 li
127.758 130.67 127.884 130.79 127.985 130.897 cv
128.087 131.002 128.191 131.132 128.301 131.285 cv
128.412 131.438 128.494 131.602 128.547 131.778 cv
128.601 131.952 128.629 132.141 128.629 132.342 cv
128.629 132.902 128.443 133.334 128.072 133.642 cv
127.701 133.949 127.227 134.104 126.649 134.104 cv
cp
f
130.905 129.982 mo
132.035 129.982 li
132.035 129.35 li
132.035 129.015 131.993 128.774 131.909 128.628 cv
131.825 128.484 131.676 128.41 131.464 128.41 cv
131.248 128.41 131.1 128.492 131.022 128.656 cv
130.944 128.821 130.905 129.119 130.905 129.551 cv
130.905 129.982 li
cp
131.481 134.104 mo
130.724 134.104 130.179 133.895 129.847 133.477 cv
129.516 133.06 129.35 132.443 129.35 131.626 cv
129.35 129.752 li
129.35 128.936 129.518 128.32 129.853 127.902 cv
130.189 127.484 130.729 127.276 131.475 127.276 cv
131.87 127.276 132.203 127.333 132.473 127.448 cv
132.744 127.565 132.955 127.74 133.105 127.974 cv
133.256 128.209 133.364 128.481 133.426 128.788 cv
133.49 129.096 133.522 129.466 133.522 129.898 cv
133.522 130.765 li
130.905 130.765 li
130.905 131.76 li
130.905 131.899 130.906 132.005 130.908 132.082 cv
130.91 132.158 130.916 132.25 130.927 132.359 cv
130.938 132.467 130.956 132.551 130.98 132.611 cv
131.078 132.792 li
131.24 132.923 li
131.475 132.963 li
131.684 132.963 131.83 132.889 131.912 132.741 cv
131.993 132.595 132.035 132.381 132.035 132.102 cv
132.035 131.721 li
133.516 131.721 li
133.516 131.984 li
133.516 132.67 133.345 133.195 133.005 133.558 cv
132.664 133.922 132.156 134.104 131.481 134.104 cv
cp
f
136.642 132.985 mo
136.833 132.985 137.034 132.925 137.247 132.806 cv
137.247 128.578 li
137.034 128.444 136.831 128.377 136.637 128.377 cv
136.428 128.377 136.278 128.472 136.187 128.662 cv
136.095 128.853 136.049 129.095 136.049 129.389 cv
136.049 131.817 li
136.049 132.055 136.063 132.252 136.089 132.409 cv
136.115 132.566 136.173 132.7 136.265 132.815 cv
136.356 132.928 136.482 132.985 136.642 132.985 cv
cp
136.094 134.104 mo
135.554 134.104 135.149 133.911 134.881 133.528 cv
134.613 133.144 134.478 132.534 134.478 131.698 cv
134.478 129.775 li
134.478 129.421 134.505 129.1 134.559 128.813 cv
134.614 128.526 134.699 128.263 134.817 128.025 cv
134.934 127.786 135.099 127.602 135.311 127.471 cv
135.524 127.34 135.778 127.276 136.072 127.276 cv
136.49 127.276 136.881 127.445 137.247 127.784 cv
137.247 124.725 li
138.812 124.725 li
138.812 133.997 li
137.247 133.997 li
137.247 133.544 li
136.892 133.913 136.508 134.1 136.094 134.104 cv
cp
f
144.857 132.985 mo
145.047 132.985 145.249 132.925 145.462 132.806 cv
145.462 128.578 li
145.249 128.444 145.046 128.377 144.852 128.377 cv
144.643 128.377 144.493 128.472 144.402 128.662 cv
144.31 128.853 144.264 129.095 144.264 129.389 cv
144.264 131.817 li
144.264 132.055 144.278 132.252 144.303 132.409 cv
144.33 132.566 144.388 132.7 144.48 132.815 cv
144.571 132.928 144.697 132.985 144.857 132.985 cv
cp
144.309 134.104 mo
143.769 134.104 143.364 133.911 143.096 133.528 cv
142.828 133.144 142.693 132.534 142.693 131.698 cv
142.693 129.775 li
142.693 129.421 142.72 129.1 142.774 128.813 cv
142.829 128.526 142.914 128.263 143.032 128.025 cv
143.149 127.786 143.314 127.602 143.526 127.471 cv
143.739 127.34 143.993 127.276 144.287 127.276 cv
144.705 127.276 145.096 127.445 145.462 127.784 cv
145.462 124.725 li
147.027 124.725 li
147.027 133.997 li
145.462 133.997 li
145.462 133.544 li
145.107 133.913 144.723 134.1 144.309 134.104 cv
cp
f
150.22 133.002 mo
150.347 133.002 150.451 132.974 150.531 132.918 cv
150.611 132.862 150.669 132.776 150.705 132.657 cv
150.74 132.54 150.763 132.427 150.774 132.317 cv
150.786 132.207 150.791 132.065 150.791 131.889 cv
150.791 129.49 li
150.791 129.352 150.788 129.238 150.783 129.146 cv
150.777 129.055 150.764 128.955 150.744 128.847 cv
150.723 128.739 150.692 128.654 150.651 128.592 cv
150.483 128.436 li
150.413 128.393 150.325 128.371 150.22 128.371 cv
150.093 128.371 149.99 128.401 149.91 128.458 cv
149.83 128.516 149.772 128.604 149.737 128.721 cv
149.701 128.838 149.678 128.952 149.667 129.062 cv
149.656 129.172 149.65 129.315 149.65 129.49 cv
149.65 131.889 li
149.65 132.027 149.653 132.142 149.659 132.233 cv
149.664 132.324 149.677 132.423 149.698 132.53 cv
149.718 132.636 149.749 132.719 149.79 132.781 cv
149.958 132.938 li
150.028 132.981 150.116 133.002 150.22 133.002 cv
cp
150.214 134.104 mo
149.503 134.104 148.972 133.904 148.624 133.502 cv
148.275 133.102 148.101 132.529 148.101 131.782 cv
148.101 129.596 li
148.101 128.851 148.275 128.278 148.624 127.876 cv
148.972 127.476 149.503 127.276 150.214 127.276 cv
150.93 127.276 151.464 127.476 151.817 127.876 cv
152.17 128.278 152.345 128.851 152.345 129.596 cv
152.345 131.782 li
152.345 132.529 152.17 133.102 151.817 133.502 cv
151.464 133.904 150.93 134.104 150.214 134.104 cv
cp
f
157.647 129.982 mo
158.777 129.982 li
158.777 129.35 li
158.777 129.015 158.735 128.774 158.651 128.628 cv
158.567 128.484 158.419 128.41 158.206 128.41 cv
157.99 128.41 157.842 128.492 157.764 128.656 cv
157.686 128.821 157.647 129.119 157.647 129.551 cv
157.647 129.982 li
cp
158.223 134.104 mo
157.466 134.104 156.922 133.895 156.589 133.477 cv
156.258 133.06 156.092 132.443 156.092 131.626 cv
156.092 129.752 li
156.092 128.936 156.26 128.32 156.595 127.902 cv
156.931 127.484 157.471 127.276 158.217 127.276 cv
158.612 127.276 158.945 127.333 159.215 127.448 cv
159.486 127.565 159.697 127.74 159.847 127.974 cv
159.999 128.209 160.106 128.481 160.169 128.788 cv
160.232 129.096 160.264 129.466 160.264 129.898 cv
160.264 130.765 li
157.647 130.765 li
157.647 131.76 li
157.647 131.899 157.648 132.005 157.65 132.082 cv
157.652 132.158 157.658 132.25 157.67 132.359 cv
157.68 132.467 157.698 132.551 157.722 132.611 cv
157.82 132.792 li
157.982 132.923 li
158.217 132.963 li
158.426 132.963 158.572 132.889 158.654 132.741 cv
158.735 132.595 158.777 132.381 158.777 132.102 cv
158.777 131.721 li
160.258 131.721 li
160.258 131.984 li
160.258 132.67 160.088 133.195 159.747 133.558 cv
159.406 133.922 158.898 134.104 158.223 134.104 cv
cp
f
161.382 133.997 mo
161.382 127.376 li
162.949 127.376 li
162.949 133.997 li
161.382 133.997 li
cp
161.382 126.33 mo
161.382 125.01 li
162.954 125.01 li
162.954 126.33 li
161.382 126.33 li
cp
f
165.219 134.098 mo
164.842 134.098 164.568 133.96 164.394 133.684 cv
164.221 133.408 164.134 133.069 164.134 132.666 cv
164.134 127.376 li
165.695 127.376 li
165.695 132.348 li
165.695 132.553 165.726 132.705 165.79 132.806 cv
165.853 132.906 165.97 132.955 166.142 132.951 cv
166.325 132.951 166.548 132.859 166.813 132.672 cv
166.813 127.376 li
168.374 127.376 li
168.374 133.997 li
166.813 133.997 li
166.813 133.376 li
166.288 133.858 165.756 134.098 165.219 134.098 cv
cp
f
171.298 134.104 mo
170.751 134.104 170.301 133.95 169.951 133.645 cv
169.6 133.339 169.36 132.9 169.229 132.325 cv
170.415 131.895 li
170.497 132.26 170.612 132.536 170.761 132.725 cv
170.911 132.913 171.097 133.004 171.321 132.996 cv
171.485 132.992 171.62 132.934 171.726 132.821 cv
171.833 132.706 171.881 132.568 171.875 132.404 cv
171.859 132.165 171.641 131.865 171.22 131.503 cv
170.331 130.742 li
169.689 130.191 169.377 129.615 169.391 129.015 cv
169.402 128.486 169.583 128.063 169.931 127.748 cv
170.28 127.433 170.724 127.276 171.264 127.276 cv
171.783 127.276 172.205 127.432 172.529 127.745 cv
172.853 128.058 173.063 128.478 173.161 129.003 cv
172.131 129.434 li
171.99 128.748 171.725 128.404 171.338 128.4 cv
171.173 128.396 171.042 128.446 170.943 128.55 cv
170.844 128.655 170.795 128.78 170.795 128.925 cv
170.792 129.126 170.976 129.389 171.348 129.713 cv
172.255 130.535 li
172.408 130.67 172.534 130.79 172.634 130.897 cv
172.736 131.002 172.84 131.132 172.951 131.285 cv
173.061 131.438 173.143 131.602 173.197 131.778 cv
173.251 131.952 173.278 132.141 173.278 132.342 cv
173.278 132.902 173.092 133.334 172.721 133.642 cv
172.35 133.949 171.877 134.104 171.298 134.104 cv
cp
f
174.123 133.997 mo
174.123 127.376 li
175.61 127.376 li
175.61 127.957 li
176.053 127.491 176.578 127.258 177.181 127.258 cv
177.733 127.258 178.1 127.529 178.283 128.07 cv
178.75 127.529 179.306 127.258 179.956 127.258 cv
180.325 127.258 180.621 127.393 180.844 127.661 cv
181.068 127.93 181.18 128.32 181.18 128.83 cv
181.18 133.997 li
179.692 133.997 li
179.692 128.964 li
179.692 128.722 179.652 128.55 179.572 128.449 cv
179.492 128.349 179.374 128.301 179.217 128.304 cv
178.945 128.312 178.671 128.441 178.395 128.69 cv
178.398 128.757 li
178.401 128.83 li
178.401 133.997 li
176.919 133.997 li
176.919 128.964 li
176.919 128.722 176.879 128.55 176.798 128.449 cv
176.718 128.349 176.598 128.301 176.438 128.304 cv
176.176 128.312 175.901 128.443 175.61 128.696 cv
175.61 133.997 li
174.123 133.997 li
cp
f
184.334 133.002 mo
184.461 133.002 184.564 132.974 184.644 132.918 cv
184.724 132.862 184.782 132.776 184.818 132.657 cv
184.853 132.54 184.877 132.427 184.887 132.317 cv
184.899 132.207 184.904 132.065 184.904 131.889 cv
184.904 129.49 li
184.904 129.352 184.901 129.238 184.896 129.146 cv
184.89 129.055 184.878 128.955 184.857 128.847 cv
184.837 128.739 184.805 128.654 184.764 128.592 cv
184.596 128.436 li
184.526 128.393 184.438 128.371 184.334 128.371 cv
184.207 128.371 184.103 128.401 184.023 128.458 cv
183.943 128.516 183.885 128.604 183.85 128.721 cv
183.814 128.838 183.792 128.952 183.78 129.062 cv
183.769 129.172 183.763 129.315 183.763 129.49 cv
183.763 131.889 li
183.763 132.027 183.766 132.142 183.772 132.233 cv
183.777 132.324 183.791 132.423 183.811 132.53 cv
183.832 132.636 183.862 132.719 183.903 132.781 cv
184.071 132.938 li
184.141 132.981 184.229 133.002 184.334 133.002 cv
cp
184.328 134.104 mo
183.616 134.104 183.086 133.904 182.737 133.502 cv
182.388 133.102 182.214 132.529 182.214 131.782 cv
182.214 129.596 li
182.214 128.851 182.388 128.278 182.737 127.876 cv
183.086 127.476 183.616 127.276 184.328 127.276 cv
185.044 127.276 185.578 127.476 185.93 127.876 cv
186.283 128.278 186.459 128.851 186.459 129.596 cv
186.459 131.782 li
186.459 132.529 186.283 133.102 185.93 133.502 cv
185.578 133.904 185.044 134.104 184.328 134.104 cv
cp
f
189.585 132.985 mo
189.775 132.985 189.976 132.925 190.189 132.806 cv
190.189 128.578 li
189.976 128.444 189.773 128.377 189.58 128.377 cv
189.371 128.377 189.22 128.472 189.13 128.662 cv
189.038 128.853 188.992 129.095 188.992 129.389 cv
188.992 131.817 li
188.992 132.055 189.005 132.252 189.031 132.409 cv
189.057 132.566 189.116 132.7 189.208 132.815 cv
189.298 132.928 189.424 132.985 189.585 132.985 cv
cp
189.037 134.104 mo
188.497 134.104 188.091 133.911 187.824 133.528 cv
187.555 133.144 187.421 132.534 187.421 131.698 cv
187.421 129.775 li
187.421 129.421 187.448 129.1 187.502 128.813 cv
187.556 128.526 187.641 128.263 187.759 128.025 cv
187.877 127.786 188.042 127.602 188.254 127.471 cv
188.466 127.34 188.72 127.276 189.014 127.276 cv
189.432 127.276 189.824 127.445 190.189 127.784 cv
190.189 124.725 li
191.755 124.725 li
191.755 133.997 li
190.189 133.997 li
190.189 133.544 li
189.835 133.913 189.451 134.1 189.037 134.104 cv
cp
f
197.593 134.087 mo
197.291 134.083 197.035 134.032 196.824 133.936 cv
196.613 133.839 196.451 133.7 196.338 133.519 cv
196.223 133.338 196.141 133.136 196.091 132.912 cv
196.041 132.689 196.016 132.428 196.016 132.129 cv
196.016 128.41 li
195.362 128.41 li
195.362 127.376 li
196.016 127.376 li
196.016 125.43 li
197.588 125.43 li
197.588 127.376 li
198.594 127.376 li
198.594 128.41 li
197.588 128.41 li
197.588 132.23 li
197.588 132.447 197.634 132.602 197.73 132.698 cv
197.825 132.792 197.977 132.842 198.186 132.845 cv
198.331 132.849 198.49 132.838 198.661 132.812 cv
198.661 134.008 li
198.217 134.068 197.861 134.094 197.593 134.087 cv
cp
f
200.982 129.982 mo
202.112 129.982 li
202.112 129.35 li
202.112 129.015 202.07 128.774 201.986 128.628 cv
201.902 128.484 201.754 128.41 201.541 128.41 cv
201.325 128.41 201.177 128.492 201.099 128.656 cv
201.021 128.821 200.982 129.119 200.982 129.551 cv
200.982 129.982 li
cp
201.558 134.104 mo
200.801 134.104 200.256 133.895 199.924 133.477 cv
199.593 133.06 199.427 132.443 199.427 131.626 cv
199.427 129.752 li
199.427 128.936 199.595 128.32 199.93 127.902 cv
200.266 127.484 200.806 127.276 201.552 127.276 cv
201.947 127.276 202.28 127.333 202.55 127.448 cv
202.821 127.565 203.032 127.74 203.182 127.974 cv
203.334 128.209 203.441 128.481 203.504 128.788 cv
203.567 129.096 203.599 129.466 203.599 129.898 cv
203.599 130.765 li
200.982 130.765 li
200.982 131.76 li
200.982 131.899 200.983 132.005 200.985 132.082 cv
200.987 132.158 200.993 132.25 201.005 132.359 cv
201.015 132.467 201.033 132.551 201.057 132.611 cv
201.155 132.792 li
201.317 132.923 li
201.552 132.963 li
201.761 132.963 201.907 132.889 201.989 132.741 cv
202.07 132.595 202.112 132.381 202.112 132.102 cv
202.112 131.721 li
203.593 131.721 li
203.593 131.984 li
203.593 132.67 203.422 133.195 203.082 133.558 cv
202.741 133.922 202.233 134.104 201.558 134.104 cv
cp
f
204.668 133.997 mo
204.668 127.376 li
206.155 127.376 li
206.155 127.957 li
206.598 127.491 207.123 127.258 207.726 127.258 cv
208.278 127.258 208.645 127.529 208.828 128.07 cv
209.295 127.529 209.851 127.258 210.501 127.258 cv
210.87 127.258 211.166 127.393 211.389 127.661 cv
211.613 127.93 211.725 128.32 211.725 128.83 cv
211.725 133.997 li
210.237 133.997 li
210.237 128.964 li
210.237 128.722 210.197 128.55 210.117 128.449 cv
210.037 128.349 209.919 128.301 209.762 128.304 cv
209.49 128.312 209.215 128.441 208.94 128.69 cv
208.943 128.757 li
208.946 128.83 li
208.946 133.997 li
207.464 133.997 li
207.464 128.964 li
207.464 128.722 207.423 128.55 207.343 128.449 cv
207.263 128.349 207.143 128.301 206.983 128.304 cv
206.721 128.312 206.446 128.443 206.155 128.696 cv
206.155 133.997 li
204.668 133.997 li
cp
f
215.136 132.98 mo
215.252 132.98 215.348 132.947 215.426 132.882 cv
215.505 132.817 215.562 132.721 215.597 132.596 cv
215.632 132.472 215.657 132.343 215.67 132.21 cv
215.683 132.078 215.69 131.919 215.69 131.733 cv
215.69 129.45 li
215.69 129.298 215.681 129.16 215.665 129.039 cv
215.648 128.918 215.619 128.803 215.578 128.693 cv
215.537 128.583 215.475 128.499 215.393 128.442 cv
215.311 128.383 215.213 128.357 215.096 128.361 cv
214.891 128.364 214.675 128.451 214.448 128.623 cv
214.448 132.773 li
214.672 132.91 214.901 132.98 215.136 132.98 cv
cp
212.882 136.178 mo
212.882 127.376 li
214.448 127.376 li
214.448 127.885 li
214.858 127.475 215.303 127.272 215.785 127.276 cv
216.019 127.279 216.227 127.333 216.408 127.438 cv
216.589 127.542 216.731 127.671 216.834 127.826 cv
216.936 127.981 217.019 128.163 217.085 128.374 cv
217.15 128.585 217.194 128.781 217.216 128.961 cv
217.239 129.142 217.25 129.325 217.25 129.512 cv
217.25 131.682 li
217.25 132.018 217.222 132.326 217.166 132.608 cv
217.11 132.889 217.022 133.145 216.903 133.373 cv
216.784 133.603 216.621 133.782 216.414 133.91 cv
216.207 134.039 215.964 134.104 215.684 134.104 cv
215.274 134.104 214.862 133.905 214.448 133.505 cv
214.448 136.178 li
212.882 136.178 li
cp
f
220.337 133.002 mo
220.464 133.002 220.567 132.974 220.647 132.918 cv
220.727 132.862 220.785 132.776 220.821 132.657 cv
220.856 132.54 220.88 132.427 220.89 132.317 cv
220.902 132.207 220.907 132.065 220.907 131.889 cv
220.907 129.49 li
220.907 129.352 220.904 129.238 220.899 129.146 cv
220.893 129.055 220.88 128.955 220.86 128.847 cv
220.839 128.739 220.808 128.654 220.767 128.592 cv
220.599 128.436 li
220.529 128.393 220.441 128.371 220.337 128.371 cv
220.21 128.371 220.106 128.401 220.026 128.458 cv
219.946 128.516 219.888 128.604 219.853 128.721 cv
219.817 128.838 219.795 128.952 219.783 129.062 cv
219.772 129.172 219.766 129.315 219.766 129.49 cv
219.766 131.889 li
219.766 132.027 219.769 132.142 219.775 132.233 cv
219.78 132.324 219.794 132.423 219.814 132.53 cv
219.835 132.636 219.865 132.719 219.906 132.781 cv
220.074 132.938 li
220.144 132.981 220.232 133.002 220.337 133.002 cv
cp
220.331 134.104 mo
219.619 134.104 219.089 133.904 218.74 133.502 cv
218.391 133.102 218.217 132.529 218.217 131.782 cv
218.217 129.596 li
218.217 128.851 218.391 128.278 218.74 127.876 cv
219.089 127.476 219.619 127.276 220.331 127.276 cv
221.047 127.276 221.581 127.476 221.933 127.876 cv
222.286 128.278 222.462 128.851 222.462 129.596 cv
222.462 131.782 li
222.462 132.529 222.286 133.102 221.933 133.502 cv
221.581 133.904 221.047 134.104 220.331 134.104 cv
cp
f
223.558 133.997 mo
223.558 127.376 li
225.124 127.376 li
225.124 128.394 li
225.343 128.002 225.566 127.721 225.792 127.549 cv
226.017 127.378 226.259 127.292 226.516 127.292 cv
226.752 127.32 li
226.752 128.869 li
226.576 128.802 226.395 128.769 226.209 128.769 cv
225.985 128.776 225.789 128.832 225.619 128.936 cv
225.449 129.04 225.284 129.214 225.124 129.456 cv
225.124 133.997 li
223.558 133.997 li
cp
f
207.48 166.475 mo
141.347 166.475 li
136.252 166.475 132.12 162.343 132.12 157.247 cv
132.12 152.151 136.252 148.019 141.347 148.019 cv
207.48 148.019 li
212.577 148.019 216.708 152.151 216.708 157.247 cv
216.708 162.343 212.577 166.475 207.48 166.475 cv
cp
0 .912535 0 0 cmyk
f
151.271 161.355 mo
151.271 153.566 li
152.689 153.566 li
152.689 160.373 li
154.554 160.373 li
154.554 161.355 li
151.271 161.355 li
cp
0 0 0 0 cmyk
f
155.306 161.355 mo
155.306 153.566 li
158.566 153.566 li
158.566 154.567 li
156.724 154.567 li
156.724 156.803 li
158.181 156.803 li
158.181 157.803 li
156.724 157.803 li
156.724 160.373 li
158.589 160.373 li
158.589 161.355 li
155.306 161.355 li
cp
f
160.812 158.62 mo
161.855 158.62 li
161.334 155.421 li
160.812 158.62 li
cp
159.004 161.355 mo
160.587 153.566 li
162.066 153.566 li
163.645 161.355 li
162.325 161.355 li
162.01 159.546 li
160.662 159.546 li
160.342 161.355 li
159.004 161.355 li
cp
f
165.829 156.892 mo
166.172 156.892 li
166.591 156.892 166.89 156.803 167.067 156.624 cv
167.244 156.446 167.333 156.14 167.333 155.708 cv
167.333 155.291 167.255 154.993 167.102 154.813 cv
166.949 154.633 166.667 154.543 166.256 154.543 cv
165.829 154.543 li
165.829 156.892 li
cp
164.411 161.355 mo
164.411 153.566 li
166.195 153.566 li
166.606 153.566 166.958 153.6 167.253 153.667 cv
167.547 153.735 167.802 153.847 168.02 154.005 cv
168.238 154.163 168.401 154.378 168.509 154.649 cv
168.617 154.919 168.672 155.251 168.672 155.642 cv
168.672 156.131 168.598 156.531 168.453 156.84 cv
168.307 157.151 168.067 157.376 167.732 157.517 cv
168.812 161.355 li
167.388 161.355 li
166.459 157.798 li
165.829 157.798 li
165.829 161.355 li
164.411 161.355 li
cp
f
169.748 161.355 mo
169.748 153.566 li
170.724 153.566 li
172.631 157.977 li
172.631 153.566 li
173.806 153.566 li
173.806 161.355 li
172.876 161.355 li
170.95 156.718 li
170.95 161.355 li
169.748 161.355 li
cp
f
177.305 161.355 mo
177.432 153.566 li
178.888 153.566 li
180.016 159.038 li
181.176 153.566 li
182.6 153.566 li
182.731 161.355 li
181.66 161.355 li
181.566 155.99 li
180.443 161.355 li
179.612 161.355 li
178.475 155.971 li
178.39 161.355 li
177.305 161.355 li
cp
f
185.646 160.335 mo
185.745 160.376 185.863 160.397 186.001 160.397 cv
186.138 160.397 186.255 160.376 186.353 160.335 cv
186.45 160.294 186.528 160.241 186.586 160.176 cv
186.643 160.11 186.689 160.024 186.721 159.917 cv
186.755 159.811 186.777 159.704 186.788 159.598 cv
186.798 159.491 186.804 159.365 186.804 159.217 cv
186.804 155.68 li
186.804 155.491 186.795 155.335 186.776 155.21 cv
186.757 155.085 186.72 154.967 186.666 154.856 cv
186.611 154.744 186.528 154.661 186.419 154.607 cv
186.309 154.552 186.17 154.525 186.001 154.525 cv
185.832 154.525 185.691 154.552 185.58 154.607 cv
185.469 154.661 185.386 154.744 185.334 154.856 cv
185.28 154.967 185.245 155.085 185.225 155.21 cv
185.207 155.335 185.197 155.491 185.197 155.68 cv
185.197 159.217 li
185.197 159.365 185.203 159.491 185.214 159.598 cv
185.224 159.704 185.247 159.811 185.28 159.917 cv
185.312 160.024 185.357 160.11 185.414 160.176 cv
185.469 160.241 185.547 160.294 185.646 160.335 cv
cp
186.001 161.448 mo
185.199 161.448 184.625 161.231 184.277 160.796 cv
183.929 160.361 183.755 159.723 183.755 158.884 cv
183.755 156.009 li
183.755 155.595 183.795 155.237 183.873 154.933 cv
183.951 154.629 184.077 154.366 184.251 154.144 cv
184.424 153.921 184.657 153.754 184.948 153.644 cv
185.24 153.532 185.59 153.477 186.001 153.477 cv
186.799 153.477 187.373 153.691 187.722 154.12 cv
188.072 154.549 188.246 155.179 188.246 156.009 cv
188.246 158.884 li
188.246 159.291 188.207 159.649 188.127 159.957 cv
188.047 160.266 187.92 160.533 187.746 160.76 cv
187.572 160.988 187.339 161.159 187.048 161.275 cv
186.757 161.391 186.408 161.448 186.001 161.448 cv
cp
f
190.704 156.892 mo
191.047 156.892 li
191.466 156.892 191.765 156.803 191.942 156.624 cv
192.119 156.446 192.208 156.14 192.208 155.708 cv
192.208 155.291 192.13 154.993 191.977 154.813 cv
191.824 154.633 191.542 154.543 191.131 154.543 cv
190.704 154.543 li
190.704 156.892 li
cp
189.286 161.355 mo
189.286 153.566 li
191.07 153.566 li
191.481 153.566 191.833 153.6 192.128 153.667 cv
192.422 153.735 192.677 153.847 192.895 154.005 cv
193.113 154.163 193.276 154.378 193.384 154.649 cv
193.492 154.919 193.547 155.251 193.547 155.642 cv
193.547 156.131 193.473 156.531 193.328 156.84 cv
193.182 157.151 192.942 157.376 192.607 157.517 cv
193.687 161.355 li
192.263 161.355 li
191.334 157.798 li
190.704 157.798 li
190.704 161.355 li
189.286 161.355 li
cp
f
194.622 161.355 mo
194.622 153.566 li
197.881 153.566 li
197.881 154.567 li
196.04 154.567 li
196.04 156.803 li
197.497 156.803 li
197.497 157.803 li
196.04 157.803 li
196.04 160.373 li
197.905 160.373 li
197.905 161.355 li
194.622 161.355 li
cp
f
62.4889 99.5325 mo
61.6158 99.5325 60.8453 99.4221 60.1764 99.2014 cv
59.5074 98.9817 58.9547 98.676 58.5192 98.2844 cv
58.0826 97.8928 57.7281 97.4075 57.4547 96.8284 cv
57.1813 96.2493 56.9899 95.6272 56.8795 94.9631 cv
56.7692 94.2981 56.7145 93.55 56.7145 92.718 cv
56.7145 85.6477 li
56.7145 84.7668 56.7711 83.9856 56.8854 83.3049 cv
56.9996 82.6233 57.192 81.9915 57.4606 81.4084 cv
57.7301 80.8254 58.0826 80.3459 58.5192 79.9709 cv
58.9547 79.5959 59.5055 79.302 60.1705 79.0901 cv
60.8356 78.8782 61.608 78.7717 62.4889 78.7717 cv
63.4996 78.7717 64.3649 78.9065 65.0826 79.176 cv
65.7994 79.4446 66.3668 79.8411 66.7828 80.3625 cv
67.1989 80.884 67.5006 81.4944 67.6881 82.1917 cv
67.8756 82.8889 67.9694 83.7024 67.9694 84.6321 cv
67.9694 86.3694 li
64.4098 86.3694 li
64.4098 84.6438 li
64.4098 83.6331 64.3561 82.9514 64.2506 82.6008 cv
64.0377 81.9163 63.5201 81.5491 62.6969 81.5002 cv
62.5006 81.5002 li
62.191 81.5002 61.9196 81.5364 61.6871 81.6106 cv
61.4547 81.6838 61.2653 81.8 61.1188 81.9592 cv
60.9713 82.1174 60.8531 82.2874 60.7643 82.467 cv
60.6744 82.6458 60.6071 82.8801 60.5621 83.1702 cv
60.5172 83.4592 60.4889 83.7268 60.4762 83.9709 cv
60.4645 84.2161 60.4576 84.5256 60.4576 84.9006 cv
60.4576 93.4885 li
60.4576 94.6799 60.6071 95.5276 60.9049 96.0334 cv
61.2018 96.5393 61.734 96.7922 62.5006 96.7922 cv
62.7623 96.7922 62.9918 96.761 63.192 96.7004 cv
63.3922 96.6389 63.5592 96.5618 63.694 96.468 cv
63.8287 96.3743 63.942 96.2395 64.0358 96.0637 cv
64.1295 95.8889 64.2018 95.7258 64.2506 95.5745 cv
64.2994 95.4241 64.3356 95.2141 64.36 94.9446 cv
64.3844 94.675 64.399 94.4475 64.403 94.259 cv
64.4069 94.0715 64.4098 93.8147 64.4098 93.4885 cv
64.4098 91.678 li
67.9694 91.678 li
67.9694 93.342 li
67.9694 94.1008 67.9156 94.7815 67.8102 95.385 cv
67.7037 95.9885 67.5231 96.5549 67.2662 97.0852 cv
67.0084 97.6155 66.6764 98.0559 66.2692 98.4065 cv
65.861 98.7571 65.3395 99.0325 64.7028 99.2327 cv
64.067 99.4319 63.3287 99.5325 62.4889 99.5325 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
70.526 99.2874 mo
70.526 79.0042 li
74.2203 79.0042 li
74.2203 96.7307 li
79.0778 96.7307 li
79.0778 99.2874 li
70.526 99.2874 li
cp
f
85.4078 96.6331 mo
85.6647 96.7385 85.9723 96.7922 86.3317 96.7922 cv
86.6901 96.7922 86.9967 96.7385 87.2487 96.6331 cv
87.5016 96.5266 87.7037 96.3879 87.8551 96.217 cv
88.0055 96.0452 88.1237 95.8215 88.2096 95.5442 cv
88.2955 95.2668 88.3522 94.9895 88.3805 94.7122 cv
88.4088 94.4348 88.4235 94.1047 88.4235 93.7209 cv
88.4235 84.51 li
88.4235 84.0198 88.399 83.6125 88.3502 83.2864 cv
88.3014 82.9602 88.2057 82.6526 88.0631 82.3625 cv
87.9196 82.0735 87.7057 81.8567 87.4205 81.7141 cv
87.1344 81.5715 86.7721 81.5002 86.3317 81.5002 cv
85.8912 81.5002 85.526 81.5715 85.2369 81.7141 cv
84.9469 81.8567 84.733 82.0735 84.5944 82.3625 cv
84.4557 82.6526 84.3619 82.9602 84.3131 83.2864 cv
84.2643 83.6125 84.2399 84.0198 84.2399 84.51 cv
84.2399 93.7209 li
84.2399 94.1047 84.2535 94.4348 84.2828 94.7122 cv
84.3112 94.9895 84.3678 95.2668 84.4537 95.5442 cv
84.5397 95.8215 84.6559 96.0452 84.8024 96.217 cv
84.9489 96.3879 85.151 96.5266 85.4078 96.6331 cv
cp
86.3317 99.5325 mo
84.2438 99.5325 82.7477 98.9651 81.8424 97.8313 cv
80.9371 96.6985 80.484 95.0383 80.484 92.8528 cv
80.484 85.3655 li
80.484 84.2893 80.5856 83.3557 80.7897 82.5647 cv
80.9938 81.7737 81.3219 81.0881 81.775 80.509 cv
82.2272 79.9299 82.8326 79.4963 83.5914 79.2063 cv
84.3502 78.9172 85.2633 78.7717 86.3317 78.7717 cv
88.4117 78.7717 89.9059 79.3313 90.8151 80.4485 cv
91.7242 81.5657 92.1793 83.2043 92.1793 85.3655 cv
92.1793 92.8528 li
92.1793 93.9133 92.0748 94.845 91.8668 95.6477 cv
91.6588 96.4514 91.3287 97.1487 90.8766 97.7395 cv
90.4235 98.3313 89.818 98.7776 89.0592 99.0793 cv
88.3014 99.3811 87.3922 99.5325 86.3317 99.5325 cv
cp
f
100.437 99.5325 mo
99.5319 99.5325 98.7467 99.426 98.0817 99.2141 cv
97.4166 99.0022 96.8707 98.7043 96.443 98.3206 cv
96.0143 97.9377 95.6715 97.4465 95.4147 96.8469 cv
95.1578 96.2473 94.9781 95.5989 94.8766 94.9016 cv
94.775 94.2043 94.7233 93.3948 94.7233 92.4739 cv
94.7233 79.0042 li
98.3082 79.0042 li
98.3082 92.8528 li
98.3082 93.3254 98.3199 93.7297 98.3444 94.0637 cv
98.3698 94.3987 98.4225 94.7493 98.5035 95.1155 cv
98.5856 95.4827 98.7018 95.7766 98.8522 95.9963 cv
99.0035 96.217 99.2115 96.4006 99.4762 96.5471 cv
99.7408 96.6936 100.061 96.7668 100.437 96.7668 cv
100.812 96.7668 101.131 96.6936 101.397 96.5471 cv
101.662 96.4006 101.866 96.217 102.008 95.9963 cv
102.151 95.7766 102.265 95.4827 102.351 95.1155 cv
102.437 94.7493 102.49 94.4006 102.51 94.0696 cv
102.531 93.7395 102.541 93.3342 102.541 92.8528 cv
102.541 79.0042 li
106.126 79.0042 li
106.126 92.4739 li
106.126 93.3948 106.074 94.2043 105.972 94.9016 cv
105.87 95.5989 105.691 96.2473 105.434 96.8469 cv
105.177 97.4465 104.837 97.9377 104.413 98.3206 cv
103.988 98.7043 103.444 99.0022 102.779 99.2141 cv
102.115 99.426 101.334 99.5325 100.437 99.5325 cv
cp
f
112.694 96.6936 mo
113.747 96.6936 li
114.114 96.6936 114.435 96.6614 114.713 96.5959 cv
114.99 96.5305 115.222 96.4534 115.41 96.3635 cv
115.597 96.2737 115.755 96.1272 115.881 95.9231 cv
116.007 95.719 116.103 95.5315 116.169 95.3606 cv
116.234 95.1887 116.283 94.9299 116.315 94.5833 cv
116.348 94.2375 116.369 93.9417 116.377 93.6965 cv
116.384 93.4524 116.389 93.0891 116.389 92.6077 cv
116.389 85.1946 li
116.389 84.7131 116.38 84.3264 116.365 84.0325 cv
116.348 83.7385 116.309 83.4436 116.249 83.1458 cv
116.187 82.8479 116.097 82.6174 115.979 82.4543 cv
115.861 82.2913 115.704 82.1428 115.508 82.0081 cv
115.312 81.8733 115.068 81.7795 114.774 81.7268 cv
114.48 81.6731 114.126 81.6467 113.71 81.6467 cv
112.694 81.6467 li
112.694 96.6936 li
cp
109 99.2874 mo
109 79.0042 li
113.722 79.0042 li
114.945 79.0042 115.968 79.1272 116.793 79.3713 cv
117.616 79.6165 118.277 80.0032 118.774 80.5334 cv
119.272 81.0637 119.625 81.7141 119.833 82.4846 cv
120.041 83.2551 120.144 84.2034 120.144 85.3293 cv
120.144 92.6448 li
120.144 93.803 120.039 94.7854 119.827 95.593 cv
119.614 96.4006 119.265 97.0852 118.781 97.6477 cv
118.296 98.2112 117.649 98.6252 116.841 98.8899 cv
116.034 99.1545 115.044 99.2874 113.869 99.2874 cv
109 99.2874 li
cp
f
134.09 99.5325 mo
130.518 99.5325 128.642 97.469 128.463 93.342 cv
131.68 92.6692 li
131.761 95.3528 132.528 96.6936 133.98 96.6936 cv
134.543 96.6936 134.961 96.5227 135.234 96.1799 cv
135.507 95.8372 135.643 95.3772 135.643 94.7981 cv
135.643 94.2346 135.542 93.719 135.338 93.2502 cv
135.133 92.7815 134.897 92.3977 134.629 92.0999 cv
134.359 91.803 133.976 91.4338 133.478 90.9934 cv
130.811 88.6809 li
130.029 87.9963 129.445 87.2844 129.062 86.5461 cv
128.678 85.8088 128.487 84.885 128.487 83.7756 cv
128.487 82.2014 128.95 80.9788 129.876 80.1057 cv
130.801 79.2327 132.072 78.7883 133.686 78.7717 cv
134.428 78.7639 135.085 78.8557 135.656 79.0471 cv
136.226 79.2395 136.698 79.4963 137.069 79.8176 cv
137.44 80.1399 137.75 80.5422 137.999 81.0227 cv
138.248 81.5042 138.433 82.0042 138.555 82.5217 cv
138.677 83.0393 138.763 83.6165 138.812 84.2522 cv
135.656 84.8762 li
135.639 84.469 135.613 84.1145 135.577 83.8118 cv
135.54 83.511 135.476 83.2043 135.386 82.8948 cv
135.297 82.5852 135.18 82.3342 135.038 82.1428 cv
134.895 81.9504 134.704 81.7981 134.464 81.6838 cv
134.222 81.5696 133.943 81.5247 133.626 81.5491 cv
133.079 81.5813 132.661 81.7629 132.372 82.093 cv
132.082 82.4241 131.937 82.8665 131.937 83.4211 cv
131.937 84.0735 132.065 84.6096 132.322 85.0295 cv
132.58 85.4495 132.981 85.8997 133.527 86.3811 cv
136.17 88.6809 li
136.61 89.0803 136.994 89.468 137.32 89.843 cv
137.646 90.218 137.958 90.6467 138.255 91.1282 cv
138.553 91.6086 138.779 92.1389 138.934 92.718 cv
139.089 93.2971 139.167 93.9084 139.167 94.553 cv
139.167 96.0295 138.7 97.2278 137.766 98.1497 cv
136.833 99.0715 135.607 99.5325 134.09 99.5325 cv
cp
f
143.314 99.2874 mo
143.314 81.7327 li
139.913 81.7327 li
139.913 79.0042 li
150.299 79.0042 li
150.299 81.7327 li
147.008 81.7327 li
147.008 99.2874 li
143.314 99.2874 li
cp
f
156.507 96.6331 mo
156.764 96.7385 157.072 96.7922 157.431 96.7922 cv
157.79 96.7922 158.096 96.7385 158.348 96.6331 cv
158.601 96.5266 158.803 96.3879 158.955 96.217 cv
159.105 96.0452 159.223 95.8215 159.309 95.5442 cv
159.395 95.2668 159.452 94.9895 159.48 94.7122 cv
159.508 94.4348 159.523 94.1047 159.523 93.7209 cv
159.523 84.51 li
159.523 84.0198 159.499 83.6125 159.45 83.2864 cv
159.401 82.9602 159.305 82.6526 159.163 82.3625 cv
159.019 82.0735 158.805 81.8567 158.52 81.7141 cv
158.234 81.5715 157.872 81.5002 157.431 81.5002 cv
156.991 81.5002 156.626 81.5715 156.337 81.7141 cv
156.047 81.8567 155.833 82.0735 155.694 82.3625 cv
155.555 82.6526 155.462 82.9602 155.413 83.2864 cv
155.364 83.6125 155.339 84.0198 155.339 84.51 cv
155.339 93.7209 li
155.339 94.1047 155.353 94.4348 155.382 94.7122 cv
155.411 94.9895 155.467 95.2668 155.553 95.5442 cv
155.639 95.8215 155.755 96.0452 155.902 96.217 cv
156.048 96.3879 156.251 96.5266 156.507 96.6331 cv
cp
157.431 99.5325 mo
155.343 99.5325 153.847 98.9651 152.942 97.8313 cv
152.037 96.6985 151.584 95.0383 151.584 92.8528 cv
151.584 85.3655 li
151.584 84.2893 151.685 83.3557 151.889 82.5647 cv
152.093 81.7737 152.422 81.0881 152.875 80.509 cv
153.327 79.9299 153.932 79.4963 154.691 79.2063 cv
155.45 78.9172 156.363 78.7717 157.431 78.7717 cv
159.511 78.7717 161.005 79.3313 161.915 80.4485 cv
162.824 81.5657 163.279 83.2043 163.279 85.3655 cv
163.279 92.8528 li
163.279 93.9133 163.174 94.845 162.966 95.6477 cv
162.758 96.4514 162.428 97.1487 161.976 97.7395 cv
161.523 98.3313 160.918 98.7776 160.159 99.0793 cv
159.401 99.3811 158.492 99.5325 157.431 99.5325 cv
cp
f
169.676 87.6653 mo
170.57 87.6653 li
171.663 87.6653 172.439 87.4329 172.9 86.968 cv
173.361 86.5032 173.591 85.7083 173.591 84.5833 cv
173.591 83.4983 173.391 82.7219 172.992 82.2522 cv
172.592 81.7834 171.858 81.5491 170.79 81.5491 cv
169.676 81.5491 li
169.676 87.6653 li
cp
165.982 99.2874 mo
165.982 79.0042 li
170.631 79.0042 li
171.7 79.0042 172.617 79.092 173.383 79.2678 cv
174.15 79.4426 174.817 79.7366 175.383 80.1487 cv
175.951 80.5598 176.375 81.1194 176.656 81.8245 cv
176.937 82.5295 177.078 83.3918 177.078 84.4114 cv
177.078 85.6838 176.888 86.7239 176.509 87.5315 cv
176.13 88.3381 175.504 88.926 174.631 89.2932 cv
177.445 99.2874 li
173.738 99.2874 li
171.316 90.0266 li
169.676 90.0266 li
169.676 99.2874 li
165.982 99.2874 li
cp
f
183.538 92.1672 mo
186.254 92.1672 li
184.895 83.8372 li
183.538 92.1672 li
cp
178.828 99.2874 mo
182.951 79.0042 li
186.804 79.0042 li
190.915 99.2874 li
187.477 99.2874 li
186.657 94.5774 li
183.146 94.5774 li
182.314 99.2874 li
178.828 99.2874 li
cp
f
197.923 99.5569 mo
196.006 99.5569 194.627 98.9573 193.783 97.7581 cv
192.938 96.5598 192.516 94.8137 192.516 92.5227 cv
192.516 85.9163 li
192.516 84.7502 192.608 83.7454 192.792 82.9006 cv
192.975 82.0569 193.283 81.3167 193.715 80.6809 cv
194.147 80.0442 194.743 79.5676 195.502 79.2493 cv
196.259 78.9309 197.189 78.7717 198.291 78.7717 cv
200.297 78.7717 201.736 79.2639 202.609 80.2463 cv
203.481 81.2288 203.918 82.719 203.918 84.717 cv
203.918 85.7083 li
200.382 85.7083 li
200.382 84.6565 li
200.382 84.2083 200.372 83.8411 200.352 83.5549 cv
200.332 83.2698 200.283 82.9827 200.205 82.6926 cv
200.128 82.4036 200.015 82.1809 199.869 82.0266 cv
199.721 81.8713 199.522 81.7444 199.269 81.6467 cv
199.016 81.5491 198.707 81.5002 198.339 81.5002 cv
198.062 81.5002 197.815 81.5354 197.599 81.6038 cv
197.383 81.6731 197.202 81.759 197.055 81.8606 cv
196.908 81.9631 196.784 82.1077 196.682 82.2952 cv
196.58 82.4827 196.503 82.6643 196.45 82.8401 cv
196.396 83.0149 196.355 83.2415 196.327 83.5188 cv
196.298 83.7961 196.28 84.0403 196.272 84.2522 cv
196.263 84.4651 196.259 84.7375 196.259 85.0725 cv
196.259 93.2561 li
196.259 94.4797 196.411 95.3752 196.713 95.9417 cv
197.014 96.5081 197.589 96.7922 198.437 96.7922 cv
198.878 96.7922 199.247 96.7083 199.545 96.5413 cv
199.842 96.3743 200.075 96.1213 200.242 95.7825 cv
200.409 95.4446 200.527 95.0569 200.596 94.6204 cv
200.666 94.1838 200.701 93.6565 200.701 93.0364 cv
200.701 91.3723 li
198.51 91.3723 li
198.51 88.9866 li
204.028 88.9866 li
204.028 99.2874 li
201.63 99.2874 li
201.361 97.2317 li
200.75 98.7815 199.603 99.5569 197.923 99.5569 cv
cp
f
206.817 99.2874 mo
206.817 79.0042 li
215.307 79.0042 li
215.307 81.6106 li
210.511 81.6106 li
210.511 87.4329 li
214.304 87.4329 li
214.304 90.0393 li
210.511 90.0393 li
210.511 96.7307 li
215.369 96.7307 li
215.369 99.2874 li
206.817 99.2874 li
cp
f
121.324 157.247 mo
121.324 159.042 119.869 160.497 118.074 160.497 cv
116.279 160.497 114.824 159.042 114.824 157.247 cv
114.824 155.452 116.279 153.997 118.074 153.997 cv
119.869 153.997 121.324 155.452 121.324 157.247 cv
cp
0 0 0 0 cmyk
f
105.583 160.497 mo
103.788 160.497 102.333 159.042 102.333 157.247 cv
102.333 155.452 103.788 153.997 105.583 153.997 cv
107.378 153.997 108.833 155.452 108.833 157.247 cv
108.833 159.042 107.378 160.497 105.583 160.497 cv
.159609 .0111391 0 0 cmyk
f
382.834 333.106 mo
258.59 261.374 li
255.076 259.345 255.516 255.8 259.575 253.457 cv
344.175 204.629 li
348.234 202.285 354.373 202.032 357.888 204.061 cv
482.131 275.793 li
485.646 277.823 485.206 281.366 481.147 283.709 cv
396.546 332.537 li
392.488 334.881 386.349 335.135 382.834 333.106 cv
.470191 .0827344 .00714122 0 cmyk
f
383.561 318.124 mo
386.616 319.888 392.228 319.627 395.819 317.556 cv
480.42 268.728 li
482.066 267.778 483.048 266.575 483.048 265.51 cv
483.048 264.495 482.154 263.766 481.404 263.332 cv
357.161 191.6 li
354.105 189.835 348.493 190.096 344.903 192.168 cv
260.302 240.996 li
258.656 241.947 257.673 243.15 257.673 244.214 cv
257.673 245.229 258.568 245.958 259.318 246.392 cv
383.561 318.124 li
388.804 322.215 mo
386.316 322.215 383.929 321.698 382.106 320.646 cv
257.863 248.913 li
255.863 247.759 254.762 246.09 254.761 244.214 cv
254.761 242.066 256.251 239.974 258.847 238.475 cv
343.448 189.647 li
347.976 187.031 354.639 186.782 358.616 189.078 cv
482.859 260.811 li
484.859 261.965 485.961 263.634 485.961 265.511 cv
485.96 267.659 484.471 269.751 481.875 271.249 cv
397.274 320.077 li
394.822 321.493 391.743 322.215 388.804 322.215 cv
0 0 0 0 cmyk
f
512.947 125.222 mo
388.704 53.4895 li
387.26 52.6565 385.794 52.5276 384.493 52.9729 cv
384.501 52.9602 li
384.275 53.0452 li
384.22 53.0657 li
379.73 54.7844 li
383.76 56.7571 li
383.703 56.9768 li
361.75 156.812 li
360.737 161.422 362.764 166.804 366.28 168.833 cv
487.535 238.841 li
487.103 243.979 li
492.01 242.077 li
493.659 241.306 494.979 239.562 495.524 237.078 cv
517.477 137.243 li
518.49 132.633 516.463 127.25 512.947 125.222 cv
cp
1 .866484 .240818 .0951247 cmyk
f
512.947 125.222 mo
388.704 53.4895 li
387.26 52.6565 385.794 52.5276 384.493 52.9729 cv
384.501 52.9602 li
384.275 53.0452 li
384.22 53.0657 li
379.73 54.7844 li
383.76 56.7571 li
383.703 56.9768 li
368.649 125.405 li
429.44 172.767 li
516.872 130.172 li
516.047 128.037 514.679 126.222 512.947 125.222 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
508.262 139.382 mo
517.72 135.355 li
517.894 131.693 516.378 127.908 513.889 125.884 cv
498.918 132.182 li
508.262 139.382 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
482.787 243.49 mo
358.543 171.758 li
355.028 169.729 353 164.347 354.012 159.737 cv
375.965 59.9016 li
376.978 55.2913 380.648 53.1995 384.163 55.2288 cv
508.407 126.96 li
511.922 128.99 513.95 134.372 512.937 138.983 cv
490.984 238.818 li
489.971 243.428 486.301 245.52 482.787 243.49 cv
cp
level3{
gsave
clp
[201.692 0 0 201.692 507.962 233.647 ]ct
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-NjDL-NjDL-NjDL-j0MM-j0MM.0T\O.0T\O.0T\O
.KoeP.KoeP.g5nQ.g5nQ/-Z(S/Hu1T/d;:U/d;:U0*_IW0F%RX0a@[Y1'dj[1C*s\1C*s\2$j6_2@0?`
2[KHa3!oWc3=>fe3su#g4:D2i4UhAk57RYn5n3kp64X%r6k97t71]G!7hG_$8J2"'9+q:*9b[R-:DNs2
;&004;\oH7<>Y`:<uD#==W.;@>T3\D>oWnG?l]:K@NGRNA0:pRB-@<VC*E]ZCa9)_D^>JcE@1hgF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[201.692 0 0 201.692 507.962 233.647 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~F)uAAEH#l8Df0E.Chmg$C2%?oB4b^dA7K+Y@UW\Q?sd5H?!LW>>[(B8=]ed-=&r@%<E)pr;c6Lj;,C(b
:JX_\9he;T91qlL8P)HD7n6$<77BU46psC06:*t(5s[b$5<h=q4Ztni4?P\e4$,Ja3B9&Y3&iiU2`EWQ
2E!HN2)R6J1c$pC1,:U?1,:U>0ekC:0JG160/"t2/hSb./M/P+/M/P*/1`>&.k<,".Olnt.Olns.4H\p
.4H\p-n$Jl-n$Jl-n$Jl-RU8h-RU8h-71&d-71&d-71&d,pai`,pai`,pai`,pai`,pai`,pai`,pai`
~>
<~-n$Jk-RL/d,pX`],U4NX+sA*Q+WqmM+<M[H*ZZ7A*?6%=*#fh9)]BV5)AsD1)&O2-(`*u)(D[c%()7Q!
'bqGu'GM2o',(uk&eYcg&J5Qc&.f?_%hB-[%LrsY%LrpW%1NaU%1N^S$k*LO$O[:K$47+I$47(G#mgkC
#RC\A#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&4"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
~>
<~!WiE)!WiE)!WiE)!WiE)!W`<&!<E3%!<E3%!<E3%!<E3%!<E3%!<<*"zzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
509.6 126.524 mo
385.356 54.7922 li
383.653 53.8098 381.92 53.8098 380.464 54.5793 cv
381.632 54.3245 382.906 54.5022 384.163 55.2288 cv
508.407 126.96 li
511.922 128.99 513.95 134.372 512.937 138.983 cv
490.984 238.818 li
490.463 241.194 489.228 242.884 487.678 243.702 cv
489.776 243.244 491.527 241.342 492.177 238.381 cv
514.13 138.546 li
515.143 133.936 513.115 128.553 509.6 126.524 cv
cp
0 0 0 0 cmyk
f
480.093 236.639 mo
363.244 169.209 li
360.028 167.352 358.172 162.427 359.098 158.208 cv
379.334 66.1956 li
380.26 61.9768 383.619 60.0618 386.835 61.9192 cv
503.684 129.349 li
506.9 131.205 508.756 136.131 507.83 140.35 cv
487.595 232.363 li
486.669 236.581 483.309 238.495 480.093 236.639 cv
cp
f
480.093 236.639 mo
363.244 169.209 li
360.028 167.352 358.172 162.427 359.098 158.208 cv
379.334 66.1956 li
380.26 61.9768 383.619 60.0618 386.835 61.9192 cv
503.684 129.349 li
506.9 131.205 508.756 136.131 507.83 140.35 cv
487.595 232.363 li
486.669 236.581 483.309 238.495 480.093 236.639 cv
cp
level3{
gsave
clp
[138.79 0 0 138.79 491.991 188.066 ]ct
/5 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~nA6mgnA6mgnA?sin\['jn\d-kn\d0lo#3?no#3?no#<Eoo>WNpo>`Tro>`TroZ/ctoZ/fuoZ/fuouT!"
ouT!"ou]'$ou]'$p<,6&p<,9'p<5?(pWPH)pWYN+pWYQ,ps(`.ps(`.q9Lo0q9Lr1qTq,4qTq,4qTq,4
qU%56qp@>7qpID8qpID8r6mS;r6mS;rR<b=rR<e>rm`t@rm`t@rm`t@s40.Cs40.Cs494Ds497Es4B=F
s4B=Fs4KCHs4KCHs4TLJs4TLJs4TLKs4TOLs4]UMs4]UNs4]XOs4]XPs4f^Qs4faRs4faSs4ogTs4ogT
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[138.79 0 0 138.79 491.991 188.066 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W)trr2lprVc]nrVc]nrVcZlr;?Kjr;?Hhqtp9fqtp6dqYL'bqYL'bqYL$`
q>'j^q>'j^q>'j^q>'j]q"XXZq"XXYp\4FVp\4FUp@e4Rp@e4Rp@e4Qp%A"Np%A"Np%A"Mo^qeJo^qeJ
o^qeJo^qeJoCMSFoCMSFoCMSFo()ABo()ABo()ABnaZ/>naZ/>naZ/>nF5r:nF5r:nF5r:n*f`6n*f`6
~>
<~gt^]?gt^]?gtUT<gY:K;gY:K;gY1B8g=k97g=k97g=k97g=b04g"G'3g"G'3g"G'3g"=s0f\"j/f[na,
f@SX+f@SU)f%/F'f%/C%e^`4#e^`1!eC<!teC<!teC;sre'ldpe'landaHRldaHOjdF$@hdF$=fd*U.d
d*U.ccd0q`cd0q`cd0q_cHa_\cHa_[c-=MXc-=MWbfn;Tbfn;SbKJ)PbKJ)Ob0%lLb0%lKaiVZHaiVZG
aN2HDaN2HDa2c6@a2c6@a2c6@`l?$<`l?$<`Pog8`Pog8`5KU4`5KU4_o'C0_o'C0_SX1,_SX1,_83t(
~>
<~4?P_g4?P_g4?P_g4?P_g4?GVd4$,Mc4$,Mc4$#D`3]];_3]];_3]T2\3B9)[3B9)[3B/uX3&ilW3&ilW
3&ilW3&ilW3&iiU2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EWQ2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
2E!HN2)R6K2)R6K2)R6K2)R6J1c.$G1c.$G1c.$G1c.$F1G^gC1G^gC1G^gC1G^gB1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0JG170JG170JG170JG17
~>
<~(Ddl((Ddl((Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m',)#m'+toj
&eYfi&eYfi&eYfi&eYfi&eYfi&eYcg&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Qc&.fBa&.fBa&.fBa
&.fBa&.fBa&.fBa&.fB`%hB0]%hB0]%hB0]%hB0]%hB0]%hB0\%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$O[=M
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
481.112 236.224 mo
364.262 168.794 li
361.047 166.938 359.19 162.012 360.117 157.794 cv
380.351 65.7805 li
380.821 63.6458 381.915 62.1077 383.296 61.343 cv
381.444 61.8196 379.913 63.5569 379.334 66.1956 cv
359.098 158.208 li
358.172 162.427 360.028 167.352 363.244 169.209 cv
480.093 236.639 li
481.681 237.556 483.302 237.546 484.65 236.8 cv
483.541 237.086 482.316 236.919 481.112 236.224 cv
cp
.657221 .328313 0 0 cmyk
f
484.502 246.615 mo
467.518 244.372 li
357.888 181.076 li
354.373 179.048 348.234 179.302 344.175 181.645 cv
266.492 226.48 li
256.222 225.123 li
256.222 230.95 li
256.232 230.951 li
256.165 232.298 256.932 233.594 258.59 234.551 cv
382.834 306.283 li
386.348 308.313 392.488 308.058 396.546 305.715 cv
481.147 256.887 li
483.43 255.569 484.569 253.87 484.502 252.276 cv
484.502 246.615 li
1 .866484 .240818 .0951247 cmyk
f
402.13 206.619 mo
394.34 202.122 li
308.708 202.122 li
266.492 226.48 li
256.222 225.123 li
256.222 230.95 li
256.232 230.951 li
256.165 232.298 256.932 233.594 258.59 234.551 cv
382.834 306.283 li
384.691 307.356 387.282 307.784 389.911 307.61 cv
402.13 206.619 li
.827268 .57586 .071809 .00112917 cmyk
f
260.78 225.726 mo
256.222 225.123 li
256.222 230.95 li
256.232 230.951 li
256.165 232.298 256.932 233.594 258.59 234.551 cv
260.78 235.816 li
260.78 225.726 li
cp
.657221 .328313 0 0 cmyk
f
384.086 306.865 mo
387.417 308.128 392.179 307.853 395.736 306.141 cv
395.736 293.145 li
384.086 293.145 li
384.086 306.865 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
388.79 301.833 mo
388.79 301.833 li
388.792 301.833 388.795 301.833 388.797 301.833 cv
388.795 301.833 388.792 301.833 388.79 301.833 cv
388.786 301.833 mo
386.6 301.833 384.511 301.4 382.929 300.518 cv
384.51 301.4 386.6 301.833 388.786 301.833 cv
382.911 300.507 mo
382.911 300.507 382.91 300.506 382.909 300.506 cv
382.91 300.506 382.911 300.507 382.911 300.507 cv
382.865 300.481 mo
382.855 300.475 382.844 300.469 382.834 300.463 cv
382.844 300.469 382.855 300.475 382.865 300.481 cv
388.789 299.705 mo
386.557 299.705 384.426 299.255 382.834 298.335 cv
258.59 226.603 li
257.438 225.938 256.719 225.109 256.405 224.213 cv
255.954 225.576 256.344 226.951 257.62 228.05 cv
256.735 227.29 256.273 226.396 256.222 225.466 cv
256.222 225.466 li
256.134 223.86 257.272 222.144 259.575 220.815 cv
273.45 212.807 li
274.558 212.167 li
303.631 195.387 li
304.739 194.748 li
304.739 194.748 li
333.813 177.967 li
334.921 177.328 li
334.921 177.328 li
344.175 171.987 li
346.395 170.705 349.237 170.048 351.932 170.048 cv
354.164 170.048 356.295 170.499 357.888 171.418 cv
371.258 179.138 li
372.366 179.777 li
401.436 196.561 li
401.436 196.561 li
402.543 197.2 li
431.614 213.984 li
432.721 214.623 li
461.79 231.407 li
461.79 231.407 li
462.898 232.046 li
482.131 243.151 li
483.779 244.101 484.557 245.385 484.502 246.722 cv
484.443 248.117 483.477 249.571 481.642 250.764 cv
484.004 249.228 484.92 247.26 484.317 245.54 cv
483.917 246.751 482.857 247.951 481.147 248.939 cv
396.546 297.767 li
394.327 299.048 391.484 299.705 388.789 299.705 cv
306.276 208.221 mo
273.788 226.979 li
385.268 291.267 li
417.757 272.51 li
306.276 208.221 li
481.169 251.054 mo
481.17 251.053 481.171 251.053 481.172 251.052 cv
481.171 251.053 481.17 251.053 481.169 251.054 cv
481.539 250.83 mo
481.539 250.829 481.54 250.829 481.54 250.829 cv
481.54 250.829 481.539 250.829 481.539 250.83 cv
481.559 250.817 mo
481.561 250.816 481.562 250.815 481.563 250.814 cv
481.562 250.815 481.561 250.816 481.559 250.817 cv
481.582 250.802 mo
481.584 250.801 481.586 250.8 481.588 250.798 cv
481.586 250.8 481.584 250.801 481.582 250.802 cv
481.6 250.79 mo
481.603 250.789 481.606 250.787 481.609 250.785 cv
481.606 250.787 481.603 250.789 481.6 250.79 cv
481.624 250.775 mo
481.628 250.772 481.632 250.77 481.636 250.767 cv
481.632 250.77 481.628 250.772 481.624 250.775 cv
257.627 228.056 mo
257.626 228.056 257.626 228.055 257.625 228.054 cv
257.626 228.055 257.626 228.056 257.627 228.056 cv
level3{
gsave
clp
[273.717 0 0 273.717 513.454 249.172 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[273.717 0 0 273.717 513.454 249.172 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
481.147 248.939 mo
396.546 297.767 li
392.488 300.11 386.349 300.364 382.834 298.335 cv
258.59 226.603 li
257.438 225.938 256.719 225.109 256.405 224.213 cv
255.855 225.875 256.556 227.557 258.59 228.732 cv
382.834 300.463 li
386.349 302.492 392.488 302.239 396.546 299.895 cv
481.147 251.067 li
483.875 249.492 484.961 247.375 484.317 245.54 cv
483.917 246.751 482.857 247.951 481.147 248.939 cv
0 0 0 0 cmyk
f
311.433 204.984 mo
305.811 201.738 li
305.36 201.478 305.417 201.022 305.938 200.721 cv
312.573 196.89 li
313.094 196.589 313.882 196.557 314.334 196.818 cv
319.956 200.063 li
320.407 200.323 320.35 200.779 319.829 201.079 cv
313.194 204.91 li
312.672 205.211 311.884 205.244 311.433 204.984 cv
cp
.657221 .328313 0 0 cmyk
f
320.114 209.995 mo
314.493 206.75 li
314.042 206.49 314.098 206.034 314.619 205.734 cv
321.255 201.903 li
321.776 201.602 322.564 201.569 323.015 201.829 cv
328.637 205.075 li
329.089 205.335 329.032 205.791 328.51 206.092 cv
321.875 209.923 li
321.354 210.224 320.565 210.256 320.114 209.995 cv
cp
f
328.796 215.008 mo
323.174 211.762 li
322.722 211.501 322.779 211.046 323.3 210.745 cv
329.936 206.914 li
330.457 206.614 331.246 206.581 331.697 206.842 cv
337.318 210.087 li
337.769 210.348 337.713 210.803 337.192 211.104 cv
330.556 214.935 li
330.035 215.236 329.247 215.269 328.796 215.008 cv
cp
f
340.802 210.868 mo
335.18 207.623 li
334.729 207.363 334.786 206.907 335.307 206.607 cv
340.878 203.391 li
341.398 203.089 342.187 203.057 342.638 203.318 cv
348.259 206.563 li
348.711 206.823 348.654 207.279 348.133 207.579 cv
342.563 210.795 li
342.042 211.097 341.254 211.129 340.802 210.868 cv
cp
f
349.484 215.881 mo
343.862 212.635 li
343.411 212.374 343.467 211.919 343.989 211.618 cv
349.558 208.403 li
350.08 208.102 350.868 208.069 351.319 208.329 cv
356.941 211.575 li
357.392 211.836 357.336 212.291 356.814 212.592 cv
351.245 215.808 li
350.723 216.109 349.935 216.142 349.484 215.881 cv
cp
f
358.165 220.893 mo
352.544 217.648 li
352.092 217.387 352.149 216.932 352.67 216.631 cv
358.24 213.415 li
358.761 213.114 359.549 213.081 360.001 213.342 cv
365.623 216.587 li
366.074 216.848 366.017 217.303 365.496 217.604 cv
359.925 220.82 li
359.405 221.121 358.616 221.154 358.165 220.893 cv
cp
f
366.846 225.906 mo
361.225 222.659 li
360.773 222.399 360.83 221.944 361.351 221.643 cv
366.922 218.427 li
367.442 218.126 368.231 218.093 368.682 218.354 cv
374.303 221.6 li
374.755 221.861 374.699 222.316 374.177 222.616 cv
368.607 225.832 li
368.087 226.133 367.297 226.165 366.846 225.906 cv
cp
f
375.528 230.917 mo
369.906 227.672 li
369.455 227.411 369.511 226.956 370.033 226.656 cv
375.602 223.44 li
376.124 223.138 376.912 223.106 377.364 223.366 cv
382.985 226.612 li
383.436 226.872 383.38 227.327 382.859 227.628 cv
377.289 230.844 li
376.767 231.145 375.979 231.178 375.528 230.917 cv
cp
f
384.209 235.93 mo
378.588 232.684 li
378.136 232.423 378.193 231.968 378.714 231.667 cv
384.284 228.451 li
384.805 228.151 385.593 228.117 386.045 228.378 cv
391.667 231.624 li
392.118 231.885 392.061 232.34 391.54 232.641 cv
385.97 235.857 li
385.449 236.157 384.661 236.19 384.209 235.93 cv
cp
f
392.89 240.942 mo
387.269 237.697 li
386.817 237.436 386.874 236.981 387.395 236.679 cv
392.965 233.463 li
393.486 233.162 394.275 233.13 394.726 233.391 cv
400.347 236.636 li
400.799 236.897 400.743 237.352 400.221 237.653 cv
394.651 240.868 li
394.13 241.169 393.341 241.202 392.89 240.942 cv
cp
f
401.572 245.954 mo
395.95 242.708 li
395.499 242.448 395.555 241.992 396.077 241.692 cv
401.647 238.476 li
402.168 238.175 402.957 238.142 403.408 238.403 cv
409.029 241.649 li
409.48 241.909 409.423 242.365 408.903 242.665 cv
403.333 245.881 li
402.811 246.182 402.023 246.214 401.572 245.954 cv
cp
f
410.254 250.966 mo
404.631 247.721 li
404.18 247.46 404.237 247.005 404.758 246.703 cv
410.328 243.488 li
410.849 243.187 411.637 243.155 412.089 243.415 cv
417.711 246.66 li
418.162 246.921 418.105 247.376 417.584 247.677 cv
412.014 250.893 li
411.493 251.194 410.705 251.227 410.254 250.966 cv
cp
f
418.934 255.978 mo
413.313 252.733 li
412.862 252.472 412.919 252.017 413.439 251.716 cv
419.009 248.5 li
419.531 248.199 420.319 248.166 420.77 248.427 cv
426.392 251.673 li
426.843 251.933 426.787 252.389 426.265 252.69 cv
420.695 255.906 li
420.174 256.206 419.385 256.239 418.934 255.978 cv
cp
f
353.593 208.495 mo
347.972 205.25 li
347.521 204.99 347.578 204.534 348.098 204.234 cv
353.669 201.018 li
354.19 200.717 354.978 200.684 355.429 200.945 cv
361.051 204.19 li
361.503 204.45 361.446 204.906 360.924 205.207 cv
355.355 208.423 li
354.834 208.724 354.045 208.756 353.593 208.495 cv
cp
f
344.783 203.408 mo
339.161 200.163 li
338.71 199.903 338.766 199.448 339.288 199.147 cv
344.858 195.931 li
345.379 195.63 346.168 195.597 346.619 195.858 cv
352.24 199.103 li
352.691 199.364 352.635 199.819 352.114 200.119 cv
346.544 203.335 li
346.022 203.637 345.234 203.669 344.783 203.408 cv
cp
f
335.958 198.314 mo
323.85 191.323 li
323.399 191.063 323.456 190.608 323.976 190.307 cv
329.547 187.091 li
330.068 186.789 330.856 186.757 331.307 187.018 cv
343.415 194.008 li
343.866 194.269 343.809 194.724 343.289 195.025 cv
337.718 198.24 li
337.197 198.541 336.409 198.574 335.958 198.314 cv
cp
f
342.127 192.116 mo
332.3 186.445 li
331.849 186.184 331.906 185.729 332.427 185.427 cv
337.998 182.211 li
338.518 181.91 339.307 181.878 339.758 182.139 cv
349.584 187.812 li
350.035 188.072 349.978 188.528 349.458 188.828 cv
343.887 192.044 li
343.366 192.345 342.578 192.377 342.127 192.116 cv
cp
f
362.275 213.508 mo
356.654 210.262 li
356.202 210.001 356.258 209.546 356.78 209.245 cv
362.35 206.03 li
362.871 205.729 363.66 205.697 364.111 205.956 cv
369.732 209.202 li
370.184 209.463 370.128 209.918 369.606 210.219 cv
364.036 213.435 li
363.515 213.736 362.726 213.769 362.275 213.508 cv
cp
f
370.957 218.52 mo
365.335 215.275 li
364.883 215.014 364.94 214.559 365.462 214.258 cv
371.031 211.042 li
371.552 210.741 372.34 210.708 372.793 210.969 cv
378.414 214.214 li
378.865 214.475 378.808 214.93 378.288 215.231 cv
372.717 218.448 li
372.196 218.748 371.408 218.781 370.957 218.52 cv
cp
f
379.637 223.532 mo
374.016 220.286 li
373.565 220.026 373.622 219.571 374.142 219.27 cv
379.713 216.054 li
380.234 215.753 381.022 215.721 381.473 215.981 cv
387.095 219.227 li
387.547 219.488 387.49 219.943 386.968 220.243 cv
381.399 223.459 li
380.878 223.76 380.089 223.793 379.637 223.532 cv
cp
f
388.319 228.544 mo
382.698 225.299 li
382.246 225.038 382.302 224.583 382.824 224.282 cv
388.394 221.067 li
388.916 220.765 389.704 220.733 390.155 220.993 cv
395.776 224.239 li
396.228 224.499 396.172 224.954 395.65 225.255 cv
390.08 228.471 li
389.559 228.773 388.77 228.805 388.319 228.544 cv
cp
f
397.001 233.557 mo
391.379 230.311 li
390.927 230.05 390.984 229.595 391.505 229.294 cv
397.076 226.078 li
397.596 225.778 398.385 225.744 398.837 226.005 cv
404.458 229.251 li
404.909 229.512 404.852 229.967 404.332 230.268 cv
398.761 233.484 li
398.24 233.784 397.452 233.818 397.001 233.557 cv
cp
f
405.682 238.569 mo
400.06 235.323 li
399.609 235.063 399.666 234.608 400.187 234.307 cv
405.756 231.091 li
406.278 230.789 407.066 230.757 407.517 231.018 cv
413.139 234.263 li
413.59 234.524 413.534 234.979 413.012 235.28 cv
407.443 238.495 li
406.922 238.797 406.133 238.829 405.682 238.569 cv
cp
f
414.363 243.581 mo
408.742 240.335 li
408.291 240.074 408.347 239.619 408.868 239.319 cv
414.438 236.103 li
414.96 235.802 415.748 235.769 416.199 236.03 cv
421.821 239.276 li
422.272 239.536 422.215 239.991 421.694 240.292 cv
416.124 243.508 li
415.603 243.809 414.814 243.841 414.363 243.581 cv
cp
f
423.045 248.593 mo
417.422 245.348 li
416.971 245.087 417.028 244.632 417.549 244.331 cv
423.12 241.115 li
423.64 240.814 424.429 240.781 424.88 241.042 cv
430.502 244.287 li
430.953 244.548 430.897 245.003 430.376 245.304 cv
424.805 248.52 li
424.284 248.821 423.496 248.854 423.045 248.593 cv
cp
f
431.726 253.606 mo
426.104 250.36 li
425.653 250.099 425.71 249.644 426.231 249.343 cv
431.8 246.127 li
432.322 245.826 433.11 245.793 433.562 246.054 cv
439.183 249.3 li
439.634 249.561 439.578 250.016 439.057 250.317 cv
433.487 253.532 li
432.965 253.833 432.177 253.865 431.726 253.606 cv
cp
f
447.16 262.516 mo
434.893 255.434 li
434.442 255.174 434.499 254.718 435.02 254.417 cv
440.59 251.201 li
441.111 250.901 441.9 250.868 442.351 251.129 cv
454.617 258.21 li
455.068 258.471 455.011 258.926 454.49 259.227 cv
448.921 262.443 li
448.399 262.743 447.611 262.777 447.16 262.516 cv
cp
f
464.061 252.758 mo
453.708 246.781 li
453.256 246.52 453.313 246.065 453.835 245.764 cv
459.405 242.548 li
459.925 242.247 460.714 242.214 461.166 242.475 cv
471.518 248.452 li
471.969 248.713 471.913 249.168 471.392 249.469 cv
465.822 252.685 li
465.3 252.986 464.512 253.019 464.061 252.758 cv
cp
f
377.478 212.528 mo
371.856 209.281 li
371.405 209.021 371.462 208.566 371.983 208.265 cv
377.552 205.049 li
378.074 204.748 378.863 204.715 379.314 204.976 cv
384.935 208.222 li
385.386 208.483 385.33 208.938 384.809 209.239 cv
379.239 212.454 li
378.717 212.755 377.929 212.787 377.478 212.528 cv
cp
f
368.581 207.39 mo
362.959 204.145 li
362.507 203.884 362.564 203.429 363.086 203.128 cv
368.656 199.912 li
369.176 199.612 369.965 199.578 370.417 199.839 cv
376.038 203.085 li
376.49 203.345 376.433 203.801 375.912 204.102 cv
370.341 207.318 li
369.82 207.618 369.032 207.651 368.581 207.39 cv
cp
f
359.683 202.253 mo
354.062 199.008 li
353.61 198.747 353.667 198.292 354.188 197.991 cv
359.758 194.776 li
360.28 194.475 361.068 194.442 361.519 194.702 cv
367.14 197.948 li
367.592 198.208 367.536 198.663 367.014 198.965 cv
361.444 202.181 li
360.923 202.482 360.134 202.514 359.683 202.253 cv
cp
f
350.786 197.116 mo
345.165 193.871 li
344.714 193.611 344.77 193.156 345.291 192.855 cv
350.861 189.639 li
351.382 189.337 352.171 189.305 352.622 189.566 cv
358.244 192.811 li
358.695 193.072 358.638 193.527 358.117 193.827 cv
352.547 197.043 li
352.026 197.345 351.237 197.377 350.786 197.116 cv
cp
f
386.159 217.539 mo
380.538 214.294 li
380.087 214.033 380.143 213.578 380.664 213.277 cv
386.234 210.061 li
386.755 209.76 387.544 209.728 387.995 209.989 cv
393.617 213.234 li
394.068 213.494 394.011 213.949 393.49 214.25 cv
387.921 217.466 li
387.399 217.767 386.611 217.8 386.159 217.539 cv
cp
f
394.84 222.552 mo
389.219 219.306 li
388.768 219.045 388.825 218.59 389.345 218.289 cv
394.916 215.073 li
395.437 214.773 396.225 214.74 396.676 215 cv
402.298 218.246 li
402.75 218.507 402.693 218.962 402.172 219.263 cv
396.601 222.479 li
396.081 222.78 395.292 222.812 394.84 222.552 cv
cp
f
403.522 227.564 mo
397.9 224.319 li
397.449 224.058 397.505 223.603 398.027 223.301 cv
403.597 220.085 li
404.118 219.784 404.907 219.752 405.358 220.013 cv
410.979 223.258 li
411.43 223.519 411.374 223.974 410.853 224.275 cv
405.283 227.49 li
404.761 227.791 403.973 227.824 403.522 227.564 cv
cp
f
412.204 232.575 mo
406.582 229.33 li
406.13 229.07 406.187 228.615 406.709 228.314 cv
412.278 225.098 li
412.799 224.797 413.588 224.764 414.04 225.025 cv
419.661 228.271 li
420.112 228.531 420.055 228.987 419.535 229.287 cv
413.964 232.503 li
413.443 232.804 412.655 232.836 412.204 232.575 cv
cp
f
420.884 237.588 mo
415.263 234.342 li
414.812 234.082 414.869 233.626 415.389 233.325 cv
420.96 230.11 li
421.481 229.809 422.269 229.777 422.72 230.037 cv
428.342 233.282 li
428.794 233.543 428.737 233.998 428.215 234.299 cv
422.646 237.515 li
422.125 237.816 421.336 237.849 420.884 237.588 cv
cp
f
429.566 242.6 mo
423.945 239.355 li
423.493 239.094 423.549 238.639 424.071 238.338 cv
429.641 235.122 li
430.162 234.822 430.951 234.788 431.402 235.049 cv
437.023 238.295 li
437.475 238.555 437.419 239.011 436.897 239.312 cv
431.327 242.528 li
430.806 242.828 430.017 242.861 429.566 242.6 cv
cp
f
438.248 247.613 mo
432.626 244.366 li
432.174 244.107 432.231 243.651 432.753 243.35 cv
438.322 240.134 li
438.843 239.833 439.631 239.801 440.084 240.062 cv
445.705 243.307 li
446.156 243.568 446.099 244.023 445.579 244.323 cv
440.008 247.539 li
439.487 247.84 438.699 247.873 438.248 247.613 cv
cp
f
446.928 252.624 mo
441.307 249.379 li
440.856 249.118 440.913 248.663 441.433 248.363 cv
447.004 245.147 li
447.525 244.846 448.313 244.813 448.764 245.073 cv
454.386 248.319 li
454.838 248.579 454.781 249.034 454.259 249.336 cv
448.69 252.552 li
448.169 252.853 447.38 252.885 446.928 252.624 cv
cp
f
455.61 257.637 mo
449.989 254.391 li
449.537 254.13 449.593 253.675 450.115 253.374 cv
455.685 250.158 li
456.207 249.858 456.995 249.825 457.446 250.085 cv
463.067 253.331 li
463.519 253.592 463.463 254.047 462.941 254.348 cv
457.371 257.564 li
456.85 257.865 456.061 257.898 455.61 257.637 cv
cp
f
372.907 200.13 mo
367.285 196.884 li
366.834 196.623 366.89 196.168 367.412 195.867 cv
372.982 192.652 li
373.503 192.351 374.292 192.319 374.743 192.578 cv
380.364 195.824 li
380.815 196.085 380.758 196.54 380.238 196.841 cv
374.668 200.057 li
374.146 200.358 373.358 200.391 372.907 200.13 cv
cp
f
364.268 195.143 mo
358.647 191.897 li
358.196 191.636 358.253 191.181 358.773 190.88 cv
364.343 187.664 li
364.865 187.364 365.653 187.331 366.104 187.591 cv
371.726 190.837 li
372.177 191.098 372.121 191.553 371.599 191.854 cv
366.03 195.07 li
365.508 195.37 364.72 195.404 364.268 195.143 cv
cp
f
355.63 190.156 mo
350.008 186.909 li
349.557 186.65 349.614 186.194 350.135 185.893 cv
355.706 182.677 li
356.226 182.376 357.015 182.344 357.466 182.604 cv
363.088 185.85 li
363.539 186.111 363.482 186.566 362.962 186.866 cv
357.391 190.082 li
356.87 190.383 356.082 190.416 355.63 190.156 cv
cp
f
346.992 185.168 mo
341.371 181.922 li
340.92 181.662 340.976 181.206 341.497 180.906 cv
347.067 177.69 li
347.589 177.389 348.377 177.357 348.828 177.617 cv
354.45 180.863 li
354.901 181.123 354.844 181.578 354.323 181.879 cv
348.754 185.095 li
348.232 185.396 347.444 185.429 346.992 185.168 cv
cp
f
355.875 180.039 mo
350.254 176.794 li
349.802 176.533 349.859 176.078 350.38 175.778 cv
352.221 174.714 li
352.742 174.413 353.531 174.381 353.982 174.642 cv
359.603 177.887 li
360.055 178.148 359.999 178.603 359.477 178.904 cv
357.635 179.967 li
357.115 180.268 356.326 180.3 355.875 180.039 cv
cp
f
367.148 186.548 mo
361.526 183.302 li
361.075 183.042 361.131 182.587 361.653 182.285 cv
363.494 181.223 li
364.015 180.922 364.803 180.889 365.255 181.15 cv
370.877 184.396 li
371.328 184.656 371.271 185.112 370.75 185.412 cv
368.909 186.475 li
368.387 186.776 367.599 186.809 367.148 186.548 cv
cp
f
375.75 191.515 mo
370.129 188.269 li
369.677 188.008 369.733 187.553 370.255 187.252 cv
372.096 186.189 li
372.617 185.888 373.406 185.856 373.857 186.116 cv
379.478 189.362 li
379.93 189.622 379.874 190.077 379.352 190.378 cv
377.51 191.442 li
376.99 191.742 376.201 191.775 375.75 191.515 cv
cp
f
384.352 196.481 mo
378.73 193.236 li
378.279 192.975 378.336 192.52 378.857 192.219 cv
380.698 191.156 li
381.219 190.855 382.007 190.823 382.46 191.082 cv
388.081 194.328 li
388.532 194.589 388.475 195.044 387.955 195.345 cv
386.113 196.408 li
385.591 196.709 384.803 196.741 384.352 196.481 cv
cp
f
392.954 201.448 mo
387.333 198.201 li
386.881 197.942 386.938 197.487 387.459 197.185 cv
389.3 196.122 li
389.822 195.822 390.61 195.788 391.061 196.049 cv
396.683 199.295 li
397.134 199.555 397.078 200.01 396.556 200.312 cv
394.715 201.374 li
394.194 201.675 393.406 201.708 392.954 201.448 cv
cp
f
440.979 229.174 mo
435.357 225.929 li
434.906 225.668 434.963 225.213 435.484 224.912 cv
437.325 223.849 li
437.846 223.548 438.634 223.516 439.086 223.776 cv
444.708 227.022 li
445.159 227.282 445.102 227.738 444.581 228.038 cv
442.74 229.102 li
442.218 229.403 441.43 229.435 440.979 229.174 cv
cp
f
449.581 234.141 mo
443.96 230.896 li
443.508 230.635 443.565 230.18 444.086 229.878 cv
445.927 228.816 li
446.448 228.515 447.237 228.482 447.688 228.742 cv
453.309 231.989 li
453.761 232.248 453.705 232.704 453.183 233.005 cv
451.341 234.068 li
450.821 234.368 450.032 234.402 449.581 234.141 cv
cp
f
458.183 239.108 mo
452.561 235.862 li
452.11 235.601 452.167 235.146 452.688 234.845 cv
454.529 233.782 li
455.05 233.481 455.839 233.448 456.291 233.709 cv
461.912 236.954 li
462.363 237.215 462.306 237.67 461.786 237.971 cv
459.944 239.034 li
459.422 239.335 458.634 239.368 458.183 239.108 cv
cp
f
466.785 244.073 mo
461.164 240.828 li
460.713 240.568 460.769 240.113 461.29 239.812 cv
463.131 238.748 li
463.653 238.448 464.441 238.415 464.892 238.675 cv
470.514 241.921 li
470.965 242.182 470.909 242.637 470.387 242.938 cv
468.547 244.001 li
468.025 244.302 467.237 244.334 466.785 244.073 cv
cp
f
381.589 205.142 mo
375.966 201.897 li
375.515 201.636 375.572 201.181 376.093 200.88 cv
381.663 197.664 li
382.184 197.363 382.972 197.33 383.423 197.591 cv
389.046 200.836 li
389.497 201.097 389.44 201.552 388.919 201.853 cv
383.349 205.069 li
382.828 205.37 382.04 205.403 381.589 205.142 cv
cp
f
390.269 210.155 mo
384.648 206.908 li
384.197 206.648 384.254 206.193 384.774 205.892 cv
390.344 202.676 li
390.866 202.375 391.654 202.342 392.105 202.603 cv
397.727 205.849 li
398.178 206.11 398.122 206.565 397.6 206.865 cv
392.03 210.081 li
391.509 210.382 390.72 210.415 390.269 210.155 cv
cp
f
398.951 215.166 mo
393.329 211.921 li
392.878 211.66 392.934 211.205 393.456 210.905 cv
399.026 207.689 li
399.547 207.387 400.336 207.355 400.787 207.615 cv
406.408 210.861 li
406.859 211.121 406.803 211.576 406.282 211.877 cv
400.712 215.093 li
400.19 215.395 399.402 215.427 398.951 215.166 cv
cp
f
407.632 220.179 mo
402.01 216.933 li
401.559 216.672 401.616 216.217 402.137 215.916 cv
407.707 212.7 li
408.228 212.4 409.016 212.366 409.468 212.627 cv
415.089 215.873 li
415.541 216.134 415.484 216.589 414.964 216.89 cv
409.393 220.106 li
408.872 220.406 408.084 220.439 407.632 220.179 cv
cp
f
416.313 225.191 mo
410.692 221.946 li
410.241 221.685 410.297 221.23 410.818 220.929 cv
416.388 217.712 li
416.91 217.411 417.698 217.379 418.149 217.64 cv
423.771 220.885 li
424.222 221.146 424.166 221.601 423.644 221.902 cv
418.075 225.117 li
417.553 225.418 416.765 225.451 416.313 225.191 cv
cp
f
424.995 230.203 mo
419.374 226.957 li
418.922 226.697 418.978 226.241 419.5 225.941 cv
425.07 222.725 li
425.59 222.424 426.38 222.391 426.831 222.652 cv
432.452 225.898 li
432.904 226.158 432.847 226.614 432.326 226.914 cv
426.755 230.13 li
426.235 230.431 425.446 230.463 424.995 230.203 cv
cp
f
433.676 235.215 mo
428.054 231.97 li
427.603 231.709 427.66 231.254 428.181 230.952 cv
433.751 227.737 li
434.272 227.436 435.06 227.404 435.512 227.664 cv
441.133 230.909 li
441.585 231.17 441.528 231.625 441.007 231.926 cv
435.437 235.142 li
434.916 235.443 434.128 235.476 433.676 235.215 cv
cp
f
442.357 240.228 mo
436.736 236.982 li
436.285 236.721 436.341 236.266 436.862 235.965 cv
442.432 232.749 li
442.954 232.448 443.742 232.415 444.193 232.676 cv
449.815 235.922 li
450.266 236.182 450.21 236.638 449.688 236.939 cv
444.119 240.155 li
443.597 240.455 442.809 240.488 442.357 240.228 cv
cp
f
451.039 245.24 mo
445.418 241.993 li
444.965 241.734 445.022 241.279 445.544 240.977 cv
451.114 237.761 li
451.635 237.46 452.423 237.428 452.875 237.689 cv
458.497 240.934 li
458.948 241.195 458.891 241.65 458.37 241.95 cv
452.799 245.166 li
452.279 245.467 451.49 245.5 451.039 245.24 cv
cp
f
331.956 205.761 mo
315.399 196.202 li
314.948 195.942 315.005 195.487 315.526 195.186 cv
321.095 191.97 li
321.617 191.669 322.405 191.636 322.857 191.897 cv
339.413 201.455 li
339.864 201.716 339.807 202.171 339.287 202.472 cv
333.716 205.688 li
333.195 205.989 332.407 206.022 331.956 205.761 cv
cp
f
438.608 267.337 mo
422.051 257.779 li
421.6 257.518 421.657 257.063 422.178 256.761 cv
427.749 253.545 li
428.269 253.244 429.058 253.212 429.509 253.473 cv
446.065 263.031 li
446.516 263.292 446.46 263.747 445.939 264.048 cv
440.369 267.264 li
439.847 267.565 439.059 267.597 438.608 267.337 cv
cp
f
403.89 258.364 mo
398.268 255.118 li
397.817 254.858 397.874 254.403 398.395 254.102 cv
405.03 250.271 li
405.551 249.97 406.339 249.937 406.791 250.198 cv
412.413 253.443 li
412.864 253.703 412.807 254.158 412.286 254.46 cv
405.651 258.29 li
405.13 258.592 404.341 258.624 403.89 258.364 cv
cp
f
340.845 221.965 mo
331.855 216.775 li
331.404 216.514 331.461 216.059 331.982 215.758 cv
338.617 211.927 li
339.138 211.626 339.926 211.593 340.378 211.854 cv
349.369 217.044 li
349.82 217.305 349.763 217.76 349.242 218.061 cv
342.607 221.892 li
342.086 222.193 341.297 222.226 340.845 221.965 cv
cp
f
395.525 253.534 mo
386.535 248.344 li
386.084 248.083 386.14 247.628 386.662 247.327 cv
393.297 243.496 li
393.818 243.196 394.606 243.162 395.057 243.423 cv
404.048 248.614 li
404.5 248.874 404.443 249.329 403.922 249.63 cv
397.286 253.461 li
396.765 253.762 395.976 253.795 395.525 253.534 cv
cp
f
353.371 229.197 mo
344.38 224.006 li
343.929 223.745 343.986 223.29 344.507 222.99 cv
351.142 219.158 li
351.664 218.858 352.452 218.824 352.903 219.085 cv
361.894 224.276 li
362.345 224.536 362.289 224.991 361.767 225.292 cv
355.132 229.123 li
354.611 229.424 353.823 229.457 353.371 229.197 cv
cp
f
352.964 219.12 mo
392.052 241.688 li
392.537 241.968 392.537 242.422 392.052 242.701 cv
385.286 246.609 li
384.8 246.889 384.014 246.889 383.529 246.609 cv
344.442 224.041 li
352.964 219.12 li
cp
f
428.153 267.451 mo
434.415 271.067 li
434.785 271.281 434.738 271.654 434.311 271.9 cv
431.596 273.467 li
431.17 273.714 430.523 273.74 430.153 273.527 cv
423.891 269.911 li
423.521 269.698 423.568 269.324 423.995 269.078 cv
426.71 267.511 li
427.136 267.265 427.783 267.238 428.153 267.451 cv
cp
f
419.399 262.398 mo
425.662 266.013 li
426.031 266.227 425.985 266.6 425.557 266.846 cv
422.843 268.413 li
422.417 268.659 421.77 268.687 421.4 268.473 cv
415.138 264.858 li
414.768 264.644 414.815 264.271 415.242 264.025 cv
417.956 262.457 li
418.383 262.211 419.03 262.184 419.399 262.398 cv
cp
f
410.718 257.385 mo
416.98 261 li
417.35 261.214 417.303 261.587 416.877 261.834 cv
414.162 263.401 li
413.735 263.648 413.089 263.674 412.718 263.461 cv
406.457 259.846 li
406.087 259.632 406.133 259.259 406.56 259.012 cv
409.275 257.446 li
409.702 257.198 410.348 257.172 410.718 257.385 cv
cp
f
424.194 259.63 mo
430.456 263.245 li
430.826 263.458 430.779 263.831 430.352 264.078 cv
427.637 265.646 li
427.211 265.892 426.564 265.919 426.194 265.705 cv
419.932 262.09 li
419.562 261.876 419.609 261.503 420.036 261.257 cv
422.751 259.69 li
423.177 259.443 423.824 259.416 424.194 259.63 cv
cp
f
406.744 108.308 mo
392.625 100.156 li
393.226 97.1155 li
407.345 105.268 li
406.744 108.308 li
cp
.147219 .0154116 0 0 cmyk
f
405.212 115.372 mo
391.092 107.221 li
391.694 104.181 li
405.813 112.332 li
405.212 115.372 li
cp
0 0 0 0 cmyk
f
474.513 213.365 mo
460.394 205.213 li
460.996 202.173 li
475.115 210.325 li
474.513 213.365 li
cp
.147219 .0154116 0 0 cmyk
f
402.148 129.502 mo
388.028 121.35 li
388.63 118.31 li
402.749 126.462 li
402.148 129.502 li
cp
f
462.32 169.24 mo
410.088 139.082 li
410.759 135.687 li
462.992 165.843 li
462.32 169.24 li
cp
f
443.613 174.969 mo
407.151 153.918 li
407.823 150.523 li
444.285 171.573 li
443.613 174.969 li
cp
f
440.163 164.712 mo
408.619 146.5 li
409.292 143.105 li
440.835 161.316 li
440.163 164.712 li
cp
0 0 0 0 cmyk
f
433.467 135.575 mo
432.965 136.672 431.695 137.063 430.631 136.448 cv
429.568 135.834 429.114 134.448 429.616 133.352 cv
430.119 132.255 431.388 131.865 432.452 132.479 cv
433.515 133.092 433.97 134.479 433.467 135.575 cv
cp
0 .912535 0 0 cmyk
f
440.26 139.497 mo
439.758 140.594 438.489 140.985 437.425 140.37 cv
436.362 139.757 435.907 138.37 436.41 137.274 cv
436.912 136.178 438.181 135.786 439.245 136.401 cv
440.308 137.015 440.763 138.402 440.26 139.497 cv
cp
0 0 0 0 cmyk
f
447.054 143.419 mo
446.551 144.516 445.282 144.906 444.218 144.293 cv
443.155 143.679 442.7 142.292 443.203 141.197 cv
443.706 140.1 444.975 139.708 446.039 140.323 cv
447.102 140.937 447.556 142.323 447.054 143.419 cv
cp
.147219 .0154116 0 0 cmyk
f
453.847 147.342 mo
453.344 148.438 452.075 148.829 451.011 148.215 cv
449.948 147.601 449.494 146.214 449.996 145.118 cv
450.499 144.022 451.768 143.631 452.832 144.244 cv
453.895 144.859 454.35 146.245 453.847 147.342 cv
cp
0 .912535 0 0 cmyk
f
460.852 176.656 mo
445.081 167.551 li
445.753 164.156 li
461.524 173.261 li
460.852 176.656 li
cp
f
353.054 268.832 mo
311.9 245.072 li
310.894 244.491 311.02 243.477 312.181 242.806 cv
333.882 230.278 li
335.043 229.607 336.799 229.534 337.805 230.115 cv
378.96 253.875 li
379.965 254.456 379.839 255.471 378.678 256.141 cv
356.979 268.669 li
355.817 269.34 354.06 269.413 353.054 268.832 cv
0 0 0 0 cmyk
f
gsave
385.268 291.267 mo
273.788 226.979 li
306.276 208.221 li
417.757 272.51 li
385.268 291.267 li
336.1 229.723 mo
335.329 229.723 334.516 229.911 333.882 230.278 cv
312.181 242.806 li
311.02 243.477 310.894 244.491 311.9 245.072 cv
353.054 268.832 li
353.51 269.095 354.119 269.224 354.758 269.224 cv
355.529 269.224 356.343 269.036 356.979 268.669 cv
378.678 256.141 li
379.839 255.471 379.965 254.456 378.96 253.875 cv
337.805 230.115 li
337.349 229.852 336.739 229.723 336.1 229.723 cv
clp
273.788 208.221 mo
417.757 208.221 li
417.757 291.267 li
273.788 291.267 li
cp
level3{
gsave
clp
[273.717 0 0 273.717 513.454 249.172 ]ct
/6 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~P$&_(P$&_(P$&_(P$&_(P$&_(P$&_(P$/e)P$/e)P$/e)P$/e)P?Jn*P?Jn*P?Jn*P?St+PZo(,PZo(,
PZo(,PZo(,Q!>7.Q!>7.Q!>7.Q<Y@/Q<Y@/QX(O1QX(O1QsCX2QsL^3R9gj5R9pp6RU7$7Rp[39S7!<:
S7*B;SREK<SmiZ>SmiZ>T4/c?TOSrATk#,CU1G;EULbDFULkJGUh1SHVIpkKVe@%MW+d4OWG3CQWbNLR
X(r[TXDAjVX_f'YY&56[Y\tN^Z#:W_Z>^faZZ-uc[<!>g[WEMi[r`Si\TSqm\p#+o]6G:q]m1Ru^3Ub"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[273.717 0 0 273.717 513.454 249.172 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]tM+m]tD"i]=PSb]",A^\[]/Y\$i`R[^ENN[C!<IZa-mBZE^[>Z*:I:Yck75Y-"h.XfSV*XK/D&X/`2"
WiE%tWMuhpW2QVlVl-DhVP^2dUnjc\USFQXU8"BVU8"?TTqS-PTV.pLT:_^HSt;LDSXl=BSXl:@S=H(<
S"#n:S"#n9R[T\5R@0J1R$a8.R$a8-Q^=&*Q^=&)QBmi&QBmi%Q'IW"Q'IW!Pa%DsPa%DsPa%DrPEV2o
PEV2oPEV2oPEV2oP*1ukP*1ukP*1ukP*1ukOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcg
~>
<~H$O[\H$FRYG^"@UGBS.QG'.qLFE;MEF)uDDF)l;@EH#l9E,TZ5Df0H1DJj?0DJa6-D/=$)Chmg%CMIU!
C2.HsBk_9qBk_6oBP;$kB4kggAnGUcAS#FaAS#C_A7T4]A7T1[@q/tW@U`bS@:<SQ@:<SQ@:<PO?smAM
?smAL?XI/I?XI/H?=$rE?=$rD?!U`A?!U`@>[1N=>[1N=>[1N<>?b<9>?b<9>?b<9>?b<9>?b<8>$>*5
>$>*5>$>*5>$>*5>$>*5=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-
~>
<~)]K_8)]K_8)]K_8)]K_8)]K_8)]Th;*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#fh9)]K_8
)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8
)]K_8)]K_8)]K_8)]K_8)]K_8)]K_7)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4
)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
grestore
354.758 269.224 mo
354.119 269.224 353.51 269.095 353.054 268.832 cv
311.9 245.072 li
310.894 244.491 311.02 243.477 312.181 242.806 cv
333.882 230.278 li
334.516 229.911 335.329 229.723 336.1 229.723 cv
336.739 229.723 337.349 229.852 337.805 230.115 cv
378.96 253.875 li
379.965 254.456 379.839 255.471 378.678 256.141 cv
356.979 268.669 li
356.343 269.036 355.529 269.224 354.758 269.224 cv
.47599 .317418 .134188 0 cmyk
f
277.224 210.465 mo
385.267 272.772 li
414.321 255.998 li
306.277 193.692 li
277.224 210.465 li
cp
385.268 276.472 mo
384.972 276.472 384.675 276.395 384.41 276.242 cv
272.929 211.954 li
272.398 211.648 272.07 211.08 272.07 210.466 cv
272.07 209.853 272.397 209.285 272.929 208.979 cv
305.418 190.221 li
305.948 189.914 306.602 189.914 307.134 190.22 cv
418.616 254.509 li
419.147 254.816 419.475 255.383 419.475 255.997 cv
419.475 256.611 419.148 257.178 418.616 257.485 cv
386.127 276.241 li
385.861 276.395 385.565 276.472 385.268 276.472 cv
cp
0 0 0 0 cmyk
f
325.797 223.657 mo
325.036 223.657 324.419 223.04 324.419 222.28 cv
324.419 178.763 li
324.419 178.002 325.036 177.385 325.797 177.385 cv
326.557 177.385 327.174 178.002 327.174 178.763 cv
327.174 222.28 li
327.174 223.04 326.557 223.657 325.797 223.657 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
318.984 173.831 mo
318.984 203.231 li
318.984 204.238 319.649 205.243 320.979 206.011 cv
323.64 207.547 327.953 207.547 330.613 206.012 cv
331.943 205.243 332.608 204.238 332.608 203.231 cv
332.608 173.831 li
318.984 173.831 li
cp
level3{
gsave
clp
[12.731 0 0 12.731 318.139 201.782 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[12.731 0 0 12.731 318.139 201.782 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
318.984 178.667 mo
318.984 188.616 li
322.982 190.444 328.611 190.444 332.608 188.617 cv
332.608 178.667 li
328.61 176.842 322.982 176.842 318.984 178.667 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
336.835 132.858 mo
314.758 132.858 li
314.758 178.967 li
314.758 180.598 315.836 182.23 317.992 183.474 cv
322.301 185.962 329.291 185.962 333.601 183.474 cv
335.757 182.23 336.835 180.599 336.835 178.967 cv
336.835 132.858 li
cp
level3{
gsave
clp
[20.1303 0 0 20.1303 311.019 188.117 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.1303 0 0 20.1303 311.019 188.117 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
323.885 198.761 mo
323.885 200.113 322.936 200.661 321.765 199.985 cv
320.593 199.309 319.644 197.664 319.644 196.312 cv
319.644 194.96 320.593 194.411 321.765 195.088 cv
322.936 195.764 323.885 197.408 323.885 198.761 cv
cp
.147219 .0154116 0 0 cmyk
f
368.603 248.402 mo
367.842 248.402 367.225 247.784 367.225 247.024 cv
367.225 203.507 li
367.225 202.746 367.842 202.129 368.603 202.129 cv
369.364 202.129 369.981 202.746 369.981 203.507 cv
369.981 247.024 li
369.981 247.784 369.364 248.402 368.603 248.402 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
361.792 198.575 mo
361.792 227.974 li
361.792 228.981 362.457 229.988 363.787 230.755 cv
366.447 232.291 370.76 232.291 373.421 230.755 cv
374.751 229.988 375.416 228.981 375.416 227.974 cv
375.416 198.575 li
361.792 198.575 li
cp
level3{
gsave
clp
[12.731 0 0 12.731 360.946 226.526 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[12.731 0 0 12.731 360.946 226.526 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
361.792 203.411 mo
361.792 213.361 li
365.79 215.187 371.418 215.187 375.416 213.361 cv
375.416 203.411 li
371.418 201.585 365.79 201.585 361.792 203.411 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
379.641 157.601 mo
357.565 157.601 li
357.565 203.711 li
357.565 205.342 358.643 206.973 360.798 208.217 cv
365.109 210.706 372.098 210.706 376.409 208.217 cv
378.564 206.973 379.642 205.342 379.641 203.711 cv
379.641 157.601 li
cp
level3{
gsave
clp
[20.1303 0 0 20.1303 353.826 212.86 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.1303 0 0 20.1303 353.826 212.86 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
366.693 223.504 mo
366.693 224.857 365.743 225.405 364.572 224.729 cv
363.401 224.052 362.452 222.408 362.452 221.056 cv
362.452 219.703 363.401 219.156 364.572 219.831 cv
365.743 220.508 366.693 222.152 366.693 223.504 cv
cp
.147219 .0154116 0 0 cmyk
f
283.486 99.4807 mo
312.791 82.6213 li
311.688 99.4807 li
294.854 104.696 li
283.486 99.4807 li
cp
.657221 .328313 0 0 cmyk
f
440.466 196.52 mo
440.466 184.687 432.159 170.298 421.912 164.382 cv
419.681 163.094 417.552 162.343 415.571 162.032 cv
412.617 146.504 401.812 130.014 388.928 122.575 cv
385.053 120.339 381.369 119.143 378.026 118.886 cv
376.267 100.066 363.181 78.676 347.29 69.5012 cv
338.989 64.7083 331.457 64.1418 325.899 67.0764 cv
325.9 67.0618 li
325.63 67.217 li
325.489 67.2961 325.348 67.3762 325.209 67.4602 cv
307.928 77.6663 li
313.671 82.2014 li
308.516 84.4534 305.258 90.2346 305.258 98.7795 cv
305.258 114.536 316.321 133.698 329.968 141.577 cv
414.211 201.733 li
416.808 219.263 li
435.012 208.541 li
435.061 208.513 li
435.17 208.448 li
435.168 208.446 li
438.444 206.474 440.466 202.355 440.466 196.52 cv
cp
level3{
gsave
clp
[72.4496 0 0 72.4496 372.862 142.272 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[72.4496 0 0 72.4496 372.862 142.272 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
306.112 91.8411 mo
345.772 68.6682 li
338.073 64.6536 331.116 64.3215 325.899 67.0764 cv
325.9 67.0618 li
325.63 67.217 li
325.489 67.2961 325.348 67.3762 325.209 67.4602 cv
307.928 77.6663 li
313.671 82.2014 li
310.067 83.7756 307.396 87.0793 306.112 91.8411 cv
cp
.657221 .328313 0 0 cmyk
f
379.355 160.011 mo
408.293 143.029 li
403.33 134.445 396.496 126.945 388.929 122.575 cv
387.927 121.997 386.939 121.492 385.965 121.051 cv
349.158 142.576 li
379.355 160.011 li
cp
f
316.083 79.5618 mo
328.978 87.0071 li
352.595 73.0969 li
350.871 71.7571 349.1 70.5461 347.29 69.5012 cv
344.429 67.8499 341.665 66.7122 339.037 66.0344 cv
316.083 79.5618 li
cp
.147219 .0154116 0 0 cmyk
f
405.101 138.032 mo
382.005 151.642 li
390.038 160.601 li
411.005 148.221 li
409.347 144.67 407.354 141.238 405.101 138.032 cv
cp
f
403.769 175.069 mo
401.539 173.781 399.41 173.03 397.429 172.719 cv
394.475 157.191 383.67 140.7 370.787 133.263 cv
366.912 131.026 363.227 129.83 359.884 129.573 cv
358.126 110.752 345.039 89.3625 329.148 80.1877 cv
312.057 70.3206 298.203 78.3196 298.203 98.053 cv
298.203 98.7219 298.222 99.3977 298.254 100.075 cv
285.756 94.2795 275.992 100.811 275.992 115.615 cv
275.992 131.371 287.054 150.532 300.702 158.411 cv
403.769 217.918 li
414.017 223.834 422.325 219.038 422.325 207.206 cv
422.325 195.373 414.017 180.985 403.769 175.069 cv
cp
level3{
gsave
clp
[146.333 0 0 146.333 275.992 148.207 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[146.333 0 0 146.333 275.992 148.207 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
298.254 100.075 mo
298.222 99.3977 298.203 98.7219 298.203 98.053 cv
298.205 97.969 li
291.3 95.2844 285.368 96.4534 281.644 100.761 cv
285.689 97.4309 291.571 96.9768 298.254 100.075 cv
cp
0 0 0 0 cmyk
f
405.279 173.598 mo
403.047 172.31 400.919 171.559 398.938 171.248 cv
395.984 155.72 385.179 139.23 372.296 131.792 cv
368.421 129.555 364.736 128.36 361.393 128.103 cv
359.634 109.281 346.547 87.8918 330.657 78.717 cv
320.009 72.5696 310.62 73.3596 305.051 79.5989 cv
310.724 74.7512 319.408 74.5647 329.148 80.1877 cv
345.039 89.3625 358.126 110.752 359.884 129.573 cv
363.227 129.83 366.912 131.026 370.787 133.263 cv
383.67 140.7 394.475 157.191 397.429 172.719 cv
399.41 173.03 401.539 173.781 403.77 175.069 cv
414.017 180.985 422.325 195.373 422.325 207.206 cv
422.325 211.476 421.23 214.813 419.366 217.076 cv
422.145 214.936 423.834 211.054 423.834 205.736 cv
423.834 193.903 415.526 179.514 405.279 173.598 cv
cp
f
296.074 104.776 mo
303.822 108.368 li
303.428 99.8372 li
303.4 99.2385 303.382 98.6438 303.382 98.053 cv
303.382 90.4377 305.682 84.9163 309.856 82.5061 cv
314.031 80.0979 319.964 80.8665 326.557 84.6741 cv
340.741 92.8625 353.114 112.796 354.726 130.055 cv
355.133 134.404 li
359.487 134.739 li
362.164 134.944 365.093 135.956 368.197 137.749 cv
379.463 144.253 389.616 159.367 392.34 173.687 cv
393.022 177.271 li
396.627 177.836 li
398.062 178.062 399.594 178.639 401.18 179.555 cv
409.834 184.551 417.144 197.214 417.144 207.205 cv
417.144 210.945 416.108 213.689 414.299 214.733 cv
412.493 215.775 409.599 215.302 406.36 213.433 cv
303.292 153.926 li
291.301 147.004 281.172 129.459 281.172 115.614 cv
281.172 110.181 282.774 106.042 285.568 104.257 cv
286.717 103.524 288.108 103.158 289.675 103.158 cv
291.584 103.158 293.754 103.698 296.074 104.776 cv
cp
level3{
gsave
clp
[-117.202 -87.9013 87.9013 -117.202 417.439 202.869 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-117.202 -87.9013 87.9013 -117.202 417.439 202.869 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
347.514 169.372 mo
350.233 168.007 li
347.556 165.98 li
347.514 169.372 li
cp
.657221 .328313 0 0 cmyk
f
339.348 132.644 mo
341.988 131.31 li
342.036 132.691 li
339.348 132.644 li
cp
f
355.27 160.786 mo
358.025 159.402 li
352.723 154.359 li
355.27 160.786 li
cp
f
349.437 167.92 mo
336.565 160.338 li
335.912 159.953 335.383 158.985 335.386 158.174 cv
335.428 143.272 li
350.667 152.246 li
350.625 167.149 li
350.623 167.959 350.09 168.305 349.437 167.92 cv
cp
f
341.96 131.325 mo
328.057 140.272 li
327.466 140.652 327.944 142.067 328.839 142.595 cv
343.039 150.957 li
357.238 159.321 li
358.133 159.848 358.617 158.998 358.031 157.926 cv
344.225 132.66 li
343.629 131.569 342.56 130.94 341.96 131.325 cv
cp
f
346.677 169.31 mo
333.804 161.729 li
333.151 161.344 332.624 160.374 332.626 159.564 cv
332.668 144.661 li
347.907 153.636 li
347.864 168.539 li
347.862 169.35 347.331 169.695 346.677 169.31 cv
cp
.147219 .0154116 0 0 cmyk
f
339.2 132.716 mo
325.297 141.662 li
324.707 142.042 325.183 143.457 326.079 143.985 cv
340.278 152.347 li
354.477 160.71 li
355.374 161.238 355.857 160.388 355.27 159.316 cv
341.464 134.05 li
340.869 132.958 339.8 132.329 339.2 132.716 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (banner_on_blue_bg_15.eps)
%%CreationDate: 1/17/2019 4:25 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",+G@0+GdsqA2cR81t\MR3'e-i&p(F>/4!\'I*N,?AHfYf([q7ZW;B!uA!bI/PUCidb="`(O"1->)uZF`&5Pe+b-UX_@UFoPSp
%ke:I@<cua^$AND"nC=i#.t??an[.tdfcS=>e3)3Sr,0o$ICr)LB!L7_k"<*H4DAsCgV%L<g$b9>m;B,B<[e!JFUBd:LN'(jpoE(c
%GQ0:[g9pc3g_4MXHXWu2%(j3:g7[@<2>Y_UURU07i@ZMY^[p>A48&<OdG0KRRuPZ+\DF,6mN2>3di8dhk3u=jCK,cQf/'fmCB^j(
%>/"e9nATBqh7)U+#/@tj?c2"?<^(qd*1pNkq<V8hHs6#RIs,+gIG4JEnGAR,plo18@J/GjT%84q6*&akH9`2fXh_nBV0PlV[KilW
%Kd[ab*S`8T&U+Vd:@XZ7h;o>-\f#8)'DkGsj:<H:lM*Td2Ymlt)[3QUZ0,qA=7@(3bM[%;bD+1E^Hire!<08jQ)%jQF\beJ^#T)p
%#Qo##D4[9+CP*t]P[Qg8Rq6X`Ru=b9r[)LdqI$,_BgtrY.#W"J71X<X/?>^PoUBRl32lb`L`2aI>Ksq7$;[/!7^L-l0'Eaf>5n]a
%E\ut]:#eIQ)7H$J\"2(M)JIK94r`2lh+"`qW/BIR[VJEHC3S,gc`p^?*B"-VS%@u1NpKrcP>?Ha4F(91ea2rtJc=N,dq37%qi3.`
%h+8Umj&._)K'o(N_7+89rji7d6R<.<0U@<%Lsg!4Do954eS?263btc;OGdW4I*+S9[2RGOEK,RjhP_G`:O2cq`N'B+*t4SY;1IES
%/&-m4d^8"l*WD#RUZ'=DVq/`11VA;Es05Iu-Ieqk)q:OQ/R-h7FT*_RILTsOC[fY,n_J3Sh=pHQ>Sb)C-@VC1?8YHiC7=L((t.g<
%2TNXMNe;gA%VBc%biUln-joWqbiASfa+o.d]C05fhoBR.%GrmE\W#4aA\>EU`[g.+jp=Df)MX8>[tc,=#X`bKX#-k4WtB\*]8F(T
%l_Xutis026G2YMp_fgmfZ>8)@I)eA%."%r$Msat3A%V4Ns2%7a3u5drM\V52_KT`VI_hY]?2.CMVlU)i%@`+@QmW=42_dp(H.LHG
%03MB841gccSi)$uT@JrbT.2LK8n;B10H7G4hm"RfOK@R1)BUs:K%[Af@\d/YYa_nWpl9i4!uW-;40LdGK^Y9;gPG<70H%F*c=JlK
%B*qh8apUfS6cZ4JqAuuJc4bWD>0e*PQ"O*,:M+0r@:NHY5Kn`h'Jt[VUt]%qfk"tE^10&jle"\X0C3:ua#r!>\6VqAQq=CVfJ=A@
%$Z["N,Nt.;cU`d&KpX,pCg$55qQ[bI:M-.fPnsNIg;g4Sfu3JbnZ2_6Sc.T6B+pP-2B."o6*,m(r\7<2Aj<m4DATW<RV/A$U3XO&
%?-IkU'']+GR`*F27U,M-1`BIDd@GB+e0Uj#U<;K;XC-4PY&!Y?5<5doq*2c)Q_I:Lca)3\d3ner\(`h<.JdTT>aPC0IBn?oa8Ycp
%q/h\t$NbK#qIKUu-2)QTao9-DPm[C;qIKW+<VCY/ao6#F+6W5TLA9'6Qi/N8@\;:B_^\l6&:3Ma_<pErD8C/Rhu(Tg.);`kRIl?F
%TC^W`oBAn*E#3p!;@VF#5CIe]mc&0b09,k9c_VPi$bh%g#4CKC^,uLAn[JOb`dQS(;@VF#hnCWDk>lHW%PIJ>9/LSgkb%ruL`N#_
%l'#92U5XHkM5-^6FM)"7Sd!C/NJSAlGrg%V7C,A/',_A$grCGiLSG@H<NAaZ2F9s+D0f4grBZVnbL;(THGL!0;SVFTkk9(W5.gdK
%KHm(+!@&^F^^(c4=JDfRN5+MZQYjT>c`J,Ee>Erp^iULhA3ohILW6&@U`85*lGH,I3_ql/A[9>lOrP4,i1[NJM##=FS:-1d7PC22
%Tt!:0gf[k%ci)6tOAc@02./;WGP7#EieWEJi\(g:><"c?NW%p=1QK%bS!`udKlAg`@E95D2_j%Gj]2JXI/"]%X;J'8HFDNHM/bI3
%Uc+mFOS&\Sc"84"`kI<*Bf^Ef-844Mm"MoZA_Df6>t:[U@EZMAl<0p0r*<Q/5&kOu(CKu0UoTC8N1]JL*K9+OJcaTgX5=bPB&Al^
%Mb7L6UK](o!.2;2Jj2H=JJX!63#qH6%BpXkS`VUqacSr<`_Y[mR>_[Ad'D4A2#jQB6&:I,T8V%4cR9I@:SIq_Ff^0Kd]o2M2o>#u
%B@?7ao@S1T2@<"unR)Si:Lrjbo(3bt80'%nm;S;g;_>R$Ipe4t?)5D'Bkl'*ijX"n08GFi6>U4\KV9OJn#R>XDo=70++EoQM1S!E
%-U@fReg(DmO`Ahsc"&O`oel8_C)6AJPC8;hAkg/\:G\$Y(:s]tCuO#F(6MUGg-,QA/l"dFr@F5)12uLY-@Sb)-4&hrXn)5Ii1^`+
%2V(/Bk*chqDDf?],4bNo-bCBe%\G-_!+FUEKW]r!;%=J`ZC"&C0C^uKP4+7AVDDgWSc-]h;ZP3m^fc`.LbLM3*b+/j>QO9P&p>V^
%c9TO>(S>PR6Aq2K2BiNXMCbMc4_<Cd>DW&*cM9;'O;R^OINV*7M1DpkHXcQ#.RP$0l1ShW.WIV>O/C,L"Am.k7].P0"bI=#)a[Zr
%[`]W&d8)"J4=<h+_h^3*DM#r<NP-1R-\rp;$"4[h.77!dg@Os#1:'nK)CDo5,Vo(HW=c0f*Jkj8$(q-LKS:ZtSj&9*NTCAo'P_uR
%)2s!_o(hj"p<tF`n<]ce.WG;[540[7Y\ZY,,r&hq#&/`k`H>\76D4cNj,bgFlq!oDEHEp0r?",QU2ceP?XgdF*\d^(3@'38]S-Iq
%n8C]pCpIFZM,oDSmAZn5][R3cCQWF[<^&VAb$[@L@1p`$j^KE)0FQra6G&2rRQ."cOCfX-3)Ve"1,9!2S#(1,5]p+4T^\k?<d=1;
%:F7"g6sY)t9-GaLe,$>pYspUl`:#mL4&`>nah^I18c4fm*T,CH<Y<"VJ$H/G6J%Es^k?]?\!<s>QVt4jiNMH,`q[BB?HEq`.:)'I
%AQi>on:[AV\W&(!%*>$%7$'.?F](8;Igiq#o*>rZUfo&.,*TE2L_9QsA?`cr>NJaCi1.5L]WN6=96:cO"@`UhJHH_Q&jd-bjZ8k-
%7``ejN,??hT;-.ZaG/TDO=2N="RmI6$eb72?l+DO:uNp/V$_;P,l!Z)::>a.V&k4oW0AV;Cgn14$1T-S>UUjh_P2ti7M3RUF5k.=
%$*/XRil6`cOuS*=0L7UGfnZ.9q^Mb=]ElV3K#gt.ZV:b$"=aa`2-&d%[2fK214:9DKMRth+Bq^K?ri?GiZZc=Kp]t&p2l?m)H1Y%
%U5&Z%OdVueZqE_mM>o'D-38nCp^gp:`)i<\7.^^Bbc6n4hc>H;'[Y(TmoE:&$N`UhCNrE>,rtfX1,;Y@(=IZ/grp\U#7`.F'd?IA
%4Hq?o/`gfeeZCSSRtuq11?JdLUsTPp#=BH*oPefaM,De*qS3PMf=CF&)>TY-:oPR8bZX%=01<rR;E$u/*Fk7C=G%L-%D['YS.\dA
%p)Kj"eL.3#=R?+m?!tk.@$qoN\?%Mh+I\%K8l\1k9E@R9ZAjBl@i.#e,Atba.H'A+q(nIfYf^GQA#N;HF?p#-<A74)Yhd94!UECE
%;Un7#JgP==70Ue$1gm+6X0[faH!Hb75<.G9_q9S)*9!5!1a('!QCPaQR(t=_Xpf,LMW3kT\S@V(lD,APZV'f]-!AadcM'-M*Z#44
%E^S!Ca-e/.K/7`t]L?phEn#*?L_3CU#+tQ'+#j`q/Q&5BU^:d,*QHcgM7@RB8qXE;<:Xrs)%6b''qF_nA=FhSa4MN,qon;u?qd1+
%%p^Q+J`;D%n7WNGa<Y':)m/aNbkJ+'@][_oBd$HWH<`kD6"<,7rbe'U5[Z4?8CjKk75R;FM*r0HB13f'(@.5*SbGXq7!*2*cTCjR
%a<inhAWI*q-]p"G$)g:6Ob)lG$UXrY3"%#c&PaVL76i(>nY9W_>Ql8j7AM.c/9n1i0q,mRmXq*!)J9u_X=qPD*hOF(4CGsQCc=iY
%0QSIK'LKQ&I_a?"`(cV78Mk"CPqY'aR&=BpRQ;b&Z;]o_%*9iq=YXcNr)9]i6lQR5OqNZ;-!k1kaOHTG7E/$(Fp_k$rhX'55rN>d
%AL^6-I(2^jOX(D01n(`j4tp/*_%q9sm?0SFpiKrLj:9]QHUY[W3g#.5c:tiXCW&9Qom13[9kP:*)Z,J(UP^YOFLXbn+Y2+e55D"%
%ROffS&YDVpN\>'\1O;<*7`^J.`"LNf=NFY6-L!4`kJj1Bfge4N\e$4U,ZQPq]S8&N5jFCu!>[C!BU5<L^umEh2S[,_*r4V\qcOLf
%'10+oOse;<<K&M7KU<V>io4F!]RD$5Nd*lqi0];tmt_G^55'41DtfX[&>VR`(=T8IAZ6Y7Tg(bNQ0/bmB0_`%O5S+H!mN_de"#)&
%iK1?9R#jD=1"!34<%0RY7Ne(NFE7_aKEDFP\?O"".R-Q"PD;#r(--"#b8HZ=[P9EEPAtc=bQsie#RkCP,$)g8(,ea-RG/=D88p88
%">fSkE??oZKkZhONH*942PV$RL1.#6/1(Ip&R%Rd#aS"%j:Phq6C%n.+=so%82,?4BS7'G4hk`-N"B]d-I+L:dH;c$<.G(/aZ:VM
%T=#c_R#=LONMEat].aqj:.>KX(ZNREHoF'_5aLE7NoXVP6;S6&nV"M2FlX2_Ylq6llc<^*(Qj!8Yr)`EUC]:,#fLk%2E@5I.$t8J
%#pcL*ENU?MfesMj9^G9j;@j0k3T?<$c'$UJ<^+4Qdmj@BW)Bin-Joi@*JiCmp_lN066NSK"[lbIL"e(o?^Oo_ObolkabgeG5pch9
%_!J"P'B>Z0M,^P?H,_u\fa-BS354Wr-I$1L*:ktOd*]Do!M_UL/=1%%i<s+]5+=mW&\.F.F*M4?024lQj4nB`D*L7kQq0,//J]=V
%aZ299/3m2FS0rk"Ap#rM:BfIFh@Rmt^0#BF<<e,QOffN?ngl>DO7cV1<k9b;CN_us0(1'9["Wn:R"E/LW9)JGM(l(cj9oTC^0mjD
%&L5p[R1_7]/C)Y^jG5Y:(rD4:$]S^8ZXjrcjdopp,o9%,c4pLY,UP.=%@ln:)pEVY'8HA4kP]0?`XkZJ6YT@(EO"S_,,,)40p6(K
%#PLL:Ki%ACU^,Rd*G2LApd,iA$&r%[KQ0S>$\Rc)CmK&aA[)g>#d1Ddod%L&fYlEfE1on&01:II72hjerYoHR9b(FPL4Um6iru/9
%CaNL\@:A:Yjon4Hif&[<QWX:-CGi+%N)Y2um"/0L5Q`jqR_n7@A4TJN,l:so%Lc@(aGOsVN2kg"6OFu#^LG?8W"cGfX<s(Nq8RjJ
%V\Ber'KcOna9as1=5!%I&W:n6!8q>b7f<!+Z^ch(-N/B*lp>QS'G5_O`Mc1^>*us.jf*?[--/[Ubnu97>6Kd/a^Hro88\6L`r6BW
%,C"`"JC64dL+0]EoP'.dKmppcjpG<S+>8]j&]rW]_oi4fMj2sp3?.^T,oSP5gVW>'?NbdkEM4!>b,8]9(WD6&:Daa8X-qg3ZdrQM
%C<!ZJaQSh8H;*:![$XCR&P\&p<]lCg.[(^GMV6]9dU$Y1Jb\V),0ifl:fZhK&/Yb*7?u3C,Z8@hX8LYkriBXoTM:\f7LW')4iC#K
%50FVE8j@a*;lDoXMb/Yi$lJ"`a@9U'a[&QT%q2)h?EpDhZVc]l'B8HpFtolC;X%YFllnGLj6/d;.p#j.`S'C$>XW13<p@$h2rh!f
%#'5H6iaae3[`$YD/kroo%+5&d=Cu/gTodMeEgb/?POa.U=Jn90,13!/gs85Dj6!`&"%dfp!OE*AN=dBB]23D`='QYL>bm($b3t5H
%-.C=48LP7YRR2/34mn[#p?Z:=JRl)0:LC,Q]AVHD9B2W&l,tl%(Ou<[%GV+OIAmG=U2Q+jYUYMjg["Fc*`bVA?$45S$/_\))S!+<
%s'"i^i%YYMY<Ue7J%O<LG7XN"kRY85di8clZ1q%?O+,`.fnCAK*B[K_ar`:i2/dEF4bS_hHJRQEB'5h6jc>\"dG8^VT!pc*!kVR-
%X1&HeT1rVgCt^4_\^"j:dG\ZP$\#SCjhPdmI(CpF!;C:fR^M?aP%(P9H@*euGE//FqU'4ERh]qGVn[#u#Mi_PJ'CIAec'dfK:ZqY
%cdCDRT7t&5n6?@(gBLt;YR?c?0BgfC(B/0gn$]/CPV&MoV/g"Vee=e[pX5\n1X#`^joKQl<5<-F1K](0?EP'oc.9-C(2j>'3hkf>
%!\:>*q:TS.:\"7^fIRciDV$qWShd8-J,Z'Z1N]d8N`#pT!#kr3OGp%Hd@]o=X@RF%+]Fr$^&BI>;X<MeKUA2o\Wl>U[D>_6e8BFJ
%rSR&ah.8NCYMc<1nm_neLFTPVAX\gt:A2<e<rXG6M0?PhW<QBki/YWdM^GLKMLr#g2[[^GcrnWW*ZHcrKkQKDW<UOsD7'(V[Y>f-
%lO@%jG&uhJJ'cD-K&p1Jh)aoQ:6/TO6E)p1*u/t2h=_9RgJA/N&=ofi%?'fd0eU$[85?GbLTO#$lI%qsoqgq_D)2gRT\8YDl7f6,
%@7q%c@W7?@OVWrPK[p:>!NXRs[41[Lg!UoX26Oc.TYYA8"m4&Hce%GM=ij.sJg(m57t8.P/gtgDK*5Pe"C'n<k*Wq!4Nq2mK[TZ@
%04Qm81bDZG/\j2QK]U-74+Gi^\34ct:Q\7/cj-[J"8ZP@fGZRa8CQVT@0rpZ]7PkT9B"*b41hA+G#[s+<!.IXn?n.G=')U'@@DmJ
%7g7O@HF63MnG+!P`RX_iGJIEfGW)+?kIUT04.H6S6fUKr>R->*_j;[0_df)SUS)C!L"VbncjE79e@>(iV^m6Z\FPF69M$k5ptoC/
%q+;!e`#t17PfcH!?MMfDPnIFc91anL:r7\t-//RY)Fhl#;8VDaj?kC_.RU44WgZp\K;:jik[r#D.63K_k:k]9.R>Okq8949'mPF5
%BPY%o)j"HNd"soGmFn0!;ZLML;T5fmTcH0T,QfN*3B!G*jZ:*h3$h+,Vg@G8-Zh[VF*4FWFleZSe@1m3.G6J9^Hu"q`:tu\m(5fk
%nr8(lkaMsP*dq[n^'4om^@N%8.R=EK18GPrQaI0rWff\#e2;L8\u)eiP70u/]gEh!Rgk"#*TkeneNJ5(\dttEhFj*UoIB/AGZFE5
%Y8WiN)L0u!Ne]1e+i$>]2Q'EJ3YrUNn\1Ra^Ek=k*Eo;[5'<8Mc&hBT]]5n=h[TS1^/9Ipq)=s)PPS=Tm]BSiP*qJl=ONH;KiU$r
%arsP\SgouC^CmAnP#'2PjALSt<i.m6]AQri"6VjgPVQ)J;/?N;8fK-d1&*DPj?rKO`uLVQ2Y$k+*QXM-%Pa!I$E8(-%si&K:><X^
%(G6s\YQNf&JI.i?a8+\LIatVe`C^gYl2.(@q@<!&$[EBS5i(&)d&VI-%iC:-ncI/34O<[?6+YTeVGnJ'Jp;k[rE/WTjN?Q)AFj@%
%AFdZ`1<`08&`22WYCr.?Ph82YAC/G`J<E\7)I.8*3L#&4.Wf.8pbRd='HfkON&_hq1"Kg0/S0mopp/;$n\+Ju+(#pldC8(;s&CEo
%.'\r(as3l"90k-);1]EDR9Z."R;A9BSkPaN(4W%'PK"5o(9=P3`s,25,"="2Ff7,/;$3]u.$7F0;?6Bl<Of;8l4IdXMO"\WX.U2M
%gG_hG^1]PM9qP0B"]9$n$)ar"gCAZ5d^Mn43nMp_IqVpoSnYe1S&LWg=;0MB$pNK^>IqXGOY(m0,QQA/7A!2g]3M+e8,*hKkF^dH
%HtoVn_*W_L/fk<;1Icsc&d^meTEtU+5UrkP$q+tN!6T9fn(</<@(9%7'6R>aL>s6_#V11NRN01?\-NE2'JL,L/4dMaCR#3Q"b=H$
%M]jEWkfb6PAe8iI+bUQN\-C6,`-B@)$2"<3oJd=K7#7<L16dUp(ii"Q8`G]T'un^U9Ib)taq/9KJlYl&)b7H6.+h83bAfp%fFjFg
%n-f51'<XWC_iPA%*eo2))CffMKZOJ;`/p2'OVFH<5Zo]_/.8\J$1AH-dfh@6-k2>sh2)(\kYC&!kR!JjYnT]d!^Wir16+9QB[feM
%eIaX-)$S1t8(8.X&p?jB#j8F9?+p\_Uri?:4jc@M[Kp<d#.MkPhaNm1+@4<ScKbLc#lr/56-*-@&?%sO)1jZnK%]Sm!qH<t+W`*6
%19,kl#t^W5@8<5DT56bjLo4Vn6T.!OPgEHb6rO@jLt%IVdNj3P'390gmn8o7Lu[tHJqXO<2%[&]ahVQqs5E<6Sq25616dSCJg!Y&
%'b!elAB@ZFpr<Ao!+$ejTgX,AL_Z)1A`G0t%0rfhjZ&tMUat3>>#l4eA*m/tUpc#c7C5D2T5'DZQM$5PLX/@N`fM'I1rO,;[4qf>
%O(R4`&!!Ih0F-k`Eo*M]`-A;tMul?R9GsPJ#^NFpe5)af"I>U/HH.5k322]e>LZfXDcBZCNkAsrIFKXMc2]-2d1p(AJ\<<E'A,ud
%21aR-1`%;tNqiY]\dB3P0Ob)H`f]@2ns$(0JQA[VgFVhRNi5I1?tK[%!rgJk-c:;oK8bOh`&!_f^CNN'P3.N&bo%`lo/?8_KEQ^m
%-^Q3AP#(GX6nH&Gg]Q_t@.VJ'9t"jSffUta'!Z[hnA+UWMKR%rOgTP+nM,3I/<@%tMc_!0E@#(1+YbfP9Pho8.H$%+b6jreWjM&*
%d]1@SH7mnD&?V6(\Q3_/1tqT)r'AC>Xa2&Hh1/Z#\38/gm^8`mI;BU:h[7S0*T3Ro@aQE_=Flm@qkes7,)Zd/>)@0\(-P/km0'k<
%3U1);$S?B_iA.]#./#\!?6KGQiAckNkSVl\ei@0,,O=,o>KoS'5hBDcj2n.9Zk&W_&0*-_TJ_`MG%!r>]L$+3U0V6(4ouXY__i(V
%8TY$#9HOl#Leml'6[FR-oahT-GEqf]&s0K-3;QlhqA`)r\\O.h4rJr7ROo".#76"oR=r(ILs/1N2'ibE2bbeX%Il5t9V<p>qAMn[
%.aV?:pNVGR],o=l"-eU&R_cD=.S+V0mSm\#bg87_A;eY`Ba,B3)-f/";N3<QUrEgX*Z<JSQtDO:bp6ef`f4[I@7V=P(q/TERKG+k
%n/NNP.e6jI)Ff,+dWO/-?48kA$pQLR*EO]lGB-Be".?I3_LK<O-<*Mjo8rDCMnki$-s@P2-C@4+IPD8(+T,]*0?a`a-J<!/h#,*K
%4_+"k-OgN\6WBm'U!j]a\qJ$+O2H)I-?ad*@K@90AQAY9JuQl+L%Jh'Js_g*.OV*s3ec\fjW`&LD7Y*%F3C_R`-_Wm.Ej-C_'a1m
%'=c75n<H5&.;U9R/-3"<`P`tF/#@o5`K1M0"S4,$jqNT?;$?2oN!i?+2Ao!nD@St]7mMe<Qcp!f8-Y%^%d9/I\5C'h6\:>mjMJlj
%c4tDi];\W><<uXkACb_@lqmgq#2MW0'XGj>Ll,XV^pZPk+,<NW!HSF-$d^*,T1@h48oOd(JB_AH#QUkM5Z$eT7pZ?%5.U-L^kWLh
%oof]0Zp(0)m$#5g'&Aur,5FJs$j[^RJ8i;$__%']KmKjmCsq;=*\pOn4^?/DON/Zo,;dk!f0FK,ig9qjZo:eGCVV"$[MB3U7uWfl
%+dJ<lOldt?^r/D=r`;@li5Q1#n06Sjal)5NPEU^O2K!Ul3S;]h/L=A'"AD."J1<>g'[Qh94g>fS*<JCJaQ+eI-'t*^"Ghr.Q-%9/
%)E6H-^Lg3<(KdD@C8%g(BddqnWoOUX$_^.Fc[;BLH.:$u5nD(QDNM?_-6G6o`WPdi=%o!qTSI:;+3p_dHGP%#K9qu2SGU'hpKRF,
%EG%/sq'M=WrSE(P>[UPq8')LaalN+Qpr#J6#5SqjjV$P6.SLtE0XF=i"XM;`+:_A';V[e<)O#h'M&DI=RUSt*W(7"'knc%uCbd#j
%C)FOV@CT4U.$4h4)OkV&T5&$^!ERAQ,@[ChBh"*sk!H>oJOV7*EgKe9P:Rj.(itYhg`_ET0MOUEb(Re@N</<b$&Js.(*To>FD1Lj
%HT<'m0h8*+?5;nFoU-(#FK\7gb`['V7SZWEEFK9f)FR[B7Vj&JAU"s;C*`.F`6'g8oIM\LO&T[`A?QZDNs$RmoH*78#rF<K$Zmj*
%8+Ru;5r]5/!r"6:#GH+F#mZr=X@\29FJT9kRW+ogmP@q)\d^J=*+t#k1m:\`MPLC60MOT$Kr`^li$qHBQ88*(L>SEBe.;m,AjiT/
%:/d\C*^>:uOdKIJHKHIhfKO>@1Q5Zf/O,?h`gl2T2L!4X_!'&hg-b-=oHtcMJ7L@S&l?dkeK$L)E?;uE&'2T;KujV-!#L2MJ0U[o
%2o'gm@o1m!Mje/0$9J3H6C>2hj)/U*a3Z]id+MJ3>bGDri<o#)/H"L8R8ALs(I:[5X\Z]/aS[jsDoS5sQS^fregk]75`E/j0j_0E
%1A`Z0gnMbgfP/_m.jm@a'8JE#JAata`5d6;%Zi+HNs^^QL<qJcP/=1q!HFg",;`sCd]k3jacf'&U^1Z]VB[69`,q7L\EO;NXiHTe
%%*[\-U<#IX&NUDh\OVn'*MZ2].!(/a=/^4n<i#%[3',0`.?,uI'4G];dRF@4*bED;lr]Juj(FbCiIWEm3>7ICM+,ZCEAKZSIoig+
%R_BH-KsN7k0a?M:XFqp3+F;olgTh@*(oOWNH-FnM=Ne18qj:iIgE7PS43`d>S+>^]/rU[gXr8OiX(Mq9@0&S-$J&Wo3N`e#!?;(c
%&djH:rt7nPO-kp-+?b?%4XT88XQQX)S_S[+A@mlX+"s>)mrsWa$*8r-'N%+a8q)hs]aM.&6jA@TQK1*d>a4A'TjO&@Lkdk+`k^f*
%N:odp>>,fr$tdqSG2XU>$_V-EoFNl\VRXEG<<=Zs1-bOrQ:!rA14l8pYo=`=-X/8N?s8:q8nH;,9%#+r&JI$XTq\TZ`C-@W<$K<2
%-cORYAJEh&WS8,,Wn=iWF7H4F5*66qpmgOSL+KmReQn6*4tL=D+;L3CX"^q3'JG%(2i<8"nIC[2)NQulOTrq'."P8Ap^q<)Z*kg:
%X^uJm(<(PY1%>orjh8NaO<TFP-Ud;P(J$0>dh^?`AZe6uAb<Bd]bZa^2X-EcLq0D()aCW^/%T@uqi'd3O<XX%eNb?"P\Zs0.jR""
%8/E#p.+:\]=DU]$@l(gJVKcpDHj2e+iIF0\%989X)7_n)IoWo.$2Q/Tmunn,E?3V1HtHWEQ("f$AS"t3'GrQO_08cMBq:?c#)u"O
%"I.i=O>9MM-aBN,XXK@*F:du0a7Grd7'fqAK;hnUCrd*">Z>Ta--f<Qkqa*%H60#O#O:E%H?l/i>)@Nt?66&3#O:E%H?l1?iW\Tb
%1Choeno=h'D?.cf+LqLu2h9rnOG,QB\2+nIDGogM&K39[ciE$gF:qas2gQGo142X&OO,,fJ;EoLJJ-Q*3JK&*9_KG*;UCfrOpi%k
%UlfUfQ3#JBQ_['=<TKCG;Ns:uN7fT^.9a[Mq?:OJ-n&6"4RXFe9UtraH`2alU*^6&XUF47UDZ&Z*cZ\`4@1LAr>@=oQ.7>o:fI:%
%4*n,5V,G5_Q/+MQ1,lId4%,lo3>pifOBq%#I8Fk-2C[5W9WlsfUbTmB.SMTYLat*@,(\f)_Pf$)OMSnskRHkb<:`F/Am!D(E*RGB
%b+23qgq(^SB(7!=6TT=WWN7Z0K?rKY$gSL=.t_441_f3qP.7\dUQkfmShO,`iNJ".0b=m6VM%MJaHM5Mppu-7^6N*WnLeA76tS(4
%<$u]#dfWJj(=f1uoGH?h)02t#%$6#s6,rdsoH&T;kn4NQn#fE.=@[qX+<![jPVtFc5DnT!7Rs^i<;VeH8Fc?`UY=Q"KgnBcrcUT6
%Lo7`+U17uFFOWf,c;,k63-N;ta3NmB/ggU`3Ob'XmL\90d`(;J]QD+&_eh-8%7F_k,,l]1<77-L7Z"Xb::!pUM2CbD8&F.Km)Oca
%Sb?Sd`1os#j!@Tr,SAah.AZ6E>U#RM0TL/[-^bU/"1?`P*\f:+r)`GqieF5M;3ELED^b/"Lhk$*-Hq6[`&ARS*8?7cR1c>/:HXGn
%pfeI)P6h'%?-+;R$KH0d=`0<l^61T"Z0?;SKY0mpDFtDXf,X;d:>eZoN8`if5)h4@%LtJD:CEEn$?EIq_cEPg$t(DCI^+S!AotMB
%=d8T+OSpAJj]m&XN6P6Fb==S*B&MAhK4t=Y\s`h[a`*8J((KA=+@cEI&S)>1Ycl.4,.)2ej(:!.5tQTh')DnrK!6OT9*4^uE?HcS
%H'eF)9ECM?=;'0s>5uAST17!/UW%kBKnCSQ>hnKjiR/,E83el/li)(W(C3:H/^-&59GAp&d.o"taoqRCK'#"CB'eM97pPs.lSM<6
%VoM,"/\*.Mj3+`#Zo!^0rho'e.hkH5TBSRf]o)HO,rR(hQc=B9<<!QG'e$=2p%Y>D8+lAMhOV/Xa5t#Tm_8dGV0[$HQUZ:,(44kZ
%`Y)^i'K>Ob^Hao@mWB<&faPJ'3g01mMfpdI>umXMW@2hK66MUm3.1HTku0iKB$(/nmLbOc]0%F*&ns17,`37TAY]QK1FX#N;_$*[
%)A',H;4_'22&CFWZCH""=!9"limAYc=j1`gPT)0"JK'<cR8Ra8$K;@a'FW?aAa(D<W)'M'[q-16.r^`p]*jFM\K-nlYT``R=1h._
%X3pQjobD.'2R_.F%RU>#T$Ful9\-$8)UE^[.@c44FOV2L2i0KZ/p@^bC__3[rblG]D/ReAR]Wg!o%cM#h*,F'A'S%G^=u/lgIEFE
%m:-`Oqlj\F8-d:1LmO?>jZnZ'[UcbNVSjsNPasHI)68]]99VD]Q##>UUp:o:XH1;/,[uu_o@]Bn'%+hCQ#fqO-96o3PGjYc6#Kin
%-=`&`6l?q+b#i&sMKILLHShP:(t7m]Nj:<*Zkn?L&mnm8\8kQdAAG[*B,eah;8lDNLDu-rNlMd171dY@@30!M&h?(&3nQtk#O=.F
%7)T;1n\DE^i7MZ+1]$k7$.Q%R]b]KV-b3T9\mp?'B7bn/cG^uR6RAHc*ma/obt:lDH)$a.O<&%TYC7[E=,l#FQ)NMLZn;N?V+'T;
%g3@?hDR*l?XAuo.,I+`qNQZ)],&o4!4\s)V`hRJtT8N-9EutbH5hh+6hV'CjX\m;ZHDI[MKKtACZ*dH$UdWU6M(%(6`6e''g9_.>
%Gl2A5H8Z?qX2N9B`oj*oZfC%VPM<4;7`CBDB$>#-Emk.*U!4c"2(IjLgQp/2)L"Bd@`B@Q6[@$2o.7u"9LT_Gb3F,%X^:0?V7H`N
%O^SJq@eGq(f;5/J^>=\dEp8sC+c8lCN+3j%n1ro+/V+k8[7NZ#D3E);7if<)aW\im`GJ\0)W\V,<<Y1CA!eE;;2+S`=!7Ta].uAq
%.>\Yd<CLOf"_IfN(bnu$?SNgUOaBJJ*%Eq+b]h(nOVH\!8a_cF11+3tPeE6I`4,P[8Zj7;PO`$U8l^uKj.uVkA:5e]SpY_Rh"Xe_
%H-VJ?)3sB!d_$9Xk&FP,XJ5fAQmPaqEn-X1`W&AP*FJ8u9j5S<\8Z_a-EG1gC.X]@EG:A*N2oM7)-MRdq;F]J#FFeVP.Fgfn]T-C
%_E10pUn<?oQR-VXD`aP)0KBSo9#t^T!:WDX^=['h5QoCdU?tGcq7g.`Ig:$s1\T%%J]Zh[E?8"HHD_qt<I?SUK343ldueoNCuQa9
%[t8>69loS;=4&p4VK?Woo:2<dVQtXt3hIkU<b'Nk?*\Wi.:qL<0(iJPkX7%0Dfs4NWWs-YM^ol9\ak;g5%r%<0TV^pA`sp@qhhM)
%TQN2042P\^+L'KH<(mG&MSN7O&[nM?CmdC47$#3n\>;Rt^!bW$8o-A.A1\*sl`\E&+pH]mD$MG,3`oFl)ruS'[M$qni]CJ#1>9`G
%j)%7',^):>>.>8f_<8&E=9cucmU@^C/6jWX$_4O'DKL#<TCu@XHk#ir^KVUG27a/'-c!soN`fN2FoV@Vd>U"][RN/PcHkn%cgAs&
%m9H)3)tJ&3o5d"bF$&u74.#Tp:<tC.VXD[flqUF-J*d).bF((/FAb$CeYSF3imZ?7P7a^e\rSh/l>UF3"NFD`^:SH?n*,e&6H2Vp
%qhfQ97TLG^\QRTS>R`FK;.[o(<ukmJKc$lR3M(rP0Dpn?(A6\X__I;YI<IFO+ugVK"B5nJ"?9D<clUp\S8Dse2DrsJbo4ND%B+0%
%-o)iDVQ=a%k&5NY6'WD),K"_Z^SBed3mFEq?fEk;*bM&`_sN,p4Gjl3+)AZgr$#VtA[Q9[iIQ=35k;hoour!J<X/tXLQO1Yo*6b`
%iBlfjL?$7=#8W@4F83`[Y)FRb;.[n=e4H,L,YokF[Q0.=.U[FEDMa_C'kefsf/Rg""-:KY"gJn:&P!.!=a@%Biq[39#";W_QME8,
%GjasZ=iUPJNVC>Om\-K2k*<WdB"\44R[&"r-1X4PcP[Z[@c[=/K'"IfB'jJY7Lk67@3&q2+@7tUbh6Cn?Zfp-To+G;8:o4Y)$89C
%2#unb)PLWh/9Abp.>MU_%Se.RC<!BEZ,"FXI:\Se6D+0@%ZY>NNE2tT;bF-1%#Pl8Oefh_,5%_`N@@\):0:,l.E>31@c/N_pE[m_
%HS=Zh1d+WDIHV!6YG=\Bj.9rT6'M&RXR%F4lmTe@WE9bkajgrK>c>k52#Wmib+>j4H!45%X3'Nd.^:%&m124A&3\tA<?]aR8rACn
%N!:Lg-dAgNZhQJV-Xp[S`CLj5Yb[WmQ$ns'`CLhbIf^nLdAe`\$WZ=p+K1un/2\6Z6PpB&#uU'"`"s'5fkDbHs&,8S7cMSt1qpua
%i%Tj:/RYGF!E`UpT)ddNTS7Y?cqdM:p9bg*]JCr+/h#*^=]/E+7P$i^j!$=cV[RpeAj6hVgMp$iS]2`W'fun_K;bb>5llJ)mZf4I
%rA'SL1;MET^J'MT"t8=SLPe`<JiQdA=dVm\AJdcU!Aj#'3F;gbZjI$TPK/tPfs^&'/NP$p=pP<'L<tu``bpocB>cIp4/L.3/GV*A
%9)cp.>qqH]3CT*8jV]ermM$H:Di7%ED8gd,d90d:+i%c`)IFOl.F.G"Pra668fc:.M+o2CF;0]t$GnU/O#BsZpStT+QXgGt`/hb,
%e!&8_EV3!SER^l1/IE=9Lmhq'iISR73[RR(;1uQHYQY:IDH/*)dGiQ.OR\=Z=n&*'Kp8%u-p`\PZnO'\(B0F-T@!Y2G^*">\AsM_
%i?f=*T/F8/AWtiipfJGf`eUY9[\4bK$$?rhcGS6/Z%!s^c/ZuW`HK`W%ehJoo4B'#-3M:GWDN2^Cfd0jj=UsW1+[kFD'@$N4V=Gp
%&c':9ODLf\!tiQ9MXZ$dX?T<>W3=DU6*0S4@7`1_o*(OcH5_o=9_m4\IN"Z7q_Je9GL=s%>hial1Q4r%Zero9ObPs<Of%U+Silee
%e/d8V(IS\dLI*'(#%'p*N7fiYpWK"p>dA"T(s<s\1$RS\,%LYlpYmu/hkl'fC65Z]V:$);No-n#61-C+Ot283Qlk]<80B#8Os04T
%d2HJL,_8`AM1ZD@,g!UL(9GaV88F*njY<!T$8]:=hca$g@pEu(Sk,W^_bq0h)(P_6]!TVF8]6eI2mLRO-R.lW-Ij"H4Wt;*Aq<u2
%]0cfmR-^skQ^Efg4;JH$Y%H?g,5uMNoGI,I6&FX7FJJiG;9rM&-V'p@-*$r(`>=:E:j+*V:O43VR3=(-Ue4'=AlJOf""o_KQqppL
%C/\1LeLJaWP?r+akOD7RA(q^?#dc>a5"N1C'q$5@89D)6Ek!Lac9)#U:IFZYLXJ=2>XQB_*qQiC"qVjMpa1m*?W,&:TBG;%,C7gW
%(*rUDa=?K'\"5SVh=Hh'1U\mi,GsRM%uP`FMJW=`4Xfka.*f7+`M2epY_]o$bX]=iG]-i6jBQE`T400S0[CFpO\P2p`R[&,OH.C8
%@rX/e8Y.D[Q:r^POArZa+QZ3(rMlgJ)qfG[:.1YpGVe';;bMs)X%\LX*4'2uMd;Q@IYR/;UY_AdM/&]"\nOBHglK\Vd5_9)kcf&E
%La+,a="]1%/S1hG`QT)VXGo7)M33?58(l:7ChH5(9C%,OAG*_PFa*]WIf891Pc>5Tb'fE^g94gG0I9meTWSubY6uc#K2d*4/bu.;
%E[)DJed37URF1gb+X2)!`6VP52[c+Eb!\&qa+InVoT[uH?\u%E;VD>#A%'n)XnP^hb0%@%SZ)__VsWNiZ\)P*GNMWd;XA7'n!P8A
%T<Y^+b+$,_:jsI#INE6Q*pS][jt-PokFq&$U#tO3k3&G`rB/TK3hQ%/Yrfj^=26d?cHW.94`<rXg:s$]+cIrTSs7[_on:^nVUQI#
%+G#?#==V@S+tM`7#6Jlo(bFA[6._D#&u,=<%%0eWpeD3EBsC3>8!Wkt4Cb\;,jlDD?/.r64-CpAKo[m<LD!+Bh=tH(\KG3J]5"Xg
%Ah;f(Crr=ZfN]Bbjaq^pmE5),EMubmjq*R4>_UqaQ>U&*\p^!)69R"UMJ>STZoR-A?qYE1EfUZ;%jYq"$ZD9C/Z/OuO%GU)!bhfa
%-K9$b7-#UVZKb"Q4Hu05.)%iE"?S_$4=@V6N%]_ocm-:#,D.#`_fEr!&fm`LOU"Wr'RMKnS.oEmDChf,dAtI(3m\hjp?Q\m#s#bK
%pgfg(??OVm08Mc<imKpITV%`H;j&&VQ:uaBnktX?9X.#:UC25)bB;j'G2l5>A\\:1,$S3i.o!)7`Or45<Ah+C/-cE-(+?\U0V.j@
%\7\L\j9-d_.;@Ko!FrSD8DPCrF;(@qAN)nkfo=<*C!)SXmNE2^,+5]DN%"HF)0f"VK._\j6t$m/i.W(q_1F=^)'C*>+[dFU%tY>n
%&>0Dk"@,MMimb)5\1]Qg-"HIr4Fn4T;O,C^13dAuGbb$hKRb"?4at\Rb@=]rnl"2aHJ*Q8XVP,&bK-A.NF5GqGR7js0XD@4=NGoZ
%_ApQjY>_pO[&!dSH*/S0])aj%7AlTCi_UEP1fJZf=7Q?4l."Z"DJ2a^g*&$;+;<)K&2p#LlW==&ZLu2!=:UC%:CSd6gPn>b;9/)k
%jh^S*K*";3`:N>5gt<.sqb^oY>q-f-=^tLMs*e*ldgTi9@e@`md3AlT`pd\Y0<dF-eJ,5,EYjY2?t?^C.qto?mhdBL*/,d0Gq+hU
%=7UT7G>q;4$+e,:FdS$^d()!81n@?$Y?h[LLdE^^OM3@cS'&lq[eN)'_V"!JA]_^hahh;CU+r)6BOML?YAq1'W7^bnd=Ig<j+WcU
%kBNT#ATJROIUqCrUkq$hg%Z:DJ*^.8oJ<SG=o.1#:=Y+f%-]`WC8(ouVR+Nl?#5eDb`W*^#ko0:(-ZX/A?ffbZ$NPiY)d.pA'pO\
%f#H^\=LK/DM=99aoC^&iaLYJb<NH7;id2[HE2!4L]i\B03cIsT93P;oA/)h4,@mlZ&sKoU3#ueq?^f9;/h%[Q"+?UQ1IAM7^W8CT
%_[R6%`jiER[5c1nN_/O]V,SF!K(`,cJopBgS?=S][2_nNFI\3ad()!8'V-g:ZeS)W-6a4^La=6SECa*$oq6<#CT*/('$Fq-0;)1/
%cU<Z%Wh)k+SBcgb4W;28&ZOikB-WN1)u"4u*Y,nQBmeNi8R@Ekh@2PH+.Aok:"I*LFge8(*$TtZ3iLV'`,>cNlp`Cu2G=Ho@M'P3
%2e*#3cUKZ^nYOiHB1?)c1tP[7CmCKuJk1fc<?&4)eBr/mShr3Z-.J1o6PEfh9e.a<R)t1:T6@#*i^j6:06J))b=('D*$/^\i^n8k
%,a$J6*G\%^)qEWi49juff;"eOmhNbuLQ(Lfl4U'Ph`F'I@)bj6gl_3-'$-ild0@K,$tmYk4LsWr5^:*hA:VZ/6inu;W>VfGjPda8
%5G'tt(W,6G=G,>.*,tB;I3PCKM)?R\!Zn-W:p7/-`Xpe-]-acb-Xo%[>;E241!sT,;-mg^roa];Ei"glMXqqKD#$NS29hO/n/dk6
%=18.sES$'C3h,^&2MG`_?0dL:7%>#tlbnBj6QTLU6?ZI5c=hI).1bjXck)>eX60u(9b4j9/]F`4G`l'Or3i:b1?`n/8FCL%j,Ul8
%3Cl*C",GN]6gV[P)Q#$40=2sZ0bUGN.*@/\`"7_$WSn/*+N7H$bs^Kf6GH>`56:c3_fm!=LSp:fPmlS.'s0ZWolCd1cK#2e-,n%f
%B'J>LJpLA4HE[5iQ[4XGp')aUr#+.lT\f2fD6<\(#Mkst,WH77S`fFOadO*fqMspCP4*^hms:VpHG;:f\bWE&q6'JfY4qappIi*`
%IG>8#>K-N\G.[Ln)$</\A[hP6bC7lk03/L+Ej\/Sc6Lg!U_66(Cg"p&MaE[C*\Z"fV6*!43LFWsp>1r>%T?u$iC:G.UL"7GJlo?J
%rYkFZ"N8/-ZsQ6:^^MuD1U^XZR93"9rfu,RouV/W&_,`X1h.2j&P&NL,nebL$K2h\Sd>_>5S8NL%!)5K*4Z>DOl9]&H1aj5-Fm])
%nd&8RWD["EaEXA!j<'L6W9G[mV^,=jLF50gfM5^i7o;e'p@rYiiHc<CG&jZ7]?*RB,ZDKW[$O1.*skS#N&\8$`0EQ35QcqrMY8'T
%M\4XY`,`?^kb$4Z4eBTh4DER@kipjmd$e->!<bk3&26'tlQ$][[qM3:-$NB9jp'a#juMJ>kb,S9"`D$U2d_-*YJ<j]0jfL$YJACa
%i8uP/o+ecn[fY0RnIf)VF:IYlb*LP,\mcA^V%Un38&0`e'H\j)cR*"SlB6G-N5g6W`g85aJtkKKK!MU#?ij/64ChK("Y(`nR6Z/j
%-ao42m+]f4Z^dPP_XRWDQ">U,nQQ=?NLd(p'0;:MS+-s;K_a&PKpPm:d7_R]F%79T`QXD,2@/Dq<@**!'g&G<MKTXRk@BVWr5XHh
%j(a:KW":itnRlTf8LpV3)C\i9'p@JiM?-p3V66*sl_S'Q3mcpHO<T1uR]-OU*UQH;n$Gm#pS#MJ('(!3#.R8<<jjE\5_L$]UCc`D
%ggHKQ->7ccb`M:L8Qu])cH]dl,2fQ3B&<,0IJ;YUgbqB21ZN%P:gV$,n1X@,LaV<4-C6X$[)o/hDb?LKNVEJMEc%8PfmDE>D"h,(
%6*#'Ojc>b+FA:B>`LV3K_H)$1KPn@S^DGJZY7E:X^[*kIoY&\Q%pIdaXnQVRV=h^J5:>h.>[4B?#//UeE7!t/0&2)<6*F?_k,BH1
%g5TFF6TL+BrQWV1\qk9W?`-W0\C045hQ.5[h-m2^m3m,W\Qu_["&J,#`p`\*CCg4m#Lo-MS^sGu-?H)._X^$a@_(sPWKk<^hIfd9
%5+B"VflX@BV?8JEgXE(0[aiIG8B`oo[V7[t2r[nn2Z-bF-B'0C[0clWY6i!%1,S!hffD56A8$h@\Cf(%]@@`<AS;P!G;!0[(QCj%
%dlX9[4F'pKe:'<^E'uST]Z,.Lm-RSe<j10u[^2'ra>c*_;Uk'tc.T;nRpiMrA(^.tZZ*iNrcpB(e(knK#5)sL9ke"-o'Nm>RHQ>j
%H_,mMCdSFdV`0[m276_qnDC4Q5,m,^+]<B*>.^";:[\)`jq"T>38PJS8!n'uoX3-gp?GAfn#&[XHBo=XC=)n41U_m-,J'et?>\'V
%AS=]#FjBTTgc[[bp03/ce)c0r6)r*"$J_gA%gqX5B",jMSX!u6\Rq1DG3<_fIm^Qc^a*sFDVggf"rgjNfI`\(GL3D,<+s&5[edOL
%[n'1G=7(%Y/m%G+>.(]EJurTakMBa4)+rb2dJn\f@5UkQ"_AD`=,hX;D>;k9MmgfXZltX._aU&/\!5;%2`a(Ib^Gl%LuWj,drm=$
%"hE2tZj*Y)=eJ6KFainSd6))b`\YmWSj.)C#*iU4_4]k[)`XA)RFEAn:OYl0Qp,EXr:<jn1UO9HBtPAU*2u]BP@\(Nlbeop]9Yn*
%a"ktXGRF;YTbVYghR*Etf&8]<Y/>t1o_-_b/0[SpS6%fLVsRNN!Nao,ob[*rL*f>lk@PCK0X^U/$7h#`JE<8%;ek^7CVMV]Vq:8G
%C;#Q1)jYPO:$OT3\mm%&*4rVbJ[Y9B<L?sfFcqTh/YKQ@Ahbnq.a=Tf)V-:"F\0hA?faLcT,uN8Ja1#-*fC/ed:f#O3O@:/0$8Y5
%Uc.T6>I@4?I&e$P#FsID[d^0/N!-TQe,COCIWK4"?'tIp%EJ"<hrJFnA&qn3/s*nEFIZq%+4"r`B/"WQO)&C0%Jh&EcO=YEZa@PR
%lu<m*>`Z;/=rIOSn1sNM]Q`=GA$+?$*1\nk=V/d)b/b"(i'/_;QdHCb`j%\M,b4%b^1d3MS(O/#o\d#Yj?DY[LRe7'BC/(3Yf&-f
%+U_\@qiGk@Epc<?IE3["d>MgSlPZP`deJgLCL#%j@a4kk\_fC@)is#m\_fC@)_Z^`/GC+0@Idb,^MsGc<hjeV0^LaAh$uu::)4`e
%\RTOH/H^bIp's>8g]?W%"l[D+c`:?dRdG:mn*,gIj#U/\YZgM(1RZOP2p=uJb0'7[Na"(/K(H]FQUlLM?Qu2.\OF&_/@U]mP_CY%
%LVEt(1-7FY/[1Y%iK<fN?F/<f#:\80LFLh9m&pA)Fkb0WHEZ"(n+LLeZ+dp,I[8a7Er/uDnXS@[('cBN)8$!p2Z/ifHD]boS"0.,
%[&Nc6f#]Vpej2(SSBWmU()\<fBA:2chF1Iu'TM8q[4N]Xl^-/%!\!.CRoD"snY(HdX972D?.eFp3J@KEQrCZZB/%8ahD.;!/pd]$
%s."\0FJ]73\)`:1h!gIG??3s,J&Ccmbq.*._Q>M&J&r-Q\`"hn]]=g6h!jm,2n[?F*aP?sT7o!Bm;RblW@^Z-D-?:pC_@+o@C^JA
%<a</VBV(`.\MpV2ZH9nVDci-5Z\M!,YTh7Mj;V,N;BX]Q9?#)_GPe5mXeOViCtDj#mHqH'>[YCRke](3bpaHhF&K=[?9i,c]=DaJ
%pDE#(3*i[mSB`gkq$p0q%SlU>e,S',8%-=E0QPgS7_%'4mD)06@[eM!*_2O45&nmnRr=,DNl,5eoJOjh)clW)E#NQ$7P+C]YkI0>
%%lR@-o(-7CT!>qt?<eOe>JBLD'G32uW4DQT?=_sqN@Zib0h3CPV%$SC6=Z$hiK>`akT1`9Rff/i]k/L!>f5!o0%RPU_n9;MC<p@q
%Xb1f+gL(WVC]!L&rHQ#kId3NUlE.n+26E5Phu(X*.Z<DX(YrX2XC%EAPd*Bp16"UG]VV,ekMaubi(h?c?]-O104"M/V+(^gUKXGi
%GPQ:L[S%]$ORMGCE3%=b50C6+EbX-tk?Id7YftA$oUD7B=u9sO>f+HXAd0E_Cl>.PE'DH6_5Dui/Thr>gWB!2EoNW_Jda9rIQJDo
%eP^=pF,'XHreoOujIg0H5Z*PuAmUUI"o1,$S$*s\/bjAg6+O8t]L.md+CC'rEqp(5`E4CPY971W\Tm@?alUBZZ%QW$Jp];+A%mPB
%0na&NJioBZM`XE.=kU<D(?G&jO_15=o,QDhXX%8\Ogu=+\3/ekTs[upMRZmrJnOW@FbV9Il@[g:9`)B$RHN,!h-k5OfPYl<*.b@O
%?KRuJ_'QQtlSl^fo>_C\T4PQ>,6,=0f'2T2>(cZ2=(6!V&a%hb[5/D)/GHdqGL3D,KP8-e[^'#`fR6\&-B"Lo.%*-B(7UNR"c]Fe
%Dt97ZA%"4L?(?U'0"gCo!dFAd7&_a_P<Z$4E>eK3=XGaebB[DfC=m"%M9ETSa(5:W(V_/3So\T0pW-IM%%Ce/AjG8^^IuSc=deF#
%S6,a=HJ!Mgr[$E3i]P,b"MU$T@*aP!6'j4>%UBB3EN&805%_%[5m5.X99>GO:7mO2(7m%Tc,m2YE7njNdKAdX,_;'.4rcD+@B4T<
%`ggU^$6+[-^6q9(^YO:(ec$E/4g3818mEt^=#fQrh^g&m.Co\bOH\AgOP,iZ,VqSrB$3SRV7?ecOG\Z`Jp2RL:B)H[#n.24o4MBK
%Yjb\SZf/9FLRjd[nA2&@^.::DIADi4KtITVG-9eoQX97pbDQ\3]V$2(LF4\:iCUW(%o'A)fgp@,;?loFff-[HchMms4Q(Eq,BH-d
%lM7N@bMj_f"+C2bJ\DLRYqA,mcSQ^SHJOc96CtL-O0c>6kd$\3._G:f7B_!jY%<GtXu.-"60i0L=VbS>T/!(f4D8jmD.<l8d&[[+
%=Zi$chK^t1Ml]g39g&A#2.QL8`UhEVQ1d0tV$70:)R@@F#HQ>@A=6WoqXA%JY%9?,`%oZ>=m]7f=j+%'C;&3$^Z]:Wgm+u4C/h>6
%GO8H9Z3*KVW:_oT?^>b^bl+>!Q=IsXlZ%ZdKMpXO$p6/^$rZDu:,:(XM_i:&qa.F.[R"CM<5%LMKT#Jo/<>u<2k<^A'J_-VGi1Ws
%>\7)[c-N7sYX@"o)ineo=U)oWVm5:*de5Gt)nG;BkeF>%D4VF/bb:F"S@d]>Qbc:5g#lUp0$*3\53Kr33Li^E`o`_b0h7[LbIKQL
%K>.B4'[+i,]iq0gb[USg)<V0X0AGWpNRe6ecB8;-(Z!s4;7G@EbhtG'3T&%@T9F?1$ses9^7=fVS8VOi+)j?s?pR_ob40;f&RBUA
%.:2"cC[G\i,ru,ISBlX$L3@'Q1U;\3bV:@h>9gFi9esb[8TZIU,EA5G%ZHPg(V;\W[i1Z0+630_'J/>":FuZbaEBi3Z7WRgqGm*Q
%@FqJ0D-6F)V_6*e[F%2*QZ'#[nKq3);ju;n*X:FBr5s3"29Rp3R_,XkG$blJJ>^3Da'!$t])4PR,uHWe+bkKqqriMI3otj4eEcdD
%buf)ZKUo(Wg$KIE`#.7b<dne+*YeEsJoorp_55mfi^,BF4SdBFD^^_iaJlNi5EPKRa'fhqjLd%!EF(Q4H@@($IoeT^UCqqi9CLut
%Q>"Z8,X7.W!c*q="6J9*SN6!"63E[B;.sKBesV;.bT2T'Tc+:fht'[(4B1?-!.95JfO\+00'4Roj\ZC$D.G9GE4%f\P3ZknY-uE_
%g5L5uS5XfjI:N)J4#/[&d2/FBq;RUCX]b)2-Q,sbjq`relT2RF@j.PMG6of==k\sA1_s-T?+)bc>;UAY`hJGdDUHNW)S&:H&M4p.
%D'A>VTsO3r)-Js>L[@(^]!L7/D*IKXbAZ^V%,5T3Qcmg>WB'tf91K1TBBbGq)@UuiQY9g-<n-](Z'OrkXMM:8#F+AU];E#0(-YM&
%SY)r:Js#3+BHeD1>BiM2I^2;Cn)aE&q=VE0+<fA2(8D2H^:/@3q/>JD)+&IeI;e!=?A:bge\/q#pFc.^jBUZe'u!r3b8%`riOdkP
%T?T:D7jS[1/W5B;j5624p\[^)V@0QfX^6bWj\*%-^7K+cZ7h(QQ9$SM=Z_rrCAFT"g6p8N8!cdHc9c%thU1;VOQ[QX50DR2]]gnY
%?LnGe^I69rMd7H<?N6%WEuEPj>QUM)T0[7!T(tO)rMD2^JhQZA/")-#d3hD<J:XQg"n$"hN6=!0[4M)3pB:KI4Fml%Z'IiJ/@dhu
%_nr!oehaSnHl,m"U0;qom%lrLq\dIiBd@>W`[nd#lqI[#;u*BCkqq-Vc$$Fbc/(4%bIlOFA8hXB]mZZbbZWY!>5conXkl0SFp9U7
%Vb8IZ[":i&Ofs)tlgup.Y?@NgaLKSjADu3f"uFcWYk=1u'UL!<@lY*CL65US6s[eGBO=FOS]0`0=UtI:`XT[<dFc=BYRH8dV.!e8
%)KXRB%*1-W%XQrp/9-$$D-g_?@42B:/97[N^Gb_Q"AYl(Ut04d#-FM#jD'p%?EMAcXOX2)LVKWS9Q+9#s4k\6*/IWYN*/%NA@^jQ
%N)$jGL&C6/iQ6%*oKd;DPg&`6<kHmrehV'W=0K$t0=k<[UJeDCX&3%)P1smrAqC^Zhn5CUC]@];Q(^2<(^@BS7VKVYcDsMA]k6kc
%)<T@5X52&:']5LgAl7m$:,5Q>HP]\79<]T*lD<.XoF`Q-oue&+P,0nV@_Pt(8<cfcYil`fcX8Y;\knXfjU+Gu2^-@S;&7)jSn2Lc
%Ms+=7=Hj6@E_0_;1(i'ra.cfG4A`ddYp``nPK0EYYpfX,[(2F+./JE9(*sV-=a7BHa.b+7U<[7G(5BS0el\/11q)m)lnZPSA808n
%bkbIgBpLKN-IZ(g@<Tn:/=67lX@s44q+*'oNZ6.t&/SN.H.LnOm:o2hrL#Rugn"08F"chJY%<i2=_rW3ZM2ZK*i:o`p,%-V=j`E$
%hKm1YB6$K9H]0Sp;<sR>d:MNnSC-GW/n]:Ak\^Nm]!b]-1aKu6he`4)mq&u7%AaK+T[d'AHO6I+eLO`#G^2p54EbSR4bWQ2[)4`k
%W^_3I=X`rtrM.5f>,QNL/G3#H!HjoUZ,!N.C[H<2OA,_HFgp+BhhUr7r@$durS*#MY7NN7?C_I;g6h_F$c^^.YG#UJYR7t=d0l/S
%4>!nC^<`qc]tr"P=1d.@g$l)lrOYFHiKRFN3o*OsG8q\Q#8^gqN7hp9S@4nBP?)p^Do*HHksGo0dJ7]&Ic4X<nEi=8p,B@Zn=oF:
%McOLrJW"GKedi3<H+O8<7.Q6=DH_`&f/'=*W9>,%iHPO.BY1_9^o->[T'#&L:"KjP@Mkt:?S(`d_11lA2o,(1kmdDHHP@r?/R!kp
%V&j+#\!FW,Sisdds!C0Zr_s5YB,<_OYriEkc-e]p]2nN?h6?.%VYf#fL?TX<I^*/(1B3&sBBdO4&%+62iDVDpY$kNkgq)o7p;L+]
%=_`!MD.?Gap![PTG<`^J;u#]?-@E)f%sYp7#;0*sI(/&<T<@eI4OqFY'cl0f1`(Mk[4DPshD%/`6W/,&h_O_bD?:^70=mk3N_a#D
%X?Hc"C:ugFon4OiHRL:O3ZQhU[@;e7P;R6)+'[c/^2)r^)IN6<26I.uiQTYjbBA/:Z$QqNor)H+hR0"8?(HD$T!`Cu=W4^JYqa@H
%e!3/+lY4&Ho%DP]Fr3de7ogG:Ir@#Cl%[ARG;t#pq?c8=0Wad?$XV.#!kOUbCUTpN-;IaSM)Za(?->,6N%_`%j[P17B7EnERtl`4
%'qRO@`t_2WFj#X<Y@p2oFM,Go2&hr=0fE^;9,uYor)aX8onHp`jImFBM<Y;!@+@p]Wkg)!#f?<mecW]tY[CTM!t0)W-mWQ!D4;TA
%T;&K6L<dM*E?IpG*R?IqW%9>($S4Ft/6<U!34`^34#B>!4?eCT/s\rsLPZ^NPbPcR(1UaYTS]rkh#`0RcDfQac67Ya1LUEk[6F8f
%/B,sFWf3,i"i^i%$DlF+-qVGCVN&RS-uo(A$<$@;BnmF5_rah8$nLToQtuuSP%Rn2a"(a&A^]Z3/Y/\PU+htF:mgPq$?L_sBMt<(
%2N8Mb>"D4Q83g>-CIf)8.*Zh<0T-:e,"_it"+N);nkC#(h/N2*>(S^SBJ%=Q%n8tYA.:C?0:N^Ab<g\[Ud<Bd<>Q^1KI`ur-c4;Z
%+7ku!!>CZY#L"k!U2e&(?If+9&:Jn%]I4GM`kp-sUT40Vk0V@,K0\5Nc+]4U#fTpfUF%">V%+;0D)7Knb;HP4+A&N3kpf[r05M9m
%"DAm71lSB=*ZJ6i9YTX$8+GeT)qYt30hq;;-AKgMOShPX%MW\FWK(.1e;>N'8,T/rlC)4N1e+q9`aG!Jq&8oVUG6)RKg]k=;#(]3
%H*6PH=96a'6>TDnEnIWE9q"X#reh4IoFSCaMqE[NfXg0!"D?JXDc0Rp^$C:,jm]U%,q=Zq8n2@!C`gTGMbSAGruls!)2'ha1@DuW
%4jLZeS;pX%F1F!A(6sQ*/P>Sr*Reus.IK!LPk,*;U01tr*7aOQ%>Kh1igN-BCqc9q4Lr8C_'X^YbOU`o1a9Z4J\()5)d-=4!SiHM
%6=(Z`K[I/;Kt8\NM@.`Nhkt'G5U)47fVo]J$V%uX2GLME'P63=cuh7$8n#M84dm*.2I+)X4mZQ/c)<=cFe(&l$.^9iAK-L@b^f#U
%pp8W?MY,@,h@30J$#\_><!38]HH"Hk)U5dB(^2YR8ba?n-(8CZN*C#!lS<_k]UT9AT?ei#"M%%(#DQ?=KXXBjf>D%%N#B_)Jhe5u
%im_B@0PHBd7c!.U&eiFLp![DU'Pibs!h#86.@ggA6d-?c!Jr2U7!["6A3C=\c+"A:*kk'2@hUI;U@GqMaE+2cZ]jTFTsG<J8oZYR
%RBl248^43F)<O2Cg2)E<f()MX,\^oVNpAFR&FeBh>gm;t:6I<YRr&^p;jkGi5[dg-m8B`a8Ias$2W!W!rnnbGlDU/l$9G*D=kD<F
%SR3cAh)6&AJ#^[8na!\4n>93soc^KEW72$uI5glfM]YcJ`]mrc/GMO$Dl$\[mj`q5dTQ3\'f2V_N,pK)fUM)j]<ShcZd[h/=mPb4
%V`Nu`1L?I64dEG>a8]E@Y1dgAZ)Q44arrE[ktZ;]AKNJ'Odc7*68UULDGlS"h5qbXVZmo59gmQ8'#j<``'hB+NP0.<h5]jT=NZZS
%a>1>J+8iH$KsdQ+f`L;A$mN`8eqa2ipLF<Whh@6W>/,fXB9]+*BX1S%^G0YMVJd@DDqF/m:$)Ajh[;^,9>J[Hm8j2VYjk`LGP.[>
%rsJMX1i)Ib%A+QM7+M(?+FJOd0oN1FMUSqE9jP9M.^:,@dXC"'>/',oD-+0``2P6/ET6S.Tl%;Q3j>IpA>\t;W@$"!j7@12E1g+<
%4/lN_h#X1.kKSXqX'R<orgm)Wd@1mU=:iM`_5a@"YgZ\_A,uaM+mO'q*7Pl,\RnYUs0jM"XhjBOR:o@;9g<?$b*Lc+Aclc;SPlts
%am6d??[+FJS.5dX2mrXXfk^PI(/,P$2#H,&:p-@Drj?5p]kI,#VVSQKl*G*f/-+P4iFREqD4?$a$iGUr,3)*=Q[`I6S%aAL\ffYT
%on#"L!VRJ((;_t'W+Ms\.r=sKrT9cGB]cnH7j@??kI&UoY]eYMCj/[1Vd_8*q2d$Of4hA78Fhf?BijP@p04ZTl6h'CWV)>JD\fNS
%^"_tS,=4UQ:0Y\N>_C9f0H>1G7n9Z618:*1Kj&E!hlZPiKfX)R:bW7Rd:g]Q:_sC(.3*Os_=,7N+83:OnPdUolnq:Fgh90K_6MD<
%1:B$Qd$"ZgWEGJj9s%r*XJ'/DoP0rrBs!0&mQip<NC#kpd&G>m)a:,h><r1q5ng9P,h(4UDSL-o3s@\4[qMCOATGa^,VnfdC_h2`
%rsT7b7VbiTDm`dOJ`q3roLrCj6.G""k@^p3UC`9TgF)CVI]`RGGrfd9UM%Sl`#Ah#.[,ZqhX-o7(Xn&F[/@e;qpg0k]=e71B0dW:
%AH,g(=%ZEI_TqZC'O'6E]K^-sf=h%6m%'kV=Z!sYe_"d5qPVS!m]c]o#&b$?>4nLR1J;%h>V*4XN&Bc?aBr6aCY6sekKTXDG"RIr
%_LZ5U0R%KFo0RrRlQ/\r^7nh#Xf--SEu]"N_ff7+cTA'EoGh+1Tr,3f#=&FP\ig'6G+.fr[/iArg=GV-<r-nu*G!7(cb&jR)d-c(
%\!geC`t9Da8fB"m3sj>t/TR'keN/=`!BRaA+5n?RZ*sh*PjMr.D2^`e7,QMKX](UUBI*BYVY_P/M($i4VK(sg*jO)BT<onE!Tlb/
%Fs!7LQr>^O]7MX[2&a'!hX*1hNKg+cgjdut`34N>igrM#!mY(0.qoV63'_V5VskZ2+*']W2&I^./<fmH:N/$&Z6R#A8a5;QnY[6.
%O>:Ht(u:J9=_APd]#lZfh5KcMXU^>9\)/)pSFl&7ZdB\_-kB(g"fgc3L_-IbPdj8]!Kq08`)TFK4KjnNToouK-mOS73JkHf9;67L
%R!c[KNY,o</9.uNY;g1IM/aRg=Tae'2e!opP:=hR#KJn1+.Un<g=Y[>cde3gT&+t]NLW2hXSbWl5&I;,.!@i'e*__SmMGV%K9I4Z
%KK+\/=eXtB4Zk_WmN[)F*ZPl^8gp@Pf_d,)hJn#j^Re>oGk&\#'.+JLj1[Rn7rJ4e[+H=sIp2Z0Z/4l`(_)jS;cu@hk/5E>_Q:7,
%m3(r':2H(hBVZh]a(4P.f"9CO1kq38T_PS,-]aC]Zd2Lrh[#+NVpc^B:JpIfeC$#DO(sYd:ZW=d1^1FY!u-2)GkC'UD&jL6D,R8t
%0'M*l3@6+bl80#eo%9`E7@d899I;I7\DP/K4e]*4c2d]b^G"kiNbP2=!65i'BV4u.\e,Ir0XH+`I4q]+XOr^B!G*[#TMiif<hrb=
%6eQ<Afhllj8Lm(]33@=.l0dID2W9S5QG;2Dh/V,4(=SU%\4E+'TQfA_TeP?'2P8E-rB\'JBHGZXm/[NXVSLaHj^ND):LObInt%aY
%1tnMe[5`"s/X<k$UR\;_J(irY-;cm9im5:iJ>QZFNRY4b]J0M03k7MYed6j^FmNu&/rhM^[HUF81*Y8*-*k`EWD7=Gb9)q:.mSeZ
%FDb@!OR+Y9)1jUIM,Z.4$ps11+IOd5AJ?(Cf[^mK`B(qkc"K9+RC]DiD3.l./jI-]g-]BGdR4S>)k%K<gaYFP.&fJ;UeJj_`AO+_
%emV(VEMRe!k+*]oAaR&6X`gS#[6DKCP8_m;'brVg/rN[mp=m"OnYFCB7^:]8AZ-BbL8i-!E!7_pkX^%oTqq*M.1rj+!3eNLpAR"5
%)Q8[O76uKN3aBI:Zn6]G19'imISO9HXJgG89&$>+r&LUErVC6?rbH8^TQf.ue#B/Q>4%\(1V'lf$)Nd:Cj+0'17A)>7`O&XO>H"b
%@sI2/!eKtKXhjYh#R?/Z7Dg1)!'mKUqNYGjl%Pi4#5!R_K[3iYRtt]+cREi)<p-,;BjBYr7M/Y\T8^4TrE?Cs^"C0>](R&UIU^C=
%AigiQlB?0$bJ][sIaUCq,KQ(C0MBqlISF?E;9nUf8E-?uKdt;cj_]"8=Er`Y09j)V!N<u0=*EH8gAZK3nC&3ZfC2omIngY5O9pJ>
%ADU$6Mu'1!l#\^lMZG(^NJE+?'K>`f9.N*XPQHuRTGTXY9eI*\3Rc1YC&K&DWchUV)Yt+O96]=F/%*[]A:B%h7@@oYE=rqIG&8ob
%=9#dQ$8Si,4FrC><_Y$G#O5<mhsAcL125dSe_T*c(6CR,4.Y*iq]hcA9!@r4bXRr/rhB9'0(8J&LM1d'0pEPZA<P_crR5S$2gYeS
%#uB=W+dM#CTGeoK4Dq(jZhXZqH4.eB8.>A&[tY_n1I@2g>'tObm7N0S^3_nKF;ME)6<=n.YtM*bbOn!:p);8SG_s^U%;U*Hg\h.L
%c;78I0m]=[irUhK8.;#1[NmE>VmXgKUF#0=_;5p7/[[u@K:VSqVIru'[LHEDJ&?U1lK5"V&)KO`[9i`LDp,fhC:1FrHZF/6G1a@:
%'jeS_Ei[uq(&QUR[nj'M[C)"':EI3R*j7a,I-\a@Dch5$Wq!s<Tj-)*:$Ylp<t=\5f/M9q(@Q'%\9HZakW^lk_dbUUT3puB>[)j/
%iR?E)2]c)GST=&TUO&b=]QH4)XQPSXi.5bl]WpUJHnqXJs&--dY20O]]$L7=(PAKpO.:"'Y[Umf?i&Wnoc>/Q3RG5.;bOajq?QH#
%f:P53]B/%anP<0VXaSlIE#a>[=R-c!mT/c3(ksP:)@,aKlEB^3hQ()Hi6-JVeD=kg=?@oO%E_3/7m5EJhelK[qXYdJ%j'VScO,7r
%pWHnS^NSSjbo`4q`obh"WqZI<Yd8YX_^b2Meel86r9l.[ld`TFHDQ""mB&SYDO<BOQ<rGFG'B^/lYTaA%duN+[rq(O]j@l_j1!Uq
%lG<':p1RaD?ZURrleg8s?agrMp5R,%<dT$T%tj%,2h,3;DJuUp*LZC6BDpYQNM'4bF`R68MtQu8aleF2f=g'+0S<\[;nm[lVTU1L
%Q*($IkW/B<dsZ.LNO;g_ILQKaJ+7Jhoj4uSG.17L)ub/4A#$^4i7e(n4l=72'e5]FS842@EqenU#O`S'er9QC?`;aMSK#qO8'[Z@
%3%U\lpWi(7G1EA9nSMp('Bm'JF%u[Tm7$,cmD7':lJ7LaI#N[o^/?DE"WjH+s1)jk+*Sf\&,<U=n#Oc:rpmbf2ccC;Qa$i2r'@sl
%kY_#E;0dQaO;IQgiIggCpQo6$1hDZ?]N6C`49fhk[U^,e6rhT8*koHq9oFJ,YEgYbeD6C%s0:[5FM?@Zh9,K(Q%St[IT1*j>LuNn
%rnH'(p5KT$K3.0_G3*,0ojd%&QaK2*9Zd-HGE6n18#Pm^\u4G6=0b!mYJSHVpNu#QGN\u%_9%\SY^CC[LH^+Xc#qo#]$UVnSKB6*
%Jlg:e4:<[K)p_XTLq[J"!(gR;>'tbmn[mKcetbfr=5-j7*W-fAD@M>qND"ArdM$(D54l"8U39oK]di&GX6RaFNC2a\K?"]Yr4HGN
%*Ba,j+KPR&gpqX<eFgR'a"-#WlJRQ9@-$qSW'@),_UbYk[IsGhYd^GBh)r2o])F9d3I"R5Zj42bNSE("5%$7)pP:VQj#=l@S#<a=
%8'[UalJ:XB0VVX9#CglQg$DZW8>mI]]2!61j0%2j+!+GZmX"j!S&"u9]MFR*p=&`I=Q+`nWNP+4pX=l95AiY8_de;S(QH&BC``D;
%ddt56e*9S/Q$cC,EXuRK<"7)s@_EU)T>>\qHb6s4<pYmeh+(8TiG,`uC!a$Z6!18ADTQ%0oo=8m;1JH1*^-oOs4ce/de?&fUt"hF
%lNXsk+0IsKcgJpW:94-#09,J`Wr"5iF)Z4/DYnI\jP504`*)9jb/(3X%b.t7`)pLAh1qn[UVdb:IG$KqNPgMnOPbPgls!!KK=<f)
%rHQ&G_407VD=;guo`9'A81rh1U(#j0m6Tu]jg5adGbVAiXT%7L4#OEM5di)B>M&S(eWknShFE_VE>8e+A`+Ur"e.Ru)8'm3f/NR3
%^q]3em#jPKIgUA5D3aos5PV\Wi+]_-=h_QOIdm8I8cLd*$[.9:<cjT^,>Wr!:,[Fk[@;!Re;=%iAGo.kDnGGDg,4<Ykij&"^3]?P
%YMZi'C0Q0No\n-F%J]PfNa=BqWpm(@%j/W+0-TqHX(D,3O.i&m4,__6,4"M-G^I"rJ'q>6laTg>T&'+Lq4%As$u_+*h@<3J<nkum
%XaGB3s1DXkU#3(3XRPO')sUq3Jun+\?Lt(tp&h=fGi8/u:h209V6,,k$u_+<^H-W4!4'7c$u_bikV:R4eci[tr%Z]_ibNB/XX\_1
%>(X6X]DR5E\bP]s-ieUN<<k1]/6'sI406o0DlU"jSeKE_/]9#5]9MK^L9Ya6H9rpbXcKqtZJ5'`q\=E,Hd'Fn;^GoO"bl\DYp\I6
%n`=OD9<<.*Qrs5T)Y`deF)`SU%I7)s:=OA&=*i'roj.UCaHA\5U-^>cf3ItIlSl*'WVTQu(+r-Se.Zb!g5;/Lnfi[G=sIqJ%u_Pc
%9'IR"9)Yq-FisQ;*lIEAnU7;,mlBQ%XIEon52@!V&bX,2bbbgA*&TN9q?jq*3iNf5h%=c2A7;UVVFAEb[0oIX%htuU"+)le'@1<n
%8Y[b,O34f-$_fPL4HAh@4oG'aS,:,7=:_U*,,N-=GEF%pN']h_"VKSG\6b$biA`$B0bd+(EB9.-5R%FWTM:+^81k#JW_hCT2i]V6
%l7X\il2>;R3>XqEo/R:Xmf^8kSorsGiPr"^/ncR:L+:UKTEFc_n9Ofr`F!E>eN:_pXgu4/#sbeB*T0rZGiSb1[tj(rf0)LKq/d_N
%TP#S6(')&&Y6bcV@i-QHh&>,jQh;p1A34(j;c2&^O-Qj(SSng'%@_GUE>iRBW4Lgfp$h!o(lH\CD7mKg;Q;S-cbGQX9g$F$s7e\b
%m#Cm\.o05-f7IXbm;uf=CS.0Sl_d8T)\6!*5:]r^YLtW>'sqCKV^DJ(df*[OH)LL$f%)cg\9Ii8&[_WrVqiH2p?(bgfU>dH;;,Xi
%qqXcof&*gFU$cRf4)[_"d[gX$'2CV*a?L?TLW>nujAY*KC84#l>cDk;]E]0blSu!2TXO8J^7jfIS!n\GXguF/TQ<UQo8eK/UNS`H
%<C0Q'9&YEfkFtoZMj%/WW+1(MNE6:g1tR0QV>735n@HAU^U="HfOXYFRC1a*rqnTU];:NZ*LjQ^qu44Lal;]I@h)j%lTr1UOJ&kZ
%.Yk(6+#?6/D>r`'cea/]%b'Y0O--%2>'b`ei+`%orC0n,SGYg/5?a95X%F4.RP`+u6c2$9_afB+p&2eYBIY9-)c[&>L@e':m2US4
%[$o&gZ*n5FY&M?I.2RMYpRp=,\"(UWlDJLZp9i/CR,pM]C7p!T2SAlf&1b/d`jbV&gNZ_&CRhahD<m%m78,6e^[NuC'\dahet;p6
%kEF@ZO02(f=@6re<Nu(jnJs%F@F*SNHduaBjkf\-T,t-DNFqG>m`biW6.3Et0(tn%pK#H9Ll*-hoQj#GXgJu6+&bJkg>hjEW1K9^
%"2DLjm2a*ZD?R.<92A43Yb^OXhY-'lrDEbFqWVeRY<Q6V(O"1epnQIK\6387:/fnnqWBp3H1C>!rn<JrRn(A+d[iYbd<l-G9gcq@
%j(mbOcWA^`(#@W&[B')(FSt.dFlEJW#?H3l^6Xe=LKC5Y;AL19k1/':9C6=_0=S*5\cplsoX^c&574F`iu^3o7/ZL:57G:J<,[K,
%lV1d\:L:4q:"jQ<S"*Q0fIE#LJ,dKWcN+f!7WupO^)Z>\T:!X'U=_:l5qm.&5@'OPEQU-3gL9h!D&OW78BbVP1,+oa*8bGH<-\?A
%NM*0JV#7<b//!p`l?'XFC6aiDQ!q6c0>:!m="Q@KTD7`q*WG7m5>H_D*+%Irn[REi"*nZ!Gl+CobX)?KYR>O4n?9u#nZ'jFo\iiS
%YAJ`7npn4MQW_kHXkJ5$fNhfun>tHX:EP%o<7kYBrHp-J/\g#=']1`J2qD:V[iuD";'.S!hgG:_6f<E-Hm505I5)0.qs?IBC#"G7
%Aqa<W?"ViiFnX]ZiH5<;nU./c)OS`eQ"SFSlfE'*,ms^-o;]*!^\\pugI2b5&:mpA?MX(=>Rbk2.t;k,l_bi*qtIKcGl-,sH[3-X
%Wp]?4r"4]C,[`f]]/Qq^KR;<g^'XPBK)qFqpS5;-K'(TE]Q"@tkl6M%Ybt<.eLn8cf67tN_h=6F?tH+Bl48O!G:Eioe[=ORii-_)
%GP,NlqlfAfJ1A7+@Y*]d+$P&)W&.9IHdSU^Ke"Yr3,ZHcl28>S?+>$!s/>bdRjar/>_On[EYYHaj6O^GP)d0Q!cp-#<EH@>S`JGA
%Z9DGR#bF2KQt=bBEIZd]ajT%V6"=sEPB-QLf&pfHnP-XdD"HqP^O>-h\C'2[rgg?8Ai!%Pjjp'U*BkRsW_eQ#l+J?nTX+g4^u<!(
%7iUn,hNi,V:K?Js9=t)^MgP>M?pFUq)2GDCoY";)<rEpTDhH[-mr'W<Qk-!R4KYp>hsS9BGD]164ScW+FIp.I`U.BP1e)`/`eK!8
%3G?<8Y.P%slu)_t@6(ODIDE8:mf`(Ap%$,Vq]@D7N;MHgS&'!h*LSj@IJfjNhf_0fSYp[\KFbqG?_NfV%ipk#MjXb@Ud%)a8EKB=
%6>:F+EN]6Hok5Ca38NmB9!</TS^l$!?&>g-R\1]b52LPRkk&HUpAVB'ebr_GfIZKQ"MPr4m\>.<,]gg4I<mIr#@@u"D07M5CqhYn
%bNRj<kcX>;KupZM7+5X^>EO%tc'@,p[@g<\cN#fgQdFQLNhW3K%fL4QHt3brKh;$7V&'(0T`kMX9tu#KN^HPp"h_b-lKMX>lc-R&
%K0a>1IN/.<>9CU.%7ZY"hPd&+;-u+9cb&56(@2Gn[42D?T=.TG[!V--ag\Y6r47<@68oBHZq]IAGA`/sP(*];ge.Wp6*FJhp1Zr9
%de^tfEd7!C?_Emie>m`Tp4GVWZupt^,>P`6c*p0UZM!5E#N2^[=+R_C4c)t024.aCXu"j5s7#RZCAq`DW:Rp9b18r/W.'0&s.sb?
%gF5UG_IFWLXmA1t"VaABg(nnpJM&\"0YdG"X)@mcIqe@g_6A%<!!o^p#-S!g0Kpr#1M?pKNX0ht)M)ts3%tS].`%V"Mb8-l@.3(<
%@j$];ikGQJU:m_\hf!b]RATZGI3dQ,^meOM,(ZG.kYKKriJX0b%ctjaeH7Dr1%rZHX$dgt!KZ)@e\HW]n2ss$p;E"k/)H`UXN`NR
%A(5uIi6=3_>-E?jQ<OkAHVgVQ`Q8!IrgVH=a"mZ85Sj=Kb2t#PU\gm2V>9'8T>C6eO"UMbQ!UCEcjrkO0"esE2%At[r>=nfT,rZN
%[U.C@LWu!^'Ris)(&#P+cD.dKp5#_5.`\7PH\]H*mZ$rR@6\DQP?iG1*Au;-6Yam35*4".pZLMli7^I"TV@lFnqJ1feGAt[h#?p[
%B`:M9"G,q-*(*e1f7=<X4q>>N?_ZOWh-UU\6&e,5cD/k.#AD`O[>@.YkNTB5O$!DnNLOYXO:-lG]/UmTZn6Bkgo*&f@it*QH>e6t
%Jds(l:H\;K@eQL69dSI?".V,`/mt]K0,7ebA:/HCg*@+sgB'5IZp:aiA3!f_\tsSTg+IgR^:dCsCqLfg[T6Eqc36*bhX,43_Ot0Z
%ijhu.gt]Ol*kaEF#kRqu@V$Z=qe+P1F/OH)H[F?_)\3uopL%h2l=%5PU*frjeo3mAQes&?2+0Qd7X]LJjk'H>q!G,%!c\1E3LPiZ
%D.m>RJ*Pm48[G0Q)u]42ha;["<-dYs.:\<966K2H5SaRq@H1Ch!J+QK(6T^;F0>K&RTJpN>2g3U30(f>IX8c>F6Bd)I+Coc-,<pd
%c1_&7")c%YVr7RLYNi#Mq",Zbr7)&HJ*3E$2>Y<7^><2ppM]scg55\qQG3'$RURO,HS'a/.j'c?ZQK,$C]/T^R$1&QDnko1_f'tl
%K+I.\s8K_+:4HFGoqQ05rStfi@6skR*6msOj`eH3PP"<bja?AIo`1QZ">fT8l.UR`9fQnb(\BlFFtR/_R.:cqrb!'dicFeIs7u>;
%HK4h=ZerOfp%SLSq5ZaX7f#>jHiC-npEHP87\P'1A=CjcIf,,tc@>cB-fE"h%JB2EJ(4MRrp]p)n%Nl#]aODk^\u/:]_:1UlI:$]
%rToO$jF@(*>fNCb`s)M,OWSuT@Q*+lV7*?q\$,fX3D]\E:VZZPEd-</s4_2$"kq("^h*E)e4]i<=0MZ'NN`9J]>&UimOr`X6@0f:
%8pp$n^\@q7,4II*]@4Ch_)lRarG1<f-a`15s8(a*^\rL<I..(4`S5HpI/EfuHfnI;s+,nbEL;5><VXVlGjXl/5(]<jp=$Qi,`moD
%os=/a#Hrf)^A!Qbc;.eoqkM43J0r%C[gC[6pZdDZkR[TZ5PZe1Zo>brf!B;FTDnW!^RMk)Vr(aSYB@E^DuLISH2mDo?[q/Zrt]/,
%Dl<<1cbB#0_bYaV`kVK?rq5*brC>cBh.nKVIdtFIrS,*&3:pA6o`r6[r?nfIFaZFQiPXC'4!24]'#pNL^O>DuhgPLW?VVR#ohRfA
%O1b%G?NNIfj^1_FqK`C7p7i^WrF\A9H@IQBYC*p.Tf2PD=+C2F-XV/dUXstn<PR=bU"=bcmm$U8Rr>rt&b/3jYgR,&msaHgJ+04/
%kApI^chD%e\*HherV=>i^[f(QH1UpjlT]^]]1'Hka4F$TOH97_O+%[77`*q3DkGeRooqGaNU]f[0EUj:a7.rThsG?3hr6HLqW;F/
%]_ghmht`26[\(85cG/A!R+gJ`J+^LE)k!IRIp[\Ks,Z-HoZ;IP2/5>S275>2#8hF+oBZ'2cgUhA[MQ@-rr'$=A2F/AB+M3GrL;.4
%k*,e>?i7mp[U9("Pop"]%tFDI&6/tApn.+!njboooAST@rls,kT=cqor]`T9bPjHXpmY+.s-`n*r9>6YrS]]T1q[2qh;"SDJ+fH5
%r5Z#>bQ%HVis`*7`&Fn#cb_g"dfEgn5Q:G1B-3^V.[MM#SM+J7@T"[$W\G5ePLV.Z!u7VEhS&Tu#G31"rM*0V.*:[KOm[B^]`aM[
%O5G3R='-p1F^qbMnT![DI8u8bFsB-Hc6pq%rqOHZ:UceO8P(pkMG>ffcn\"]j3-<TjSdgD+oh&r5%&=/q9rsu^A$uXcejN0?^=i3
%j%B]VYC5u@&Te+fPKah-9*?TQ(7-mZf(<L!0O%-ek+:tl:QG>e2Rh'PJm[FC/4'F;)YW0M2t*\^I"/KAehX-q_k/IX(nPI/N]X]&
%]%3+STPOB3XlK<S<-Ut^$GPhA4Ed+?S[3*f;t'2t?J`G8hJk:lO!=97[U`$K132<hOkfINUWA(Mj^GWto-W/QOsRV0YMn;(ajtg/
%UWj:V[nO#"W2(Ko:Qep,R4#N>Aamr+j*fCVi=>/-nLLPFGAbd6I@Pd$4,2XVGZ$b-VeWeIo,b;FSHP?1D/+.*QqtBfi>XGKRudZ,
%dtZa)dM2[bANfB-e?:5aV`;doXa32d\kLlSmW88)-Q:^[EAs2n6LQQq[`G+#?MrdX-guQ_ZAK3O(j^O'n@XuPDnl(,(PPXJqW>+K
%I/:/cn,CN-0E1iiGN55Ao:+gg+$]YIMmk5XlRAf)ErQ"bZUD0'c:r>K!(pPAEIN0+0bq?Is2EI[/>T6eIe;Shc[Yi68%0:QI.Z;<
%;Xrg8-(<<LTJ'=kkY_pg#sG5uo\l]4VE?9Rj$3P,KD.6+1!X'Lr<_BYjOsRG!sp<?R;qc9:KLMAEh*.)ZZlH=imThNqXDtC+^+8T
%9G2Hj`q0N)J,!!?gWKt,SJ>Au)L(miWH@k+R%Xtr)mlM,k%pHq:V*KrnHDQ252Fs@f&pa)"uY?nL&9-JpM#`epICkRrc9#60S9m:
%4bG8T4oN9bQT9D-1[kTnlbhn,A'\4/]ARC+HEiP1W"CfD(?<Bb5F\"KTU*B/msan9T4^TL%"%C;-Qg&!m*j!fs78Q/o)-%!U73(1
%'VFg`\gbBjL[ek-Qc&!SS;3.hHk-n=hg039dege.?PE4Kf^sD'q"2R/5PM\R?G;/d-l;VUq/SYbJ)]HVWmnF5+dK>'[8>#B[/)nm
%=eA[g<$)8pO*@[=D16Mg?q#S82&Y4(6UcZ\\G0NKb'B@M0BKYlA,Um`;Hr9M7(@C/e9=X)E*>%Wra.nn\mPD#0.Tk?YqoaMhnOBB
%J+d?R$1rLCaifHjIK`sFfr$L[q<_h(G<^KKrWb*]B(:e.qM,ls$K'MOBXfsMBrAW(MS*,)l?n-Uc\$sTG"o^Ef%`-Tr8ttFG<^EJ
%GOpYQ-pi2l<D2.h+]C9YUkO<pO]I?&VN.9\qnDd?#QO]'qV^em3JO6_:!U?Y[JgB5jFYn75Bk_*U#)JiT`\XH%KF2&]+Fi[?BTJ5
%!.B52mP[PVKe=0ffQZ:iGE3hTFDQ-lls>@;^@fM%X*9=@rbDFo@X-Y2jtD4ajXd,&^OiN;n6YFQs#5&e[?("?nh5#tmh`JL4-l9%
%\"<0H/"r;Q+6WCUk,ZN7IU(iJY]&S(G)cFrEn'fu=.d2+lDnuh5CN7aDa*Z72$*^OrdVWVkMJK#pr0;;IfJ)VmsX]bPH/_X\4+Y;
%>oJ.aeXsBe*FF6\_uH1:rOq$fgsZcUI56!n8GH7n9qV;aDaTASq%*,0m>q0NZ@-ll-.KE5T=t!uB7I.pjNB4Vrb9KM-Q<MEACoi`
%28GjaD>mVk(]'jjY%M`-\b=@d9jn#"^(qRp>Ng_5_F:A/JG&F'5B;"d90W//g-8qP=CeOn3qk=Ego%a^Y<,O&pX!+d^(3XPVqDKd
%2-f[(h)>9&ZVR1Krc%DRX-EPKci4DE%i\0_rV`*<Q[[iTQqth&6bLaE((b79a+bC:::uO5%hZRsp$pJqI=_iL&KbroC`1icC[37u
%_VH1+Q>te[bjK,QrQi@ZHr[!)HCOIeKVpjg]+(*'5G#>Z0E:lEAQ5<9$*IIR4_c>P%0>C\Ku&"MKjL*\]+6c%0+u+Rbl#Y%BE2si
%r@?j;L%[q':4)#V/CcJID8X'c[f73R=\\g[ds51Zl\=c%os5gbZ/=/Is36nTYF+pQ\J+@ZqB[n8D3Vl-ON5O8o:rY9gOLf+UHW#Y
%O)+()#`JdC))_G[g[8_Q^<@>.DeX0UICak8<"%L>rnkbSek_&$(L=uBnl4:*7U<VPf$&AhbBS4E!FHSZBZD^afD6JWXnBJS$F8<(
%Vq#eDcJ"nKXerkFm=/3r>41AC=q"4#f=(<cqkq%Xp%rU%I^e3OBtb*AEkgA;3oAQTh/9]11XQ?Q<YU<>KQXb@m>6OFg7)ZUD$)Do
%cZd"Wk'uN:gQcIASXmrs&)M0Dek_(&p,O212FQ`q2W$D^OX[<*7t+aW+)kljDAuJ8S*e+X'ed*-`qu.?lA;W^g7Ms'd[^=h`4Oh0
%?%+_>fgaooS;WB'^T^-OcfIaqf7KRS$Z:f_S7%CF[qH%bp9H:GhN&k+OfbNSrq*lo&`/:mcY`\Dgknm"NXJR$gAJ>ia(B+Y%at8o
%'B6C8B.rCle:U`oicY63C`tUknn.H.KIpppd5SDEodJU2ol%V4I[9En'MhK6QZW4m]a?c:rE?]Y>kpP.(".iCMRrG/X194(Y8<o]
%`).ERNhX@C3(bE1Vg(jHIIC$hUVP7NhtFg;lg/t@69LgRk+F5"Rm.j`3/(I-,O*@o1eE5\)U2`#73C^%kE8OjZ;.3=\sc=IW)(LR
%e(=HDR@eh5CENO5\,Gc's-E;AC0>idd^ftgMIZ7U@V;0>3OHK,Nq3YAr0rqo/EQBkH4\6R'N0S.6SF\ML#:QfQa(7Gb&_G!mC1ot
%]L]b7+g/.H,+l8lXo,LW4H[^`r4<h@,*?l"L5A*VaB/3S["$iSBW@fc:.=/VIu`eYBE,Turc]]g0,;R=Q#YOU[/iPPC_>32!7\f/
%a_A9<CF0d!KO63:1]U&dJII=Inq=M8mEa/[Lr',Z[f;n^i`@Vm_U(8Zs()B7M,PG':o3n9`%T[0WDG]mr2A\sn3>YXGnee'gqe'^
%Ea_Y3[XYF@EM^Ngk0[2$VQs4A;]!jIVP8kCgmcqW(]"rT4F6)\Gk[7PDnXTins8%uB5II5Q7$BgI*:B43,SUtbMt3m@IBMKWmgO6
%E&Z.$3G<'/AO4N69a5%\Gh\FJ-`MacK](Qehg<lD,SoJ>\,Gb&3OPaGoD*/3`l)T_Vcl:.V(b.)T]IOB[VhZTC\bMcVj&-t:.<?9
%4%W^8dIMh>MA@DIC6e2?$U&jj+$XR?H;9<hb<c+(h`:@ZBpJJm3rOQZropr;D-FUBa\f0rgUEW`-MGGa"4QBd?(8giJ9HOTCG@?r
%;_rWWD;GXHI+k431^J'NE/ad?\,Gb\>BI.(c4-2<^L/%#T^/]X9<0gd-L%u"XNG)A)LEM^J&Sd3lUNaN1&"GNmHJtYB&sm/4h(CY
%5[QWjZWpV9Vp/S<Q!K)L$>RAM!`U,S9i<g5\qt-LDXX:,RFI-n$fG:=Sos1/D78TaIbXf0Zq(i,ke^Xd[:rE@^U?%Y'7ekp3C.(0
%rLYW_FCs$r9c;01MdeN6.c@YB*_je?rS)8fT/jOAb#g[5>Ygi=R7ZZ1!h,!aW`DGgQ_rN:Y!$Y%BHj>3J%%?K]a8XhQX#oPVsRi[
%L]o^ll!dd@(aD?n!-f$Zm&.aj#$4hG"ojJhcaG]\1i^mYVqnnh._TQ#r!lC&p*-\6R<.E][.u).8pG6&`I/Z$33*[G&`>B8&/St4
%b%RYoZk=0r%ua*p3qROf:G4@a)O2-ePF((u5>1`ZDI@*VU<koGbAQ.-21BC?i\#*pOABYi!\!sIYGJk`?:7p!SSLYh9Wh&P1c7X.
%]U/!2haZ4@C3T'HrAg=8-nb/j\,Gd(qiY&WOJuC.?ZWGb:RaQf[V9F2DeV#`aHlUCm,sFm"dF7pk&-]h\!ZF"-82ep_b?pS>Ncm#
%gZa&$PB'EZ1MB/6?FaEoJ\dOkAH4Bs!eZXFnRLm_@l&m&;K*V@@&4SA0,l?rR=Xc<]r^!b@r&$NQ,J!&B%l+/"??-d@4!]Uc],B>
%hCJae(ICZpq7#7)56J6eM5bo@qYJJu9Cf1WCX8iEEb%fU`[kqqR:a*Z00KI1:kFCbMHJf7-JRd3Nugp8rr'>)n'$s-1iUb]U!r/-
%*L((qP>+Vh:mqb>\Ol'uSS_iG?MFchT6,u<FYQH`c*l*h*;u'8rU4Y$h`5KCb4NC:K2119p.p;)9HWoP@[W0(gYM41E)+[%$b$.+
%B+#VnK*D"66$LnLK@A8WiI?%*s(ip0;8&8/U\M\d3c4m'Y@XXrPmAkN/^`QR]t)6XB'2`rpW@P:2=jRMHZW)1orkpnIlC)b3lKgf
%0T/a*T[W&,4d9]-1Gk#Fa%^B6Y$@-Ls2+IIO=(N%a5T4Og2j1\4ZY#LqtJn>^B:efH:lE/aujg#:0YL,;,Z7TR5>f!/2rF"?apR_
%h<pj(S2S^cfUHu\D`rD!3OlQUp-3V1k(W&Hi?+VuIdOT%2I>`DEa)?W/TrI8:u.V/=)J,N/bD/oRE:XT%ee[lG7JL`ho=KtbZoV[
%c--R%pqf0TD?&=._<p(@:Eg'2o36/l!(RFO-83J[:'E2bq?rns&&XNF"S`[CNp.6S9V&Psp?1YfTH)A:h=eSc,;P)0d"hns<.AaZ
%T=07:f$J`12H6f+!/5;"=i,]U/IaXgJ];cFH4pe)Q!4:Wb<YrdSr`kUI=:S3IDLO:IEud1]0aN#\M*XR2$Yf![/"M3,pZ?NdkGq4
%9@h0qi6N_DV4(i5G3Gc41%@Z(6Zsl)I2<+FBn).\br5LgDYr=J9mLV3?[,>D9j`6)@Qq/YA+ep57#PYHkL:b7l-b[M?+:WI(>[Y:
%O3UC:r[kV8cbT6^ElXGNI-r2L[XRVV<)]79q(<TKh(#Va/)LA5QY97>+NF5Vh0/MCUZYO]J,=*_1M9Hh)SbGVdV8U1Y"L[\alXkZ
%0#X&\bXn>"@<PiioC]tE5i6./S[h4[&,+dmGE/h!%fU[]rU68EH"Hq\\4EOb?b7r<oHr=\jLZ+aEjD6-djK],2)DG+#P)/h76.F3
%2]`C@e*\3HQSA@+DYr=:oCKgM55117S%nZ&L1s@B_FNK0=d2iu:,mUR9YG]C7D)EIB.h,."1oli:N,$XJ>^(@\hp1nTAB3*"&l%@
%P3C;L5'NOB>(;r-K:8%N5&#bG)0A2o\o]>q%D($^O,ck+r]PVK"V$O\.A',BptS(pD>r71_=7G5BDOnaHV==E$g.Or(Cf]14aCJF
%S\Fj@GEMXWp:k\BjH][ji?Oo%J*jsHK\tOJjM$^<o(F>';qme*=7-1$0,1:Tpftn3b&afM::kRh?UFM%]Bt+2c--RepVKWcD?&=<
%_7eX59PFLh^7]e>$?]NE,(FV/-nGn6l'VDea,0\DmRr]4Z.oM)?ZJ,EBC4$mI2UT8m^E.$S>LKDpRooE4k3nDeu.nB].^+TH44jt
%#mgsp(USAe:O,nuIo43!'4h[ALnATJPt;CNbef@P)P#BBB%HAi]c*+jqRbM]GMCV/EaFK,9ma1T[]3,m^\2E:C!Ye/)GKguGUF"'
%3Ao&T4uQ6`S-nn$R`.<J??BTZT(V1.c@k/+G2*$*ba$VH:NJ@h0ANGRp+Lh40gUptBeE,c88".(%.Iu:fm:V4A59gt;cE/GV+6ka
%<<&-9qCAd@\fCR:>Kc2YdqRjo*_eG-\ht^qKj[d'Xgn1`B$PB-ldFHO?UoaaC49LAH)LU$3]fg0KD49s^B7slG^B87>!@).:0YJV
%Fc,G9/1t!M^I]u]@)jmt4pAGQS6b1"b]A^1oX.2UV?Hqqg\uEBcFbig00H/]k-$q:A?&U"G3I=Q$\5\Lk/bigKsPs];34;s/H@9m
%O)kEmZo^d=-4^'fg\uER0"nKU00H/]p0Zt1TI/L5Z[u?.#acL,QeoWZTm,5i_+>g(nS3UNhf/d5n"j:_b?!kAqq$9h'?^ZXLE4#1
%$Y[P"Qk-RNKMHaU=.EH9Vsh=i?fXAZrU1*@;kGh(ceYDGk-+_"grs<]Ba,Y)*"952MrX8cc0R?T=Es+3J6Pr/goGV\KfsY6SYKCf
%Jq*f;s1:hAcr5,XL&5uGrj>s_MJ07NBpQsQPV^PlpOV+d?4Q\i\`%`.g8"NXQhTD2^[q0[L&$)S-CqSpD,;Pm?>Kk.79M2L-$B8l
%PbP\;%(J.[d&QFJKdr\'I8IGOh)UphESTs*JE;"#%(J&scE5^Ik-(o0bsYj;cE>A,KbA8;g6KVkY&L.29g7S:<!u$,i:KtZTD%DT
%E9=;!hqe"@"%D4k,q%9fWEFT%qR+;q:&Zk]MCd%d1q]:4e0S&&8W<'fMsjX$T"ar4=n_4>F5-^)e;,)T>Z`T@#4-'qf;<+:3@@i-
%:.?pS>:h=RC>5Fr)([mM>e'^1KhpTQZn6(_n%\7>kH':dX6%3Q4`15Q\BH;`;K0WeZga4SAiNLpD]E"$GGeX>oX.1613NW/g\uER
%34LYG/r\?0p+MCrncousJ>T*1>1HU'$f_^!i75\=EpA+VDGT/:1bM/g^Url_kKSN-ZfTtu4`15Q\Ek!gdB$2!/u+,iH?JhD9]*Et
%el/=S1D7!^#9"jN<Pt`j3SKudh<iGhs1;td6oh`dY\)0TgXG;gXb1Gj;M_Jh*AmBO6tW3:?m8]tY#j<pXb1%'?1@:W6"Z^3k@bm3
%jo)[en!kf@;DAtgaD(P'k!@A5RRV>[5uC74AGVC5:bAIr#Po5DRLB>lGV,in>aCuTk@bukl@4$4rsj>%Af_pLdY/QZgA84.0J#-I
%EWng$cMqsLQUR('iDLN=p%G@14al_F4rDDVkI1CrTj@Y^i]/qb:7K#,&"<+!m#W6G=ciBE]:5R/@Ph9Hku;GneI^"&P5s1EGWkB;
%d:d40^](\A=X8HW)%B(fF^^f1[f6u8@?LCG7ocCX:s1M7p8PD]D>e,ejR1oHg],P,nI(n/@=t)YIkAW4]\@9SPh*9m\fCpD$;1r]
%`($U+]U#-m^o)*6$L?LGqeuAh\UAV.h_152C&?N!3][Ygam*X(GB0L2ZF[I"d^tU+,cSDD;d4K]!M=Ms.&^Xhg[2''B7=2nLk,qf
%E8(;fW#hFr0<I<5S^!U<rcG'&]D[c%P+d,H+L!1US?M\9hAde#0t5b_k^Nj7YWJ`,;*(65M::%ZG@:sX0r&"ko]M6AGe+?')htX;
%Ru:UC^@euD9D>X)m=4<=k%Z4rG5H"N2EF(AqNpsPDS(g1n9=m+]g)P'HM>snh>R7a==mHd$,7VeKb$$sf:p+1*3PAXK^66;q-bS&
%4$;AT.4jm6R.$Hoddqkne!QTV1q.Lh;9gc$]B@fH*l5t4SIXD)LGq26PGtRYj;eNJ?$1)o%S+6!\QbM>"&A7;g4tCd$k'P;rGAK.
%j5'97o@]Ak/iar+k;`1u-&fT"V0u$9Ye%uZYJ:(joB2b%hYu`fB<I%K(G^uL9jri<@BF*Kag#pMi+]E\!1fMgPe%%d@IG(g^.i#n
%a=*M7h8*sF:Meu2rfMQaJQmoD<$+eML/QHrXPdnQCf@2pB?*[83=K;@/^:^\%@]+rI=OOW\O1da*=c!a1mh;;Aaphai1,eCQTW@!
%VN=<)?Gje!7ZY"f&e&DcjpI^.6,##g>R,>L=(X#.0#j";"6UeIr_/g=!3QHPc%'(!_U#*1/(&uhmY7_;Bo!bC!W*2CdkqN<qcLbi
%KrH(;S-Dk5XM;.U!Fbrb#"gT)SW:RR4O.GSoSj<J"Js/7"JEZU['jtI#EfS8O9YQt`9,]gS!a1d)V"DA@tX%Uiq?*/%1i1f7lLeD
%IC;7]@"k*ohXV`6F/n2%heJ\T9oZb;9ZLDVQLF4Jh<%bK>JD[R<b&^&*J?(gR"'E7i\0Bh1fC2+Bp:ccc*]5?$gFQCHb<4G.SP]1
%%<gPJ%L,nnCm:ce\NhHcIFA&RQb'1^]uNYjfJLj)Uqfdll[G'-VdtG9-iI!]U?nA6-$@J^0eG3&<-Z&hr_*4jLigGB^mfmrZ>g:$
%,5EPVLrPs]7uGp/lpB[b^.UNg4Sj<@\c"2W$ZZBrL!EWV'L%MYjodRM'ht.?*p(c/%\F[n8m8Z=#-8s/ae(EiV1-2rgbNl\Ob8__
%)AnBKdR@:4Gn[%.]&X&W*402;]$j;6g\l6?_\))*^YB-beg.0qeMk@7NmeT$K2!H7]"GC45%Wt,6Dnhj9Z`hc3.9N[Qi%"09XZQ[
%@Z'.f_-"&62kXc(Ypj'?63R[=3F"'Dak,X)9C%)=)44H>8TIqr7_1r%!"$aARH^A[:.@93Q0!8+V>WXST%Vna,UXYOI"h;<@`)GF
%#s0K4g.'JZ\Ta8Jh4]`(ZuN=S/e&3@jAUUR#WY]e@ThW.pAbYQq*Njnn-hpZP%K<pQODSbJ=Lk#2F(5+ZYQkS8>^)Pj*klrb'8\t
%l3'2QXOMI??slLo(1WJeAOp"F5*Q,ODip>/oJaSd"I[%GS%jZ\R*KYD=UmP`)J#S_]Rd0P]TaA*i5V.]EO&GlI"7>D>o!tE%=G$<
%-Mi>?"V"cO@O5'pC<G1DThklBE'-";g';M'UQ9q\#I(<X(oK4N?l_WkVK/;:\8QK9!+<!@UeeZ1Af?Diqm7QE<=5pf0RB+UgugHK
%9&F&RBVP#F3'9M^P_K]QX"coKbM%RShF+29E/P,/X9CTobkE+OS2rAMYjEPA(cIhhWFn[#_qK`a)Q#aE9>ok3g*"8j>6Rg3ikdc[
%k$P.)pR-6aU%g][>XE!A9NKf=rY!T10b,nq7Nf2YW6XSa%g21SG37ds+Q?9bU1qD?XVE*lcZRotk?faL$rZd'T;S.1AND%Z8>/L&
%.jg<ip[m29POdt'001X[hZ2YC5M%37%<%3c8\`.j3)p.d?i^DlJ_7?m)e0_oK(V#BCaHTABFqa-i0]0npb]euikr$)TPFM6UfXcs
%&b"o\H\Y*F:Us?^FI*DZ2Rf>Bi.=)D1[HjJ^RfHo8M0N@f.^cjnRMVSXp4:09E\SO^]RAOY@LKH<riRDqJ#;C2o,^;gm@J362P>V
%lNgq*PV"C1l$L3u:7n&QQG-,B,NI5[*p\KVHVP/q'7X75%mFVLch9@L5l,o`Xfgo"@VQd?8<hR@IGSf]b$0SPPMG8?d_<]o>gQ5(
%)7<:+cB^gnVYY%YO/"g$j`tDbc8RQXUsa<Ii6qPA?[pZcfB^2**e!^J;uHR!jYHkfIQ=Od?ac-\J*3FsU&Q8OmcFWC%s=BAL&]DQ
%b!nUKLSd%+?b:qR5;H9CR3$%6)B!_g'VTSjgRW0Ph7rdW5FYEnlrM0A^ES/YjTVQk\,rOZ^cOYb^YoaLT=t6cflJMCC;TOP5b5-L
%._FbQ!XQj0b7i>._uHPCH.]hXU(ZYjof1+C/h/[e0Zp&!E::<?gbO<&cfaJH/Pi\fs(2#B.sN.qHhd9s?_lr<T4g9OC$@"F8%(8S
%Z5N\ZqW2g;mH<8AQC"\,j'Fk*\pr-k(LY\qi7m72+5FgK,;+cIVeN$qQUBRo-mb;`q$Sm4V`7/8Xc*SqkjZ,@*?<Oedb>RW6&)ok
%-b"I<803aA<TfaUFO&g\;W7?YOXd?ZiG]>NX\'e1[?JD[Q[0`$m=2YnN;l/LB)XGW]GU,WP8k3O6%`_XiY<1-K[B`uRNEYYT_'E(
%)[2*=JXm3(]tgdMi?G]DK_$pu!]('n\gnJaKfA.EUXXh2Q0(`DAN8\H9X"`[+@u-s@"Q9IoS%gn((i'AIjI%(2$L8D%a%"U-T27X
%IDG#fUQFeBTQ'HY`t<.9j67Om,W6dsKaoWq2^`!bA&D\h"A/q'@_f?$W5DOODa^:d6T9O"KO<-;Q9^oT)UnjK*TSS"r]ei>4iVN?
%h(8aQYZHQI&n.kg0-6b!j>tNuI=foSkk`:/narOp)"%nS`gs9.:m.'H24')_/=Q#m3qic`-6gc[9NQ+eFjT%\2dc%]4u`*b'V2?T
%5Z@#'dW:-)7,K\B)h_Y)@mFFqoYp(-hoh9*nASWXVStm`=_S*9&.kVJ)tXQ+FqkI3BV=KR%Ql9qTcq5>cC2j5Pbg)r2ha<bG\g!C
%J2/Ksm(%We+qitb/iY8m!e]'Z3$'ch)`UsP#I^;g6W>KFqZbZK%R04sFMof]$-nfi.?+Lk0lTpr<7f5V=Xi45KuLmif&<,%bB)$&
%ReB]O6Gc"M4MHBgEg8</_6->r=#bDmIGnV*)Ng7l_enDSApdSri!""qUE.LV0b_K'63L=JXOE2Zi"jri6QCLi!$uso(g(_t$6?Af
%3g7VoXo8R^i.I1e)^Lu-,(tIL_O^2LjZ.n!nYp$idB-I+:l,94BqtNY%t*A%6sOt@)P$g;!g=9pY\PZeK&6G,hgiWk!c*us^];4R
%2o'Q(&W\3,]3P16+C;^:TJ5tfiW3<#LPo:ns+9G7dq!1.SD7MGG0hU8f>-W1BUo-f(a(K-Jq(l4LC4&/3iAHZ!(d]4Jo2D"isq\C
%101OX)ShgM;0H]]6;aU&@[K5T1Rh+,7$-jKHh(o!Jgs4RjE/mf@;\>:&^rk0-:3hR8no&26dZm(a4:`F_Kue%cfBDI$H&,88O)91
%"4g!h3Ah4mE/:DVm*mq"Q/'!/3Di">4jPbiGDi2a@)P%$=)+D7iQ\rLUru[RW;m+RRlRFHPBT_W1WUK%h`($Yq.ps@Pb=8gEJ<_W
%@oFh^;9Cu[M'cXr\Y%02YX&?Os,Uds[T9/5_hl\KK2OW.o<\#3Ch3uub9.Np^jW^0]`/`DIfg;qQIXjMett@HlOHkDV5)cSl6g+c
%_Y>c0gNoM!:-bc8\_S29Da9CZ.5KLjLjW_.>elHe#@n4`qp@37T[<3=LKPX<7fC(bgTDcB"[YcZnY1LY7lO,]"t(/0(pHs&4&\UI
%&VOnQne".'JNMT)8r'nt>?aqI?>9,;0;;S/@_a8!7Rks)J5(qWEG?D++[\HD"3X<Q+jqXV7K/9J\FejE2n*#e)8n8mIJU4,TXgr#
%^NUtJ,ZDXi\e8D6JHf:_M7Ip:W1CUP!C7BlXmB>M%??iX7fj5$_p4IuT]ec-HVYhtaqEKV&n"'b[&0?@&L"[dW)m;]@S&b\U3WFo
%D8g5UP_1IeoQ%Gl@?KYZ-U=Ejko`4j'1@:iq&1aT'M%>*9&F*m_e\C,3BI/t"$lk*o[6ou1GLk1RFW#q@me':IgQn'*+6HT'+1I#
%F#SjN\q,hrc#R3S[Bnc*;G5//Sb3IpXtXj\i^A@Bf`X.1ci*"X5Q@3mP33T/,/33HrCK=HB.dFr6s?a&/GZ,!c0_=HO'>3[BKCFJ
%PT\'(G:P+<nZ,]dgTFp#M\QG4>cOV+X+,Z;K&DsZ>^V,<h&I!!9FlnqZ=W\GJ_.s0VM[GH">Fh8@J>uqh1lYpYue'5p@h%;D3Vr(
%.X*9;0-?,ofrnk1:0TVJpV9k+*RB$&+PaFsNnN?+2!-_%G_\8<Fc\[HnH,+e#_k'E,dnW^h<@%ceb%N2erC1r=:f&oM\,4q%d$Xu
%d.7Rh4\gWer&)h:X[$/oEZ-,uF4`QmE.H.rE!0Ma`WK>$S1HD2l+shL#f5Q"%4JkTP('uH=p:*'a<=1mi2@$dg3V$d+oMT;SBqaO
%^N_8JJp]Hb?S6g_!:c5?i<a9W9@fNK6$6UT$']fR"(Iqd$>e!#"`0Y2S/MSQAYK7j'OVf>/C-46kk>o^TMjD!)][d2NMXl&l`][3
%?f<=<euPsW(!bCih>0k;=UJu9%)A2m`#7RRoIY,oFY/`fi1m&<")dG_!md-PXX9FV<i/&U&LQI'&EHR^hJ0n<JlSA[Tul@>H4Y/"
%AXFH$/IAq(@;RniiS1g,6O)O_jq_3W1D)C.08%a&Ym5OkrqAsXJ"4bEV=J^C\o`5@_?$ar[>Sm,@HPo@8mnVUna[j4(9nj7=Br,j
%!$r2;U]r$i.mu?_mSqJ0(869*qLFQ9]U%Rmb]t3hOuXAH7u_+oMki,:<4/k1+$'Wt.ZF;6%WNn5'mR]kLcWI^0nO\G%0`aTU$4Re
%TB_LKlZ)DH`TSPCoHFTSn3E4+Ym_P\BlFjY'J%YG&k'qFa"I'Qr8kq`^S'SS*blOd7H\E')Jo['70]FNLMl&@MU1.3`+-;^+0:Kb
%fR2Y.).4#QHnMTQWcYQg,X_pMM>`Pq3_5'J\uOKP,;WHn-:-V7GmH)Y6@=R_V/</r51bqh@rCL(Ml&5J#A4kG-aZ-?G@M21)qO%!
%jpq6W9tOZ/3""Re:a<brA^:E5feAq?*9&Vu`rGMfHRCm[GCE+`a%u7J6-4'["J2g(a/Aqg9;B?(XrF!C^(:+#hq_!lIcKI*TmaEA
%Vq@@#dZ$IC5$4Hg]^ne^>sC^Y^pqY^LgV/=YQlk?,od..<sR+rETNa]OmqFg9KEhn7mZmbj1#naO"=F0V!+5V4\d!MT`3m>-)[ha
%"8>B*)6Y/GDN&5j'h)XY!HE&4oTl;+KUbG<*(ds&2J+%K)fc%SJN6[36h^ZqaQV';Lsi<\Z.2R-Js\!X72.ZA9%Jeigh<X<RO8G;
%@e)W"T8cHa_23-_E)/iT*#NT5>4.K=6n\XW'H@rcD#PmRIFZes/t>Kk-.%lo>k8WW9(6[49Pe;A"YbZ%%YRI/b^]7EUl3#;hU65Z
%Za.+7!=3I]0&e5aqU":YUCF^>9]lIP1mj8BKB!!DI4OhfJLd+\2@jjb*=g[B^d6o,/@p';juHWk?`r>n7%[-V3i6%P(W6sf$C2Rc
%)[tu!;#(5efB+dN@5-t3Z=@1qRd!C;%]<kD3)XK=%UoV,VG.UQ3Eu^kc9RMXRNYd&--Q]%-:fd[)B0ad:uB-W`^)n"b7k,*)r0BZ
%($6iF@(%;(/AcrTp&QKgU*GRJ_r5p3f'7AE;rWfP\0,;\4[S,XaN^$bE?A<A!BarB!,m5p!AoN/"nBs$Ms%mG@+MggO(Y,\,_!8_
%8Qp\/g6T8%P#6rK\==_(e"&3?N#j$&MtFjm2M_uF#,_b<$pQ`OXc\+j5TEZ4+JEmR]26K\bl*L5G[pml3/.R&B*G32%`]dGK#?ae
%$)!EHAq:':G?o_q=-.]HWshJ!aAjjS0j4Y;OOOHEAf9%J&t0.2U'u8b]7@]KY@Pm13)U4/h9tX0e1FK)a-HX8o80a;*nTXn@<OHl
%?1i:5nm.W7,Dc$`#c'8sN"U\hTF%J^`[[:^cCM&PO=55h6,&0n^^Uno&M.tiB;E.IL^He;pBf1A9Q6aI/pf$1#t5o>>>r6p.dRNt
%i!`h^ILeI9FO\$9TmEG/(`J$gW6]#0N7nKP*i4S,2`24!>[.[X$eQ:i,Wc\cM%JTeIXQD-[RuhW+OR8<lkU5T\:KWsF]/D3Odf=Y
%_](.h^r3(G+OLRt?(k)p;P4OM/o82Y8s#c#R."'q_1?%K.8pYbg&m%?U&mI\[MYil!XZZ-E@aeB_D7B"\S2B8TqMnGEdMbX-*R(D
%*%S%23'XO06B'Yno"slG@b_*SL_pke)I)8WX@6n&<(I<=_QHar+fIW0:QYN8\99eN4Ci=0nk:qo/e.LTXI1suNLm,#q6;mZXU*s^
%6InWco\L"Uf6kh^T:aY10gMZul_S]j[Q8OkcZY!^C_3>ZDOqfXF^c`i9t:q-X+9ZZQsbRS8/!QLIFJ6t%A3p*/31N910"Hm,VCh6
%Ur2FM509-r6C#WVGTfH:6K,OCQl_1D<k+qN=AT)KeoRBSq/[h!e*iKbCqsN4(hj2?Z`B0nF3!/?,E2pY&oE@-E=i###+'"2));7O
%>"+N8"1>7NA>]H,G\UW?E!qc#6TiI#bRp('/Qei\Lh"@k$UIqr%LroRaBlMYR.3j#Z"g-+Z-ciQ[,s.$?6[R3^:n2^gbfFe^1Z.i
%9_kP:K#h)RM-*R"fg=@Id1/Ykp=7qg<Fcp6muA%`$8*`_eZid8-7KCTp_G&jAZ>D6Pr:@sLRUJF>%4dn2utZpMj0p8%7l7"E>Gd-
%-e^;-b@=9RjeNcUWIc+uiM?]+ip]^]="s02D(Grs8dga6R!9%&h?j?ELAFamF!4`fWQG5KDl+XBp<g8;\V3`MKLdV$G>Ke(d[tT!
%be8P,4U"Ca!+"&=WJXlQ1;BKcYV%J9W6Y,%DQb"?DUW7:d[O;"7b-f!*b8$R>]@dDY=,@ZGbhXB:Z-38F/8u3M.`Lo?/tk>a,Bp6
%kD-\)^p&dqLg16EnL@d*`=^&K3lEf7b>/P28!F7f6l$d%M&bc3"f\@u7ki<'(]\HXCKI`:Xh"aT61I@`"HRml;?cpiFb)#,XaLSq
%Y^Xk>-f5O"p>tt"2nEj?*?>?Vo;L'RoZufnCqeFP.Uq"^!FB[!Fa%fX6iUGHnJFCXmfhhsHecFq]^AcX&[#KaXLXCr.CQFfV/TZu
%c](oFs"4tEPsK<s-ZT4j7P$Jt(C3?MB*=V4#iP?kJrY4QMC1B6,ERrL&Ce7+[Y`AlPSP0O;B-tC_B:f^O!gf(+kA*J%j71ZQNfM.
%[1:"U(^1->$M6ZMlLl@#bQi!9nO2`[a#uUD8>iG%</6CI"tX]t6X^NtW7n_?k8!8aCgB5">0RVm,)i[;V8X4^ND><=@kgBgppTaJ
%%[;ot)[]%iolu)"i(031g$I.>kp>oYTE;#CJ<g,1JZ2JOi'9B#F[HrF+UG!Fb8Oka)@/_m?(^6U%M4;&A@Ue-nVe&"g#PLR?&!_/
%[6c!554O8*,.:[TN)uua>A/$?n@$Qel6p*b1W7oKV"nb"Ip^;U`C\ss".332X.sKR#::akXuJ)Ja!6VrL%F%cQ,VK]'<p^VYJ",k
%7MOO.CdJ'/)Irr8_&2"59@BbL)]Q@Y#<*u7?p\8M/PJYF396d6*e[g,o.q)9cj<EY&1N5,Q\:J[Jm_6[9t$d%_p\]k2`[oY;W5!H
%A'^5/aMJd]WZgr_1r%)i5aCmd-Q]*.fJO.sIl,,)3tQB!)q:d"\pSMf+ip5bWhI^)$^.%?Y`<71+OT\b*fHRTjE`nL>"DRM;_2C'
%\8Vs$g^@h,J77\i#/Su>i!'mNauY6Y(O0@il&\g'7ed06"K0eor?Zq`62A#SRdN(ss#:QU6s5,g'nWII,M@Fl_AmaTLSPVR'H\8Q
%+ZHFm'?S[Of[$%r^eWJ"h?"W]>hP,Q(jb:XB7ULO$fi>UA<dZ2IT-?W&ETZBeWf+5$g"8tN(nHCJG$5R6_up)'i/oPl/NiJ@H?#t
%Z*nW.WGb`m&IkD_A3C\`kf$^lSV!Kh(NYMSLF@MM%5rafd/37i7Re#Ci41"u[jWh%CRN/_BN!n4q@H21:U$%(JX[":OpQ:\Mi$2,
%)_C.13ko!3#;ujL,8c1b4-V=l;q-F9A'@dhaE/@IlLBOr`bs0kRD-WBL+_bD1a%%?S:jBRhp06f"^K-Z3l6-a`gDS^6Lpkt*bRXP
%%N4;4nW=JL9W)L$59Ou9@&^.g7^hF*CD.q8_lR2JHgUt/aroP+`S)P<COpCI6Nsd;laU=HJsGJm;OE$CLC(I?c8jm4nABY:"f[b4
%@.!M1-i5#+PA-L]9;g3dedRSD>LJ2HmqYI.s(Eog3fA;(6,)jr5Dr1U+c\!%4>q/i9jg[N3J4d*JtZ!0+:T0J)WagsR7NKV*$\u!
%ga5BAT)l0If8\NZV[]AFWU&Cl,BaZ@V:2ai.iT.X8*RSZ+`:je<<]1ag\sPXJ)''lJX:P7j4uobE(;Cl:32VfJ.dFoM:<;/i5#H(
%b)ZS$8@2k$j?c+G+gfr6%rY4s`6MS*'NKP^X>SgF9bhM2e(bC/KQ<RHDDu7=miKcpo't3F)A4RVfg60-RjUs,h"KbC*looJ4I8cB
%#6noC*/tD>T[#eRFc$bk@9;qY[ZE%l?k4Wa,)jcuo8K>g3J$>X!F*Wc>2ULbS#b.QiTqtY@ili-*np&@.ecWs:ghEdJ2%<)hCuHI
%,iH4F*?RCL!O+EZ$<4km#_l*6r"T]#lNI*notHJ+XnWmi1GH[?"pF'@c4\uEJ`AOG<u_upB;us0]m#Il+Q3h9P<sI!K%`MpL9)^k
%@_NT8.0jRt6`FT!\(]>oCqr5c#o,rp&f^k%=+l37Zl,(`&g;1XZ)f$/OtJ/cF$T"Rl0hUb,js.hg/L%Z)=f2tXk1'W`<+1]6j^!l
%WJD1?h+^>&e5SXI5pEjg.Y=)ob=ho87AF6G'@W&+NsfK>Y1l%d;9Qk+gFoGr;66kY-Z/r\_<H2g9S7r_>:qm?36d:u)]T*LOIsJ%
%S]?Z^3CCgdP7r6mmY)Um63P@EmcXJCrPR7)Bf,3$8870R+qH=[b!7u0:Z??;ZcSRo3<f[L`7G%><P)*lncZ!R#A11bNk)lUUWa.s
%Ma92P&KK)(B=E<Km9Z;)/5q,GE`*?tOh0)aX<UDa_-:SNQjM%4J._nY'H0!Ol^8&)2A!%D^urgi=,@MWE^gB%h:tfI&-f@9ehonP
%p](KfA.#e'mP&!?J7]%2U+;VP1jtH$"J<\9i1/I@Nqq)X%Gjfe@n1FIf$/#E2njDj>8<4oBRDX;;S.snGhePmEbQ]*/l$1QSKCn+
%dO8;DF5/Y$/-Hkr&E:,WcC!L@>SEu(*b%DZ=_@KWR[!TM4^?(bOgf2["h2u#*f<,IG5uQWa7K9&kgJ\R(!%c!+Xp>XnG\%WE=EsZ
%OKSp5=!;/Wq&1U`3A"\J)XW:XLEGr9=(mO+3.`uc3>FMG;,1Q.Xmr_AhHJl+Gm(1N*pg-id$hIaW-nu:n72RJHT6P#>5]Qq==eO7
%V9:q?/5(Fr&Z(#Sijcb'ST.57f5d)[n;Ml_EM=SE,TjM'W4G*7'1n[IK;du6:.*RQ2P.A*K_8s)l;i#7Btul.q(J1W'f/81!"?d8
%!`j(ZojSFB?3tRcX6LQs>e_m9NQ>PA<k9GP,e!)EggKc_;9E<%mT8gJO>Cc>11Q3)Mc:k6D0jDS3tBQ+ZYWFuKHM*X38'tiDrX-6
%RrOU5$_kq&H#GYW#'$u*3"(S`!/chnPX?>gaKS+;#?j:l'R.qq6UQD1?P'M\W@IiJhPk;u(dld^:gef+s23g<"I5:L;<3)In%#kJ
%io$@NfJV*J@AP,*ljO:k'f?QD@cNKbc,^0FUi?tt'hD_KlK6"+S[?0k6K0+1@0!nnoEZsc)h17n8bVVCd%Fl!LEW(]q]jFT0"XN6
%I[W*;Am7gOG-<aMH'VT'LQaY8ej7-KO=\fhBqO#]'bsZh9/1\X>13"FF=n-CrTWYZRN_:(bUA#C[QqJf*)t`ZX!ffu,_6+Sn]ib%
%!4Wh&CO[!]b[pj))-/]t0F(VK7E62sGEFR\,gl5)\/qnEqIj1`G%:d*9HRoQ"dr8or,T0#!L/X50Fg0&K@G<QkSEI',pt;6STbc>
%OG0E[1A3^$@'5u7+fiY:GF;8Lm!*?.T`JCh;0E7A?"A3LVA39a>N8n^J2:I@f-SA&Ga=eK<$qi7Q/*>G)6#[kI.oPWGc65#KMa-!
%CZXe[Z'FSQCmfX0m:ES%#olt=<_,sI?=F\ha=r.29`o9X$ppV#V*`,24kNsXeq2hF!pnDA3SnEB+FUDG8/`q")2>^KEB,^hal6jt
%AGV,aGeS5c@_U1)N%_=[">C/sLJJJ=eSBs0Z98>5/]5P"6[G0gZe@>_UDYgAVHfj0ML!B,&AEhLOi+lM6QG@e,[T\.i.+l9I3:LY
%1c\9.2Z(tDU]t*U7!fZNK#Snn(0?nY4JYIu-&XR'M>TWQEO<&I1(WlcaJ.ag6%]2-T>$3K[B/lgc!YO0kt0ZWV7rKN]_ZeZNG#N+
%nQ&!q-=\^Ng,Q1/_b071(LR#\gZ/8P&hkTSELo>]_i/<i,-`cC#^eCIhDAo4Jt7eo#TrW%q_#aPi#knI)[?k8aKIqdU5Y1bZ"]Fl
%*_ph)r7Yta.a3Z3^_5GFmU7YYW3/?R)'L)a?Xt>""@:2+@m_D/9Sh4pi"2XgI9atUIY@cW0=Unrk_a.\CBZ`$"e_CtF'K)*$BIp3
%UW0\as!K>BE@o8TQ.WXe[8Kogbf@,a9'!G&88qfAq#@UV9u%@\$#W1W+r4YCi?TTY$jomo&](98.mZXXQ.s2B7Kfc`PA@oqBTqEE
%A^H'tY?/5.`WF:n!%C3"R>aC+fjQXfZIE\C!YM*W\Ho'jQcT61_(N`p5W;\+25(k^hqL?7kj_)Z*G*AWap)teZ(/t3e:F-p&pO1-
%Dgmi/iAcFY7IlND9cl6OdT,P]!Q!L^XE"C\]RisN-d,RO4;!YQEKA.e]S1+<U',4ii[*UfQI^15EA8O"RZbWJXRC_ucn0rAnapfe
%Kk[Mkp&OTDU<Fm&ZiP8W@CDE!G(_u7O^Mms`Me@)`oDuHN\N<GZZ:Lr9-6c6oY,AS+G8!oB0fK@W2Gu5D?@cHFh"44:-;H;oEfnJ
%A\S+Y*;_&WAgS+:TfLmIZ%V</\2KuV#ZVB6fGKNlhP>QU+V@4`8f3C7TKU'`O=cq"aC$!A/(Q82"S-NrFXD9%J4t:URjf'TFk1"`
%4I_gt2\'Rg.?\#];dlskO,:,q]*spM>T!@j@=u+Z$d94P`rh8).q(:Pj.UO,UNe&S;'>g05sl\ah^>Ws[9XFM:#L*Sm($$X6!DV@
%9;P.'Q#CLuQcFqI%IiFj<8g9U<CuKG_@7!CQ1C0]'87F'X_C=kq/V9]UG5a)l:'%jX&q:j1G8G()\maOR5)ChMQ,-A^Pmr]IKYkC
%f?Z<GiPoIA.ui2'lbds9:#%V\NBk)I@GD)2H<H$D'KdW,50\Yu#%)AFK<MeEY^;p8L$RJKDsfu/P2.M?E]C4m<VSEBToBYE\9$9S
%$."T58.:)65d4@P:+5(S&)@J8/:jHls-XKp@+Q,@P]4Rkb[jC+J_;q6E5Dnq%;D>O_Wt;`i<0MHKfS+=0UnSP\8fAeS2oO:.fC;H
%iS4YQMo#d5>`$KFX5N;3g9J8H_dG;nk(FDN^IJVA%Aa6nOV:JtdT2&8c81]L%=faH&PQJ23/1dSii>MLR%HsNA16>e>o!E!j)bCN
%HX1:($:fJ"@Y?jKV-^I5_@c.P^nL'fD\Q8R3.gGA0e8bZ,KpNG*-'$a`_0,?X&3$)'EJ8s/hZe'E5EpuJS=#$l/3a;Hj,KF^>_Ti
%hr@68B<^[K%inXO.#0EE$YN^sm8QK>4t_(`3"LV[:TAXC)=+FVZu?)k$:.iTJ^)W<6HsD"o_9&5i<6S`6hkBUNu4$i@(^G^,a+?f
%ja\2`Td_?9U%[L4<2DoIO6r#A[c!(g#dqFHU<k4#fSh3Fml_Gr]3oVPVut__;(BMXHq@?S$B'80M*6SaG1-m6GNU*M8>+CfF'(up
%GgL5KO*e;&EE.JeFfHd:hn2_W+/0+pJ$Q(h)]c-4iL5=7c1"'(jB[t7cM%h;LU7)Wb]%26nL<&8EhM%K*qq_Oj#4^@FZ'u;Dp,fX
%B@mp1caC`r?T3m,01D$[=++C?XMb94Yf&$gNV.PtSZ&4GF23.QD+sdGm[;/-hic8jl^K;Je)ugq/j(Q4k@GecZT\UJ%h8*04th;n
%\EIu:Ws%rqT<FpPF,tZrmW$e?#jS*@lZ9]C9!aUQT,6qZU<iAq`_N5f3%0L*'KV3-:j*mqF9&A]do`@I(tGK;NK/'Z/0[p$KkcI4
%XO1JAM^`AjkbVD4LMHIuLQRLXp++C'oMUX%m2nf_Z=n?Yp>6<YN=P_q#EYb/-eL$'(fW3##`*3ei_hEtUB>+%?e4E@k,=t1e`_O]
%T\4`4pRjs7>-UQkT\&BKpDSJ!=ed4?mM0MZm"/E:VU6"-U_),@pi0/T&ScD-"P(Pid/b?S\?\SZOc4Tcc5I]g4-V[`NY>qN.&>6`
%[K*gPFI784$2,8X(<NFk2J[C7LT5if;1!k;Y0jkP,VL(Lq\*R'?\"[HPN)oR>G;qNC"%S;GHF2;(L=f"po+gEguWf)l9\tDVSUZY
%>lUOt>6sAgk96#OKm5%9e'j)QbH%?+/=+K4<(Ric[d^dQH;VjWP=mXX$c,f,*.U%T#R8cXSEE<_Qa=gj;?AN^l>p@%(CaJFh]f,J
%Ja+LI3o`%M"Pl(bj#/j@8<YU."^Z#Lj,2LD?r1:+Xgnfu`g)[bMAIa<oUm\&W&)tdF?F\XimDij;.jXShc-clE<^<lh_`7(Lbhk6
%ChT,p0kY7o-6%#=.MQFG;.nepb`k$N9W`JuX43QKA9m0#F)@A(n!PsHWjh3#-/qVKX)K&"#-OhC,!q\R'qtlSHt2:IJ2LHU%F$X.
%M[k:mB)k^G<FP"u<1Sk\(bg$.@Pr.fTZ3LQ_3G#)Vp<N^8QFe19V$`+P625ic2cKJ02\])JEo7.jp\<oMj6&=#*t5g%!q%EX>,tQ
%`1*aH6p(7PI)s$s@BXZ`+@C,`@Bq;$#2C%Y7lB-3&?_3<i\59Tb4jOhADU#I(;9@QRC_Ip)fGr'CK35ZQoBZ@`!GgBp;5OINU(jG
%[2L&[Gr*u*Q'F91=6V-:ctG5>pnJ%1Qo5',gW]OBg<9mBD$KMQ<X@/di,(nc3_Z#oO,.(_1kdhd+gHnDp9^5JRN!'b1YN8];+LaD
%D$GmP)S<t%1UZPr]Wu-W2WH.1&o.\Dn;,$RX;RO=9j)#X$qt\8,+nW]#XG5X)JKDYV&,i)U`$hG?K;iBAerT=1CdI*%!8L`Sf]b#
%i(H!D`5\0q0hb2p@)`V4&NsA6;1=c,HQE9"'!OC2,V=8r-RU#eT0bE%\5-9fBj[#=gcmBfN5rWVJhCp_:Z>\8T!Z76N3KT5\"qth
%\hP1Z;R7kcF6E*`K:\RMl:Dp%:d)rY<KASD8hQi0L/Ut8%j/!jVF_\/Oh//\#IbiN?'_p%adtp'_$nX@k>$OH.i5@;kD+[@a?_13
%$W\e4:_)Sl^IO#geRXATI$kjfjrB,h:q??Q:.Ejndj`!h;i%jS'Ya4f[<%$<.]@?=%q<YUcquti9*u4k8a0[)d<X"h\/H''^#4WF
%`0=<A?3MbFm]q=2&E=)/Z)`_`!92'Z@-%$<Qc3((SD"]r<0'TT.0QEaOY$Y5'cl/PRm,ROHPlm=SmjgNQQ<4G.#-b20k;ri46WPY
%!&aYYOnD#45H$a]DZ_&r61sri&Aq>e$DJso/LXpRi?#g3N=SV["MDp<8s(;F/LYV)`s9F!Q2\mch#rLD"(uWcT$')aQuGY5/Ahi<
%L;-9!%cfNV*PX5S3%XbM%Ch9YGkNmY8$,Nkr!ktDPEBP8E#Cod]V%/)k3O=k)5FucClHL3AKi1f1n](=Ms0\eis"V%75Hf1iKlR9
%Fm,!>!'TarKRmj,#W`FuTA4W\Iq);FVq8A(f_BNMb(DIHLE1?4oYA5n/6aasn]2@cj=iYmXRck@:I\%2_b`1@Z)!d83S:&9(;6H"
%HN[@Q+Znie6K$ih[tP]E`#sSQRPfDF='m0([k)$AHl$(OQLmj?&<'!.Ud-i<Ha(pDh?*.^+Kl;Clq^h3b@k?']:*SJM$!B])$<0F
%D4p0*=!&GYFS?oDs*W`?'JEFRnSsUk\t]m(--JU1--V82aW,?0&7i';rLBoW!Ot97-j0oh.P5uMj)G45F(J`'kr,i3$oE`a$Y\*0
%9cT1?((eg>A\0K2RV4t(%ZmWl)Lj,4GmU2=@-)2Ih6&G7)R`f"oK:'k40I^C`td2H'8CmUh9g9"aqSOCr`rIr63q9QCcM1e+Deh-
%'1*5b$=e3I.%:c3Etf5UF=l#QXMkKDLN@>IXS_?4eU`M*+8nM'8qi6.&?.!1p<+p1g5t^BpGAVrft5q,_&i@5%9-47j(JXDgbXfG
%^>#Xj&#Kt,%4cF9PaMoecUN^3Ui5\qk*aE!h'ub[3>ecj%cu@]PISN\8Yb\p*cS5_>al`A:"m04EBW(N&$%(T9]?(3a_?pPOblSi
%CO[@mGQb%t9H]OU4m;^B*qrQ@D"l]5Yd.=HN6/,K=?p$2WtXjU/8uo=!kqg:!O;r=,eHqY3'95f//Tk0Qns.efUHlTYJLHr?-=6B
%Po-YKgPVq&UD!$7U(S]LV5]hSN1_6a#a6)Y2H8]Zafd:.S$Z*8e9UQY,+T\7<^)6'9WXm\"b\cKPc8=soP0d$(\t;7E-]D\'ieb^
%b=jmiQd%p`l`qOnfPbV&,kh$(`CH&rpO#IhF3ND*A(mJ@973uoJT>GCEcgNh@jDE[&L_e:-6B#/19*M^r'KMOW2DcU=XtnC^K0.T
%I]YTMebO>[nrt_r8C6m=:Qd@=+6$fS?<.7Qh`1'u)&Su.Z3R?4E"15Jni2LWEkkZXTUK!64?t@mKt+\ECdLC(SZ$1X=>'bB/S&6h
%^CYU#">K'E_1g06\QR/qYd.Vh=3&$E!u+#B_%R3"`MDkPMHbK^*4/H*(0og!phPp8kDheN78rG(`q8J!8hh!\%(CeR3+>79%^9J-
%J75d#.PCWfGYjtQ(B,N)PmQkY^nT3m.JuWEe,cK\d"DIC6!4h&pkqDD9(ft-i1UA]IIO#SguktM#c\uHA\SN=7OFjC+C&75lIV'$
%>L?XJ$Xl3]f11aq<,3e7;3kbNVM`p%Nj15m0k67Qg8?!TRU8-Y8pg(8dkct6>Y9II\4o>uROqe8MtWSSDNL#gfFb6U74#]^?RJR6
%&7KgJS;U\?(UY"V>/&MO="UYAr7\u3o!432(]<8q;6O/@*.Ucma+Y?]d^i;C#,UCuf8/e!EaQ2TUq2qC3#W`XUN80B!LCAKjh>tX
%kp[2cNNIiN"i'aU-5F9j8+NJ:f6e&Za\?oD6uaTU.9[Y/*Q(dH1l=BM)39j<%[TsD;-YM%=.<fX;A9oT/8!Fd)T@E)F66+m(`021
%(9<6cEEiK&gP$QdL!l#N93-*R([FBPBa"`^=&:-P*qhnGdE"+m$MWD2Ds%1/K!m?\>g2::p[(XCkYhc5nYMk\SL`J#F'"la\H!D1
%SK,kETIURi_;'lkb5pa5mK>CF+Mh=HF53in^'&Mp[X#,Q_-?tuWs=J_FMUI+HVf=)$grVWpqih`XW5Q=r\bL)*6^Q`Q!H(fW_$\'
%%sPW4e@h&!m3]RJDh5#pfGXc\+BX>Q:8qJ3N)ms*P7XU"M0&b+iL%06@*BO@+bst@C:jcJ-GmpY_$eQYKh$Te.`X?P;;m*Ig1>H%
%GugL$8"L4F_gZ.n+\D.BppTRQpB',\+m&A8Pse(q#UR&Zl4K!u'F36aneb+j;!VF%p??`CcG9UlTQi6Omt+&i[4e]sPC)P`1V&h_
%&X.S;A?hkqnSooM1o0Q9RXdO_XI.m7"ZKlr)`\;u.O=1e"(=!c-X7=k<I3<J:(O:[Fs*@t5&^meo0kKsgpON>Vf<4%T&=k)KOD12
%$0%`]kX*$MmM6#ZQ0cF^k$[,%93ZpV=;joU$"<<`YI9V7nR4RqNb&%iQD2?-$]"HV[nJ[=&KmrC*JW98M=UNbjMu$(6UpA$*pq%B
%6:e4ibS[&q-*okWYYWD-%<b?c`UBm/:E<B]Q9hcT1`F3]pC@eF_T"Q'#S-M0&en]9M2?DZ"8]=hFE@03*lQ^l_gZH5U:i\WfA76K
%W'J3#Y>i!%[m7;CFd2i6Q+QQG:qgKTNG)1f%!SD1.ha@S'PVoB!]T$/ZG`VYN,MUo;;2J#KZ#N5RLERbif6PN6Ej*NKQRc4D'nd-
%d^Xf[!FW`L!l0Bq;gs"_E9`e(3<Hqp%O(-k+09M,O,fQPE8?R%#0X>A/mn1O63/aIhd$bC2f=aPmOgJ/Fn]0r\HDmC49!!MD0Xm;
%Ca*-!Q<A8N@8guLCJ3WrDS2Hms/sItRK*>l'quq!&2_.)_%Pc-!uS,LSaudm[fdl6rs-37ah2_eO)1Xe*WI4#^;\@lrs3A!F/&[Z
%Ai7_rrf=RS.4=sVJsI'8o`#r1o`#)=o`#(2qEMYgRJoVS-W&::Pl=I,[L*mCs/1oV,Cs_\`_eF%Xg%hFe1;i5f`)3a.6uPc#Y$,6
%.Jo`L8FtSlrK!W%#XIrFc?h:WMR[f=7_0TcPAM$Wn7e=+q>>](3UT,I)F3o?i]/*5aSc>t]>49i<L,2d5e-go-7R+dgj]I/d"l`B
%!KWP"8X=']H<l>'rt.n-G$CsGLg+acgUI@51'`[4^OV@@^Yk.K^Vbp):S:a4,O.LEQF9uI?;'G+#kah(:!$&(e<8Fob5=cBX)&p@
%5E97#/^.62J5sKVb5A1%;9+dS3WP'AjYm*k'(n@gM>rABZcFjBMp'+<MaTNFjOi-7@=Ws+]>LQ$*qt,)J9t\SC-K\K6jDVfl=^F:
%U_CN^gWiKJ@VtPe(0+L6Sh%!'@N_Vf8taM*%>C.jC,.=E25l5elV?G&Rt0IdB0DPWG'bnUIK"d::u(r!n/XlaPik$]7lpJa:8cnR
%<k\J9O2D7Y<2Beai,CEU&Yr"<NMRU9q.!hnNDiR[:59K0SRcag$5>GR)(SaR#;;*cf['0[aiAP23uSG\gFXc/@Y<BJ]9=DRZl#Sa
%$\TAY;T^:g!:XfkA72\C@!j'"V$d:5$#.Y\$c(Lj#&(G1^tNOL@R/TJ!H6Q?@NgsgJ=g5kqO0#:\BF>N;a2Tj?D_fF*#^mBd!Pl0
%P?enl#m11=q[t>d!'h?gf7X1?X&1<"?N;bhX[p/+Jt'nK8Jf2"gV$^R/q?)u<[\d5"TVN(kgBWR.]`-q1gL).6[9r?/c_PjGEaY/
%OKlMV=TIu&(#WT[)&CAK,R`P9WQ-c`fWh+4F-J;-1Ki:dRe1<h/YN4d*2=Fn_hH<4Bsr-c;q3rK2.$?&(#>$+!+6o!N/lBne;0d@
%(P"].C)(&#?N>&1OHM7^X2Ng12u)]jeV)D!!W;5"=(`2dVn5Q3+VX"d"Z9WeE"+<i^&Wb)=(ZLYC;'],C+PP>$U*.L=obB,i&C9q
%PtdbV9+0*g!PkImp$#S6k,9`R'%7!chE%i_3]11Cn5=I12K:Y0>%J@$'j<4sJ0oPCAJ6H%W=MdUirEWqKpV6@"q]Bb9")kdF.gGm
%U+S!iAdg6#U^UWIU?3%aaoHmmPs*]_!PjtX-n,6D??Y?+./N];I-c"mc(Z6TIGCZ^9p=CbU;@iLclK,8DZILlBFor4"+^'?$uBG`
%XI,.T4R>$0*YuluoY<(ejmXSi9%//>HjQFloGih-Qgh+#m-Q"?lW@]Dn2ISmZbmECKeWS#<WdB$JH4fkU=PVTaoHtE8JY8r)$$o5
%Ad4J&aIno2;CV]E"oq%DV+@f4c"`uEUC8:%e3P>%5_&o]>F,$j71E<l.0BtGVu\Seaf=Bmj,Pn!_hg-6TNs(9"(Ph>O$bl/KPL`'
%+q5*^H^%&'!%Pt4OTlA@2%Yj+J7,[';Fh]kY\H#s,n1u77CYdfFamRhU]CV!`Y+Ln!-iX_q>9**2*jlK!s!)t3hm-,Co(E/*cqb'
%1-!:bW/WS5/(I^Z*OL'T-*1XCp4F4Cr(03m!*k_;Kei_%k-6[U@#$1H@#$6q+R%)(:V]R@n?C2)g<@PPc2_`?R4lSu!8N]VOY_Ml
%48$904:9=ZR,qDWis[KrkstmamT9QQS7i#JBFAa/VT'Sl+V#X_lC,#k)g2C:O9+j?Ea;FPF_)k??1_QL"Y\WN'AG?KTu6uc?^?2$
%`.;KQKK-1T2C/j'%HeUK+@$7aZ<l+5_[_r3\(r>O!G^diAOenG9@68Km6iRH*CA=hF<WYTi34ulliF8^S]H*3T?):_:ZVH><2KE)
%H'RMV6rf]UA5uQWI(W3I/l0P0/k->u,<;^gCGf)Y81kX78J'0;EiJnW@m6&[5s(8$\3G;W>/]rFg`OY?3$66gW7>B:G#5Ck5pDO/
%dEj*uJ4%[k+<AQi-/bY'%t)M(_q?ksDb"hEoXC(`_o\0,A)3S)V:D3ZV.;Fse5QZ,kcX)93=ksr3KO&i\J=;&\`@!K4e%)<)2[4q
%k)rB!e?_0:EboIaFPQ"Ka.LVm;"bk>%qi4tfjTY='9/pqF#]H]F$>u_PHG.3.qf0/*qonYIKa':ra=%3H8#RC@8j#G#BR+b/BpT/
%j^<iYXcp]dEj-AO@^2QJ[CmHMSFe_b'YlT,UHk=u!8UcfEM``c&e0jW216X[oTV@7JFtKc"2pT/:apaO1Bi#;R]1q0.DW7:Cksm$
%?re/GS128&Ye+#"1PK4:W[VqbG+`fO(>*Vb?ii2,F+sKnX)I/&pY70cP:]"QYO,#=6*<>a_O#__G-5f)RG-W<R6o8:=*B#@:_oe#
%9E?+QNsR76!36'sZ1TrTg4cFu-(!>YPUWR0CtDb9d0Gtd:.NHka$!u@?>+Ni&7l26/OU_GWKWmYhb+jXRD\#Vh\ZlISBZBo9&sm-
%.\NJ2N)cXt^f6pC8k`m*kh.D>>1?j<%."_4TXi#_pO9BfeM5(q=nVob&QhA%)2)TkA=$2oAjhYk.B6qZj!3)-]GZiq<E-5Y6-2P!
%aYh?O7GhA1S;fS,Y42Yf7N6K0F11?uhDLn7$gb-6S6bA-FcCINbG2ad4E6^X_6,MC`V;*b^/rN`@uksQ3(H,3]n!e+]YNkM';gd#
%qSek<+0j$g^DLtPc*LcIh+]Ne(B[d.*m^fmS@JV4/QVS'!UP,I`dTWVljiFf^hPI2_Ro/s!EbU0aaS5iFtJdLMZM.m;943+NcrC#
%qS`G8,7TK:4Q2UmIOt&KF7^4GaPlfMg:>3`H,H6rSa3pjjWO,RF0\GK]l-#Q=2BuH@fWR#IaVh60_:9*gmhbSAg0mNEV#2RDNb+?
%eoW1i4jM`Xc+D"mJR4:bEK>1HFDmA"7fg32a)5a@n(<,hpPqE)^#Ki?n(<]1HH.^"8T,>%mhf[mRp['aZ.p@)m-qlTEFjOJ43l5_
%mJc(-<#Drg%-tVUX3TM\*;0:<oo@i.WH5]\ReatDYrm/gF'DP"`BJs\a]1.5fKR5GaB!kNlpIjYX'AZ2&"t1bf7QZ#&$]TK>+KIO
%6D`OX@NRpboV!!Za?B_Xm-V\q/VVp5LO`UrHaXG4W13mr%p)Tp6P"N*$Hg#Z'Dp/:hG3\0>i:M\Li[TG+$+dd#6K5=a:7Y6dSJK?
%(%1J,'kdCTb-Q"\ANSS#g$sL(JI)&')i,B1T<!5CL#A6kC"?_\?EgbYR(EMLe2h-3p;&e3\@2t,I<J6.f&6a!;K9_-iGkLVXi%GI
%F]EW7);r]G#3b_U:eqkf;DJ7FUs`O@(@lL6,i)&sTO&fe\!$,D]p3EMr<b!ijPL^?DC&M+\WmRhoC=>+(r5KNJo;r&Ht_(7h+@lZ
%ou^6;5XRprZma4V.j\H',mu#&,q$6h$pZ'.aK8to>s:8QQ*r3u'.dBE(N<Xb'G#"_)WI#m3#7u0C$<^l0;HEW.nYll'Hm]7+5dLK
%?fA.Gkkppr,iY"e./druMG\4e!&Z(MMLtuc/6a33K*$e'+9JOX:FMdX%0oc5h',/a@6Ll^g7SF\=\)U5FMV7":i+g0s&9pO5^0mH
%Q3N'BC3m7f%17?&F[4'6JT5AS!_(Fm]/IG>#6d62\UbG"Kt5PL!iS*B1-Md$k^kGqn$"3@I3/ZZl_0Y1OT]',hA@%q3YkMYRsK[U
%Sn&8.lT0/"JsC93(`V-kc`mX5UnlO(TI+DEoW[,_"P"Q$U)1%0RDe(%4UqK^`.Z&9Kd@jCQsR`8SY84IeJb*Pn`AY)S-#^L,M6Lj
%B@/QVYE_IuW-?)?#3)p+HQu92Jf(g@&D8rIFq/?\7Mid8$XhC[]Y3n_+pa&<dMj4G+NW=Z-r0hc@NN%1*m$Nt@KbVX+ZQt]#CoXr
%MEpE+@#r*u'cC8;HSBW3KW(,e%XcFp.(u/,?77`D8(4Z)]1tGLY5%[Tcbfa8@n-[@3tP5DKb(6?_a-q/_:r_`W=eS@C*pa\`rf+3
%mh?:fH7"mYYd?[*GR!(FfslCAF]j""j;EUN!/"E>]J\`[[Qm;6i6tA.X>M#*=^iGBZ@TX#&]]mF%uaRnUDu>`5]%s_R%u'X06fRk
%X@<L:G+`bQ*ZlindPDJ#E-S5KRt0#*FC@.2koR9k$p'^XT4$6s=YEA`6<rsOl%LP`#`:JA':5O!"Y9*n+1MKn#Aqi.*Blmo<^K,L
%dd<\79VWnr22VTI#Zse3r,pI;9-/Qs>b22W6gF<o)ma*@49bQm3#@Dqb7]K1FVAc.2Wt?%`g\*Oi8^ehOY>-AA0/mF([=-VD=BI?
%C6OEm-([_>k7:Ka/AT7pAa"&kMg?&,]<`4m<:75?Thpn!d@L"'4a]=IPbiqP&X!.<Y(6(!OQYuLa.W<XG*3'p^UBl27deUjSI2pS
%2\*F.[!+R_>JWVI(UEBJNg0`]flIuIq?6m[Oqhe?8mr_R_F95lgK<<)J9Dg6rSTk(HH>\<(9n+P=c$_)c=g3>'FGPj\]4g\dGfED
%CfR9);'*d1-oupPgq!l#$bBgO4.WoGE!qO^U3f)lEObLmPXa&f=g+jgM^FC6/f::o^,6ML=Bc8$\R#7Tj&X,Z"K;V&8/dTed6$6O
%5f:LkqTPLi66/?`WX#4C97b&2Tbr>GY]F)d-e.)@X@*R_kD>DVcca3]([s34I1tsp#7:)\al"WeWD!L*mEe5U.t!UQd`Ma9`;)pk
%nOV@</gU9%Y%6J7Zf@cb,tCnn)4'!FZZ9Qg\*@DgMqhHhL0>(2CBq[:hMhf:0fAhDq7T_r%CI6c\B;?\>P"L]PZ4>_*gRH&cml$\
%VI`(_q)m7\g-lAoZOt#j6sK*TJ3gR<JUajWe.F9,kJQ6ic(K9#'G*lTV3#4KJinju^M1a`KGW30Q6dBY-mOPN7dA(M"W26>XV*fs
%T`ObJ<eSRSRDn3FT8GF,=L-m!l*oCgNtdqt0n?i.I.VH9F$#F!m?8d#r0(rO_lL?3MS=\G?Fdq>9m+n`h?Up'=$3";k&]:nl^Nc$
%OtZ>lEFZhQNSXDVQAJVQgf;;>ed7T;DMu^Wi-a.LGQ[ImR[->)bY^VZ4$aWsf+oV<^,*MA_5>O&XU$X1'*I-rQ(e^YOi(MDCVoWa
%<GfR2OpR&7W'OX=+@7Z%Tad`:5W8lsU]e*aYt?-iS1P'(#pbj0!toGN7j+Op!0C,,3X<=k?m?<`$:=r=@j1700kFLQL7'n,Rhl9\
%^7e&B''mj.[m`$Ma=PB:)'V;M3]`6ET,*"r=i<:Q;<KG`61joe%p+tWGk3Xa0W1b__X>>(-T\"WT_C@rP8*^H@q8PZ=]Zo#38=,o
%fqR#snSP3@h(g&k=hkQ[jj1R&nU,C@HCZmm?3prO$4;:>UcVRF+6'YC39CMi:l>n/3LS\BJprfWY+Y8PZOsu"dmAPN+=#+/fGO[1
%\L]FS;9o4hZ>EEp>lsg))+#$C64\\X/63C[AJoeKV8:a<A!kjGTYD<!e`'tHH@ZIf=6]k-?XR6&7lK_26dTnY*q[@M(j9"'PH\#^
%eP3V$\Pd+IKk>s@P&97#%1"m&ZnfRa#rH99n"c0`&p%kT5#`Ch8Ho>Pa]qF&%t]EcjC,,=^qk+\:f<tEF^PdI-1]\t3\JsB&o^9;
%b9a9pPks<-32q:.M#12!Y#jeTi:E%1Y<(J2BABpi92SsRMdAQTYBnauC"99P-`4TP'raBNYBolor[sOVR_dIShF)aIPCtofZ3re"
%8DH^Q/n33`.(7#n';4-]E$bUH;$AT#(a^*`'T+9A@6n"o79"k0m(,bWo*l[f2GXS*80/Y8b4qN18I.p\14!;0AIgu!-XB*/'W[e7
%3#L#%&c(B$L3+7M2)IEB\<*^W/T@,&_6M/D"Cp$("L,0<`:?MEi^VH6E[gPoK?=75=g.-ZZP0NmKI;P86g`:/^eoK@CO!FDIGgS9
%@*gZ0-CeG:Nd.2]5VB-i#o/Al;s)s^j!gpNau:ccg^T8)%;OOQN.W.DeUTSRWo]dX1Huki/1iiO3UiJX_?t(18dd$T`(IljCbVKO
%&L5:3I9^,F*?O?m\;.o+C)3DY@YidGU:A>_p-C0Z:0`&>?#Ln=ltSn0Dt#*A%Ce>gjEn67[_)N(8&1",A6]tP+O6tIo4F7,5\B`2
%;`E3&PDWVT<egl$nR)Gb.=-Nm4S/"fecj2]bEQp:8NS&<PH9rf<6:AR^uC[9n+f3j1tm\,!]NcPB.o6._"==+Q3K.]+5?!chFAW.
%ajKF%oY_DB2=qFDJd=t$GmC?bkrNTX/Haeb*r'/8oYJDs=@.Bc._7YW,E`gqdtjiZFc,tt$Gp4W<fYu4J0hSa;@C:0^fV'`0t@Gr
%:J/VdJ9YRX1a"bm3@sA%>mRGC/*L:8goN7@A[s@A8I.[lh2@)P7G+5IJEM8*@2U;jP%Y*\'g]rV!/$NY-UR@.TRf3Zeu4d4O,>*H
%)bH8qZJ=*:$RC-?3#r)L)Y_$!.,He\Zf5/,e@c@/?uuR@lPd93H?5\TNipuk\1`"l`J/#j5f4(4m,=Y>/W=2ubQb,J%MG`0Tf_2<
%PRFHG`8hOff[0d/A9s>_W"7[6iXkC2U-j^-e6_,Sa#h--`Z"uc$Cl[Vp-SR,'10dQOKi0p17EZ:K.Rf1au]+$b#mdA*;5n(TU[b3
%8#6hF`](0J14Xa<VO3Rq5iaa,-elF<Cgq.W4H<g%N0sog61I5Qil<9Ml/Dhnh9]R!^jB[eDg\>dVEhSm@3AjWOc@DYkd^juCNj:K
%,"4>KV2!gD6^^$]`Yhqu"FD8X-K%Qu2+C]:]/f',fH.t[5O91WVjeqQpC$Ht+#GMrpcp!Z]3pik_gE9S19=[LA4J"nr[QVF%Z0GD
%p#hj83XW:.gk1c!EXlrh_2<RU!34R'Vsk<X(Z;\!8%s>prKD:3et71'!+$g]5SpqO!D_D,]*9E/IsgX8iTmPESK_@uI*a#2oN<KM
%L&!)0Co5`_Ad41,/-7_O9j_iMGGSkoY.9*ke`.#g,p<`=:"Kq3b?2q-Wjj_`'!qem:gUC-B:odjJDfb_2N8_`i?3,<3eINW\QR.J
%YM]g^(`frrT(C:)n3lGT\e3_TG+$loW'gt+)c?#+#S;njkFSjs%94fRBKES@[n^OXpImYrrSZ][g97ggKH;<RO$ln,`jjCk":&BU
%70NjR$jsBH5R;8c=2c:>>7ef$b[XIm.Y-TK6t"FGI9#_3HR\e"0\%P+i^e*ES*ijt6PUpEI;%?MVY(Z(-Z9FY0SM.86B;\ol0HKU
%G_:RSTL$IdM*2+KY*BE'6k_(gPa=]Z*a-k>%XN_G/E2AV'MHC9!,Q(qC5kZsc%b)<2h3E1ap^osEJ,H43o:uHcAT'&G[SfAG*l22
%^ed^i7oE55d82B1kJ8OP9oc.KM>JF('UXr'[01r^[U@]n!%o>S+MCNX;-T6bNC1aTns>MG7K@iRl>T7aH:agNk[<N*eBje2\>*Q#
%FLc]"VRVFnS*89GGSShM!KT_eoVP%qH;fqd1e,k=ms+paQ=JB00GkHbk[d'U,),aDk)]4&DDh]>]b6p$nFi'`!0tDt+_hB+Hd6tA
%A$P`DdbFbobspG=Bk_5lbttR4L+lbdUsQ@YJl;:Hj?$E&!g'VK!;3)`!NJU(H*ks=AsG4"/%TO691J/k%).od!/X</!dPFs%eYH4
%%>A8i88u+#(=aLDG=[$3@`50Fjb52?F42;Y;]_mDNu+/C=7iM6L.AH>`U_-)JgN6bm_jqMY(L^"l61#LnsB`1&FB<ERg8d$oXLdR
%ENd;(^l4d(2B[*N+!;mQ-#gb[P#0'KpnU>Wm$%`?Oi'LPFUn^5$AJoN@"FS/QT@_HEr0^Og),ap#E19rJ-pF2$01si&#'C^k_Rn+
%#g0PXi6jt@NBlGe$jplD(H0!L*otWo%ndg%dOOcR,P[)M23sZ9G+iq&2@L)TPnPhY>X\f]Q6&o(184H9.gbK6l5+Ng#HE(fF_?rU
%1SLU2B'IB/b.MCQ\C/X]Ye7KU)?q]9YNChNK]-lEn#_+?Y#5"LjuHC,isW<R'THYmJmk$9I]dpk1O91hZ-$VZGps9SLUBS,s2*nc
%SQtq'2SOC\fc!Au`,RZuh`:N8I=^i&_aVYEK%#Nr^j'<+mgP8#6dpjuPba5RcH3%`_hPSlZ<1!QcPR?2MPc+b+:2n(.9atY+>1qA
%jsGS%?(s`m;D9@J]",(>7odS#e-<)j.D5f@o[7liB"j6Bi_i55UPQbZ,#W4d[K`@7@<]2#!/9FCa&rYap=,HC/pP68$,\/l25u0K
%)oJU%FP&krE2[>9=bG\Ik`!Wc.5=ZG7SFfT`Yo-S1VR3;ce5o46-$MB&>Oo2$X#Kp.7kFt)IZD;Kg7$?8Po&_MUG"cXpUK\cNE\t
%O#p[/=i:&>9foQlgKtmR*06/jeLG1KVCK;*4]4[OOgL4.\/;VkgjhFA89Ud`LoRNfe,c`;0$;'t0.t14"-:%Ki@STKkI[Q<PQdN6
%Tj\t%!3`%7"G\duLmg2qH),ZuJmAFlQqjE)#f<seCOWg$;*\[B&m3)H_gmF>^1V#bB@0i#M!?4-)&fZQ&#Q(#\3Y8RN*7KQ<IUDm
%F#m0jBZ)3W#9J#pN?WB`<b"\5/YrI#Z:+HQq;eW"MO[Bm]d8aK'p.'kZ2b>u]94``kkkrW=ngnt:g^j)MDr\#6;X!cpb6s=Pm9Ci
%\fS?b`>aYfa$!acRa&%bGU,eBTl7@_/<]AbG$-(.5?U:\KOK7qn%+n2a\):[&'G]P_CbmGH+%,DAl2NW$CXDAeh@Tr"DcG!^_ZDi
%;GbLmdYMEkUnA^J/nG[)']nIS4:FTr$al!_"BDa]W.CmN%=*AUSrLs9&T[mY2C`2,^^V^Ka[^g@eRJhJVskh'cOn1d&S#:(M=q1u
%W6R8V!<[SuN#2=#!/6=3pNi!^4%sB!+ppmL2)I&6)On'#F&:9JgB9'Bq"CipJlUVl)Yi5#[nuFuS#i8KB9Wf_pD(r9I..+9_-W@d
%K*.1mZl(G988X;OEA5DsJ8)1.NJ.sp==2Y'C&qmGb@QaX_e&/^@BpCD)p5kJV",)T;Yq&o6(+<]6''AqrN%,&*Y7%ViNt^TQ*MMm
%Kub](_0HfZ*IWRr9/h(47^M:^k.o*1P(N6AX:F%=Sp#m(-\?Cs7;Ym\W^V*cIp]N#AIDi/9)B8adOi1^PUfm]1aSG-Um:[gqU@Z@
%=dM*-_qH&J&&:sR8i_O8Y+hL]o>@e;SS(TC$NNU:'W\^$]>G-13PK)-<2l,C%`9=]E'BS#$2>GRAE3%0,s:U7a"s?42YhWL09O_I
%p@j]u<%5WoRe5bV*r"h/WEDjG(%0Bq:>2'+$276]f=R[M6NDL&4AqUf^4-$crVb@2c.`Jj[;ob^.]XeSH80>Aap,tS\:C7G:cCRY
%OK`T-S(YUJ+RW-2`%/..&X4gT0LnSOg4Eisi_b-a(=;hgd1Eeg\OpCOGYoBpQn$8p/:J$NnekPL@-hXId%kpE"r-6;6j!fE+mg_'
%R3'u&'ctb^J(,oE0)@$`>KO\Y3j?(pgiq2UF+k-&+"'%6\Kc&ADj6(u:fqEK)lj:-,6to`<n&LKNou+?a<N[H(B_!%+;``BNp.b?
%\4R'XZoW6SjA$tXESC;A6`$[rFHCNET/VmfOMMI9N*oufqe`W'kJZpDXBd#UFF@Y(dY:55l3!Vj2U,W-f*%;[F7>h-\e^^[B^"Q&
%%RJ!AdG5DuMCJ[_5$Utn#>c$>Yn'_RBFu3oQcqD*1KG-uL'M('Z%o)L:t!cQG\2Q)aiVmmlpl960A/ame!#PO11N```A*M[?C55j
%]4SZ-*)!6UOd%0-*6[-E2O8>61DK[\ars`E,ubdkG2gBD`4?o1H"N)um'$\gQ"(,-@?-[o/13&o-Q2q,F5dX5I)N:CnZgnX*6Yu5
%StttOe->LJNFQ+]FlYQK:oqR?#+/m\_8NaUN+31PVW2&(95$U38>]KU(F41-'[&V;+QY+^4n6?t-^n4Q'MGB)'#iO7L*`'6OTPT[
%=9?P[m4B#F^f)sT$dUP95tIAL.@.2aWh)'b`=fa/`h$'Z@62Tg/VT6)/#]3Vp4r<Pe,%3VYq2A:N.k_D=JBejM.5^AN>TX?"S8i[
%`H&Dg"@l7m/=T*+Q!t%-7JnU2=CR8TTNXcUQLNFoV8<hd1(V\;AWe@@ok"Hj_QfW87e;jS$"3*8SE`Vk=I+anCPc2[cimkF$d00s
%6-Lk*Z@p>-[erIuKOQ64grsGtKl>Z&[7W:!&ua.WJOZssFr-7f/7CTM`3@W?U!/JVl?esG:9u!h1<gH/=`P.?AdN$\OrbAVc*D:n
%QuM1j6M[%B:*K3[=3u2X%QBt*oYG!1bd2uk/LoqBB3@.90NXhlb*Y=HnjF#T'lh>6b?Iq78Q7!EBs/eqPKi)s-*#m0iaW.PIYN*?
%*$6\ShiGas4Qtg8*r#1ZO)'-E6nNn,nM0C"<hHVk(jnkQo8nAipuJZF8"fD2]"+jab!opNLC;YW@-a!8@g+LCW7$::a%Gm?E/p!E
%Wcaj`5$!3udcDu15$"]7B=.G9iKD>-ap'e_ods;LBRgN\VBenD/<su?Hju0_cj.WSmNZ-DmaKWpKlc%)aB"g@A-f1fj<,=j6VeUP
%8;=Y&pc(g!T^4t)O^XM%2)HjR<pWFLMie%-oFR<uA,pYh]-ToNGh:(p,3#n7)/Cr^!;YWY,t:ojKtC[]0er_\TZ/^l!YmXNTu:DN
%JFi$,`Q/B+@;:IR_d74l0/9bqM9iSZG_Dk5P:hXrZc'rI_No7FNKHpDSQ[(VMNP$6`Q/gbf1/hLEXK>ofo!s(<2-A)iaZN'ft'Wu
%/OicuZ!K:W#('S"n4XrGV<8I:o?5iXanutO.%/,(P\e<!9'4/sULZ>5H6Q`o1;GJ):*a-m!?oJ)i5JT7*?N^q`FmZC_a9Nl-lIQ)
%#2^t(L-)L(_IS+O1etK2(+;6^cdPEfYq"5'<pMqr<[P'b]puJKZ([iu=ZmJY5eN,b&-mf`Y(\i9cjFco\/""*ER#4DYe(R-cEF8]
%a0\/Qgc#uH=GR&F[F9eD"Wt2o$?=upkb/n2i]p>hS$Ug=h)K(GLkCG+>75Enf]u^sK-mOuWD_&fi`%)sLIYVXEQ"ts=u4s!i`L1B
%oW1>3F1oF,YMQ[.M-E7Ul6Mk`;NQMpB<27sr]g,5[F_kI\e=lm5l]ej#p;0Il$>RY:Z?L!h7u=S,H"s-+<[>\#`6X5Ud:+Lr9pu3
%R#e9$HQU7j2k:3?DV=*t5&8]KkH$\a*:r.M4?&8aoas)J%XCE(@(%Cs@)iC1DO[Sf*4J(CU)_30N1m:*o;i:1Ha..+WZ:StnPnTm
%kaH=^b!@TO4&ldXP#IW5^jN)$gg\OQO:>Nr*4NH=J,h*kS6^i-;-04'VTL(W4B4E&/*a+V+eN!,<&oc$,n_L4:@qUL<B2*1qnn55
%lX$^Yf\9S6TetZ]g9Lq7hUYL(fCMbhhU\]B0!Dsj<NctDp9l!spU2+"pU2+:]rb9f!O;@,VDIgeDelC7bhCeOY%tZ9D>:WNG`KMI
%[H>+!g=oe8X:*q?>$Eh<[C;iV[knBDgTIgN,M9K+elOhChqK&mic0$NBZ%l"gY7gI;f60$:41s:3``KQkO7?l*k%[30#$dkB]KTf
%K]M"@\kJZ)DgO/uO1hZ<Y9.cND0WrB@GBpf*A[G6D`aDtp9pa:[_9p-Z*lR'.sVnsmT-IY>_BGl@F127\(6VB*f4fP9oCFVDJa6U
%*a)\d^s^ia06`e%D*,CKD'pr?)mCW@WEU<,b?!K/2DdD)K3#Ii[co=<f%-/(pT_,3Gh\tZ5p'K',dr9:+8(Cn)p2#OO+OL9NKoms
%9f<`EUjLH_)/q"VY^@$`Wthj[m=JAW"rN[[B*c?I"KATq;4k((Tm0Jg#tG=fmr'.kq;5B\:BYL+:\nds1K24BI=1M;.CRM^[["R@
%19M_:M"`"GA'8c`D/E+I_V*f22l>uc%WL(/^Vec>YP5R"n9WhI(1kfUh?IkGa#;$)Mmqqi5Bi-Y#F3'@EoZ0hT+s$&IAL7=khrWu
%8!79-"h'[n9JY0HI0+1o.*f\@!5!$p"<Too!2_`QliC/UQUgDl-<Mip7UG>>!*C&dHe,p&d+h>=27EngDmT5*%P6<TZ_:+aF^FNE
%\jI3j`o376p@<OEM&+EL+s*6V_**\5jkH<2q:Gd4qIFC-mt9d'n7j/\f[iT^PC_EK+5"Ff2VE(AK`JWqkIl'+R;:foJ4/2,_6UQ6
%PE4E*AJ:PA[Hi6q)/)gMZ<5/.6hceDFbXD)hRnlLgt*l]hA>,!2Mn[e0#KV:f*-'ka*f73CLe#b>9XI7`tggP*NTmnqYTVq6q3[]
%oW0+Y?TCEtUQ>D-][+1@HW]mM#eCL^O_iacU;B:$)W%j,F@mfIMk:d9_F[V@`E=$dl^Y4811o#@N%H.(]%-Ic(MfW&;VWcL@<jBb
%X^JV\(]9%[("d&3`"egWB.ZAKhE?%Xg[4=c&UL5!m76@?T6%87A@@G^gpR(UrT_Mmqt'CApZ^4BQ9W,[$.*?uMa)[rGCTUPn,E5*
%GCP(6Xtm9[q/"gT;q1dAplO]r_!9am-``R%3Z-O7%ha44h`Ync>D?0bq%,K75'TbB/8p2I&1FQjAUgs@W<O@/'!2*1Yp(NM59Dr(
%^8\%m+"G66R]O^E#W@$[G'W[4f]13<bm1\c>P7.Ii9nkIn_ItF_NLC5&)Y(r-a)<RJh*0b]_M]^*oPn&iZ9jVDa(t%A>JX@J7cI\
%mX3qcQ:Tj-,95Hg\FZEm^5,S.SIaNR-14;FRectlGNV<o5<,ce\atB=AJo#_FOSe>e=-t_n'*$6hL$`uX8cXSo1*nN`9!ZLk4R]X
%+42;ta,eu4/4OE,<Ok0'q.$2\Rl;Ek>8f9Vbs0&+bs-0<+03c=6YQ)RT=>=sp?_D4c%dY=k*U4.rm2:\+*MQd1ndpkC>06epWg[0
%go'i5c/69TpZCr>m`dt9p#b`Am,!+"MOQKHS'M+W9A]A(%/"'J9UdPB*_q'/^i"VbO2DV-G@s)dr6gC)c?udu\^[9d=m\B5cMS>\
%cMRq'q9YOjSCdIbF1UBn[hR*/%lgIK^2m$k4Pr,rgOF?b:A7!+BnUlQ"4$.c*tFVBcbJS3N[6>G2iGqk^2rol>7N)GeL*5L<<Ps=
%XVXlE53W/OX$gpLU_$3LOF]4%fOG@1WW<&rT9,A-`qH[T.gWhHcS*iV5@>XJJVXn=$ubWu!,udOk/Mq*Z*OAg?udPR)p;EJ9?()`
%(4s9<Xh5Lg$+B3ONi"$2("UcE_%cmI:N1^]@\ae9h>S"6:58G+GO_p3k?J&uY%E2Zb4B4OgeFJH(<A%5#32p++k)luG0--g2:2/N
%:lncqk/A,>D/g4d&AB84*B%b8i<r!#+Za[fnHC'H4$@0/l%1_'6I2A6cFf)qV[MK'(+jLQ"Xge\bBOi$jt'tAR[MFR30A<tr*2u5
%S43&h%-N("Me$!A.!3:.Hp/Wo_-&=bZe0lFg.KO#[NIgoZPQaUYUP;e>7`AWm_Vl1+@b!9V`S+%DQ8"E>7eXl`fP2O+9p+s?pYV3
%e/_e)6/]p,WanDqESk^=0lpAfjl-VVRVAeIiX3uM8m59lgf+]+P9-:ODOpC*9#Y"]/FSp%GVsC"c4u#Rl_4n==)bS_5B<nLUhYgG
%'/$F1?5L:ibi/uT]$=[G$?DGkQ(O4]i(A$dS])>6M\WP-Jsa9t<`c<Z/0_JEi8P)Qrho-kQf6/[LTn:?-b-[<`)kf5eSfDX!i$+^
%'=,dk0<3s3??c+9$:9PmH8_AKHlSpLWH^`ES95-!m8Up4W?aN)&>Nt;9W&6Cjr;o<($$ciNiQ%].7if/i>O<MBNMj;.QH0!lXln5
%(.qT1e-TOjT&=&bDYRZJU0ZS8qoTVC)A0=3f9h0RaLkJujncdkj^q0#hu<(>M!bH!%SLKQcSKGia4krcQ+EQ=:H?75?&BiLS<A-!
%/"#u,(kQELD'2"Xpt4(poZ(tA;i5mo!TrP')b+[/nd28GQ#D,@Uh&uje@\ml7hbHU@I$/G@7g#_+k!SH^*:B*Gs^2<@Hm`J]>1Rp
%64U4k+et+p!5j"*!oMt9"Rk9ue[HH:-OsQ*_=FSl9$m!hgiKR(+'"am%SNoDJn<CkZ_tB)7`<X>n(m_9,oMmkjQa1N0F#m=l4"I\
%Zf0\Z)Nb*(CJ/@;=P#EJ;SD"P4^kif1ULaiYWV_.=YmPF2B3)h]01NR_VKWJK?qBd@?(MW`b[8.,\$l%o<Yp2+<DMhZ/FU[M_I6Z
%Z!IlQ%0katLgi+V=NY\9a^t#@Sa1X>2#)=%mLS@O_7jr2",`1/NGdpjE>g"1C49(8aoH<G-5&"i&B@KdPk=0;Utg!tI8`I0!4VfV
%[LF4LLBS39K`uC&$(gO&o.\qUZoobFItn9up+LTIB()>Ir/&85:MdcdqhAi]SU45CXU0(+-EXu1<'n&)gG''CmcYE"4CRR3oqlRG
%<jU(;>MlZEn>`n$VS`;Eg"e[ZhqnS?!OM([L(eCBDp]1/"A&:ULGL%Ygq!"l&1#nG,(]f-E1a(!"Gpd+BM([STJPc-p,\jH.)P"q
%`5fG*0HMX8CICf\n-67UhuRa>_&HWgJcbf2-S[o$RW#PS',96t&<$q<Q[-Od\ZQSsmNo3,+Q;Oan.HCFkDlf`fjs%3>^9">L<$J@
%&ej>.\l-1o"?G\cc.PF8`5>1_eJ#Xb4/YLB[OJXT"9GEGpWGPo<[$uuJmlVDo/=ECP@!7"fGq!FZ,ZqQHE)Ye/7U-U83E!,@q)MP
%CL1N""+nIlf7B-9+Mm&K0I7id"+!6%^fNej#*se4J4oE+9qo(*T3FQWR_0Wh;PZC]/`nYT5j8F';"SuTqoai/$jRCp964NF[k8s6
%%g^=n\;s5`Jcn4k>CpZ2fo8%&!C>!>]t8VV&>6R'NZI@rpNdMaN%qI,KDk:uE@Dn)NZ"T?M<`Ya[U>'1X1.P66/\&OkA3G7HT;D<
%"V5Q^$Qf)_(-HPG$PLrW:1jqI>a]Fu(6k]@[DKK+6K^?\Q)C>eoeI7$=chNgd\,8PSfB"W5@AR?fQ!p@*'Mg:9L42(G4afS-<JDT
%Np[:Qk4J&%D&f&p(upq'ZnV^pHt*<!GdZA1h!a0V6+T5B?$p,hZB9-$+I6iaf4<3/Z]VklQcJ&)=h)_R\+'S%HYU+=bKq*t3B0n*
%VM.JR]]h*t$LZ5ZVP(THpK8[>8^!W_iClPqV;<o'!H+D=1'N6V/Z=Gi0a4CHS6@.25u*R1Z!K0hD_PZ.*q7/`]YW^J"h#\1KIOtH
%XKkpQ'I7"Nia]7XBIj="$M)ZY]U9E:faD:i9+(Oi2=tlEP'<]#E)VDAXYOX7*KEZ^j/"hfE.+P3m-r[UA_=!+]?1i`a\LCEk&b=K
%Wr[*K0`0;_DRm="DufVLU<.?Sgii@":%5i>PMmYPQCFgl!"3kSrV@Ps.NA]-.98imPS_*45K5WPc1.=un0PRf6PANW_>@0($Fb-,
%+6.\upZK2ED`Sjs\EIl3lmn0oHT:)?UF5ZD%L;L6U-bTl&ZN.K'i*oe%X#fM(T7F-4hcmq6jH8?HgN:?^,@j]\`n&Qpnkq@dh_7.
%*=fO0\-=G$nS"KKq":f@/oB%m5(LN8MXm]o!"%Hr>Z+K)Jt?a$4'sD5ZsIWt+b4\]?]*1f!&qX=JT#q0"#mrU]PcMLaj@K`C282?
%IRs"N/b*oXjEYh3U473s5GHV-2/)rumP,+.$NY':lIku"^h7WJ4lHcS\"#U.623bH[otB/(BV<g(W$si<jt+l@R'uO@C_@O"Pd\o
%8f/a14Ln,k6O1+5L(8SU#,0Y-cgi^&&Vb1B+Ue\@R3t<<'%#kk:)G23h$[T^>KWOo.YJss.neJ#6c>l1EX6(Z@#QV&Q%U<4gNdIc
%+lY"5bch8U\Y@Y@`hQd_/ADfW?\l4,N]CGp;SIAZ9:KC%dA<Be7(fWhPn&:o<CKlW!jp;>SM(+nMjCLfcfo0l;4:=XNkKmonV)Kt
%&ObXe&R06Xi="Ilc5/N]SK?%bP)%ED$f0`!#Y9I>*Y?$sQ^UFpSM#TIS(t[*Kt+?E[]o.RpKQfh_X<V6UC/(a\C$!?I%q)*i'J5@
%]%Q:6*0]NRF\Wb4q!GoMUs!Q71XB.:aciNj/gU%*nX]WfWB#r8kX(g.__q.X/jqgdF]G3cAa^e;$f->.(OFT%O6Ap^6#3'^4]&Q&
%Vnk*9.DC^YEN5BaYIVWO@Ld_r9]J;J<=EO$LckbB`[r95IiQF5YD7\=7A52L4l^k-WH&&sA)@,#Us_%MG(J>#"ck"k6bGa8Mcu9]
%WJOR>_Ff#"nd8=Wic_V_WU^Y7ecU.%pUJ;!+88Au&3d%%Zf=PdjMW?<Q1G@(HC,%IfF#sYh<)TA*kK3f3Ie;_X'r#u]RIsDVTPqV
%kmCANN?[^t.`uk9aG>VNDK#n\D47%H9LWo7@XFIlDkSos;rtBE#R>;##&_>`n?^l%CB;)'T>P[,3ZRYO3)RMH"!44\(T@K(oetE@
%KGAZ;it7T"Y`/kjAOG_FGU,HMm;6<T*\6"j<BGYWoDQCD)lUmrenR'fZsrq6+'VG,bG4_O^+.,9[k^39X*e73=P8++17mDNs1F<A
%4MC%Yd$!o%]a0E5XUpLL$H=P5:Y_*8L6dcG8FhN'&s^LaLB#aTmpP;Y">HVBg"!oA_J5F'N#-HVR`X5)i.^*sAA!G@.8*Ke4`1=k
%A!N!#Ss-4_W^dr"+/`!hkesi9r.2"snHZ/WiWWQ1EXLo!Z\j*#[9C4jmTapAo7!ZNUJP2h3d1=jX^&Mt6<eom&bX165+#M+?3dsC
%#b%=TOP'1.]#_cK6\*KA!&]/p=:-e+n<(7`qi-lZ=^0^Y12)#O;gb`_nL*a9i?'YQfA4frOG[CfPdO]-[)^Wr#no*IdaVar"?2LV
%'oNlU\/lbUC'7bG6.(0(I\e'.]gF0dPo7JT'X6TihcVO1^m2]C`T":l>tU2!.pu_`<0Ifl'=;fM-belbhr5>7e(6UBO-0\#?rpa_
%HLV&Lk=b;n,@FX(IB7!$DdEV-"^e11e<"*W=#V8C$'t,HD>@b\H@cNdBYeq]#[<GNCuZ73'[I-+bJ``g&"oR&_-Ya8S]/6'2In<T
%IliRj@(\[6M62ZCS6(gER#SR2pS#L2/=,GWV1DmOksbE*]0J$[klGf1gb-:='hsI\CNnC+L>L+>,iq>g'3l6-*T&7V-`g!mm;7bZ
%YVkh++)Ki>a9pZ<0>G]]4i_hLMS/`^EEP`2f44,!A%AuJ*h?<09H.6'fYI?j"*><s%du61'=TT#DqbJ+2=2Booc;d@Y:n`Z`;T$_
%/unj<4XFes+YMQP5E@m4T_XN^'*:M.H20n"#uS"oM_6=Z^c$(t&/XQeYal($4Kl'!_LqpAI*5JA"MjHRJr:!;I&p:&iBdO7^(W"5
%iWPe[Z,8X>il%)i_7-s$U0ItUanEosKj^*-^KDa:jfF4a>R5ja&O#/@!4ELZc@nOXcF@cMahY#"Rr]a'LFlCbouB/;:<3t`pN<`J
%A-h+O40A6HbaddK</SRObmlW7'V!o<?bbFF*gI39E:GOr*MVW.Y)h!S+HsIj<l;C9kLDEHAR#qckn#-]N+_*:!*i[pM[r[n6u;$R
%!%cEJ<^+G./j@46Dg[?S<^$ZDk'7SO]rnU'_1uE^h'uDgKRB:C*hJn;N"iSh+c=<]SIYb"\0R7,+b5Q_:;XOgW-QKd]EI/3Dk'9/
%0Xc*1=o!aRP9Xq_X/S=l7+YpY]%t=HT;?CKgFWZXL*,$P1;5HeX*<JOG9V[KMleiG-DO:?q=h-nLTV``\)M]L<XWFf:+t7N1JHe)
%:pjWG\`sZ8#RGA1M>bJRas\[ik;'1##I*GKEPWd5&&%k+XXX`q];Ud0IdI:ShUS;A]REs6/.*Qh[UhD?Sr[c.Miikc"?/,WKkAM/
%lDR:B1P/cu4BQpV:,k_?$"<Yi3FKn8rkW\Yp\O4Uc^/#;c-,STiKq=S&a/7orX&0E5`;XKrH/"u974Q$:9YrSn@^a=qXV8%bSqb;
%3A'K].UkolLPS%k#.u]Phfi=I-RH737G\p)%9O_n/2Z10q!A8T?1K8PMsFqbX0Tb.ehR=lh0b(<DgF.Mk/BG(_E4Y0X^/-b_6(Ze
%i3uqC5'h^HGL*$JQ<!rLr,7)^S*tk%]5Kn3nBH17IeEY(^\jPQ/b#gE^A7H*J,Ao:+27UFO)JD*c-,#Dr=@e8oBdW,LqeE1Ish4h
%J,8H&^Adf/s3k',ro*81n,LR4T<B@8Nt3>O`HCjhhu<?8YMNU2#QOYPs7"8TIe]-+l*(*0GMdoLlL!_NgQ+RJp\hR.J,d:_1Z"Yh
%O+-\]J,\m'`uf1<\c(3"^\dQU5@"5Br*fA9s3TU.f#"hF++K>.n[Dm(iL:qh]\^V*kgus2n_a8BYJ9nnT76RYT-"$d01gXfLW@0l
%O2>9'<I\$/m#S;`p>pMU4a=s#GG"m/s7;^EgFU<pJdffF<dLZ<?[qsjfAHVrYO,caXRONqIj</%0C9^NJe]aVf=(0INW8JDj6IBY
%o=$s>rTHIqqooZ/I.d3Jr:nea^AmJ&RstCdh%Kak?[_t)k<H`Q?Q4t(`Nqf\$9\pl+Me$;edmV;lepa1'SjX,5MtHd,-=Okkge*5
%hoE>gqZQ@7@IuadmsTV^4h$:1I9<Aq9p7M`D]1G<`2Ir'NtO72-;7pg^Q03-NU/Bgk4L?3(VDun*I.$"Zr,W2n)Hq4h=o02pOQ'g
%*/h0#+=SF5$Z<N^29m:d?aE;]f`X:S,m8RMP@t368`>\2I4r\]&+Cd[!B8?8Du],HIZ[>P(Houg7OEi)ZCi09Wjn-hY1oXhG[K?R
%bbHR=AIBbFqkcG6r9-&BHuXp#\O\c1?($;E0bG)\8og/rNRRObdI=Cg*PX"=,(a=SY$dJ^h<Q/7=<]JGm:P?<`N6QP2^e\LhEZU#
%l3#P!ZN-C8BM[h)O)/?4%fNXn)&imj/?XAP>9`9cB;suY:d`n9<>uBaa=Z\_@f^WM$IP+DIMm965?WA"!-pMd^6-SV5Sb4:W))oF
%h^9H_)=`1!)O;ei(#>tt'nS%^"T(B34Q_):Sb%1)]-=O9T5?ntQRV>98poWY'3*kQD-$Qen!ks*5W5=AB\`]u,jh8DHY%S@7N.T2
%WFULni7^Q,aZF=o8T9t"%.3Pk8a0^Xb>!lC/5dUM0ac[)P6bGgA,A:]n[?IP^DhaSA+rV8<NGbTE@gJthj<h)qS0ks%4*eRiJMu;
%+2;a6ms?-@->*3cf))cR)=F4JbAj(2!I+J:rVbp9#*&eU]qaKY#]S#j3*M9BdV2A:^pA$%Z01:`jE;dPf6Psm83U!qN]UJJ]#U`,
%3PF3t,&fd;;'O#d`Nkc:\bUY/SW4XO=p0Z-WK%`u>fX&:HgRtG-OZuu01`d@IN;H6c>gr+$[+/Ri0cMUfE93hpH0P>2l-D6-%ubD
%V-uiIA?G3#PM5DG7dP@87>f]$4=PW;q+KOfqH3E%Zg'`6Hibm@a-PiHMd+&;a>ReL5XmEggTmA89]*)[-nh45R!qN6^a0N-9Ku/e
%_TC=AF$3r6BbJ]@@GE)CZY,bZoLBq>ZSRBS'S#N?gZtJhI;faO7EOEnIL^!m':+6FjTT1Q)Oc8A,s.eh.2[PD3Y!8)!KQKU^#%eT
%qZ9GL`&tF2ME2DA*qO!3/^YmD6h'AO"'L1G50Vk>KIA?H#aT<<S>GADCQ_o(Kgj\r7M.?6I'/dhK[)/5cY8g\<4^,a+RU#k&N'n_
%6HZkDO>p^-M]H]DFj2]>1oV2Um/65SMHL<cMZ)tPGqCXq.[[s;BS&C@g/d!_T1-!'BMDl7HNBU#p0&<\T:iLI^q%\q\1V9U<0I4p
%_@aRCgM2@Q<,ji6;nleoIY&8#aaTd-WComtDZ_kk)>;30,cLH!3%f9a"0#>ud@\e1#+p3*hS@luf-\D<'X6l:Si1?#5)7Ro6i)ii
%eVQANn>FZFDNDeBee"lm1/3sCrSRblKkr/)ko1.MDL6p!bS/<"?`(uoc-l!>8Z%kl;Ng7SrtN*O2p1N]_pZ59>(B&,qFta\80sha
%27B"$ed'*U"nqr4hDsRicOMH?Gr#lHp74'M_mkd)fH-\'j9Md8k4Ke)3B!tGffg@10V*)o0&#()%'`r!XSU#P*k"6l((]%<old/T
%;^p@J@;Bm#Qg&)_Do8n^qlm)Lqn@$aO$/F@EBNBSfm;Sg&Hs,`k.;Q]E31"cDPR8FF@/`#,cg0W*]I!T23d]%$;a``rC.-1p2P:$
%NB#<t4)^npF.MKR'VOS%*&l<eZ`frZ;Lj3p[N"H?kVpol[i6b<>MFEJAK,*k]9*0HXI+,T"W1-#DkuTP2T+@11tk@32(W5p'']q?
%>T2AA'<.a1bPZedGg-+S3p:DWheb;M:+5G6m7,5)<T\QOAO:;Qa,Lejjdia683,'a3cCesh(Y!2l&KU>dM"O.#a73>2c;Q,KtA9Q
%B>:6PXrAh*QHh!0Y[ghIm7M\HfleZie<Q)tUbTa[Y7K4XL@8mpa`d(NML"-LO&M3&o2!3G`JK@`CAtj7EcLNnG`6P>9t"u!T>lqk
%HJ^B:K;1AV;KaW;r=KAIfIO,(a@mt#RZIahOT>mmB!2&e@fOgE5Fl]aCL=W\3__B09s,,$M&-uF1&M*hL62n[$JBsQSgA'm7Ap5H
%,Y\S,QB8ufB/U&^X1h_Vq7jZA!jCEVaiPsmM.!)@!Te!a_Bc-eR,3#e?;6*G#Jk.N72Chmh[qdjZ\j\3ec,bH(_FYZ6Nbu=o:9Xe
%A1cf\"gKPc"M8CZ<P:g@+GsFa`;HQ0E#dW=:ettKf&5-2$0SUm)d_8GN6)^"D.4TbU)2`<K/+ktXI<U$$\:n<W8%lN[(Z;</2%eJ
%:,'!J50oe3__F7iQIbQZ87l;jacJ$B2^9J$7[kLQ5jlhdJF',J0:^N+ST_ksc!W82oB2L9#0IStZP(R@?7(PMBCJlFk:U`K7l@b`
%#jX&Z3;"=Fn@J.gaRf)4bZl<)`$BF4]RtS5BeVlA5Sq:p-)aK\UB)%7HIUl-G9PWP=$!IHnLl:_ZC,+Mcosb?=lSf%nU*2fkTnRc
%>3FmN4GlYf%M*SD#cPt_U9_H82)tYYpcbT4"A,XDXcTr:49qegT4,C=E\pLpTD^RP5/EeINY=6UcN3GS/B0_Z.o^rp<q$$(!o2q.
%ASRMBeFZYu[ZBJm)Zi;U3sVp;k@u*>N,7'](4/BpM?q<"R*E'6ji$702,FRIG#Hn%=BcR%"7!H%PEDNl=.CW\$43Xfq$S`E`3^mK
%,rl\GJBP*^I16q$6b(qP<(RR92q@rb.KU>:kH/,kN7[S%9>U]/k^O[sG@VW0lO=gol&X/j8VD#X\$Q3Nbp(>@?(6QoDR5Aqd#f;F
%&gC0L'QgF)IMc\g_t)!Zh_phh!*BB09bc,SqlINf=IJs,]h<"J((*L*8l2a-Y"[)<5K+[O(%uC.KGuN`2&U[/+Wjuj;k3PSZI;#%
%.PkLs$^^enf]j8R)qe:A3k"mAg4c%J3)u2SRHm>$]&2-EF<C0',j^Na"Nu;W0G]"eZ>WTf4gempAC9?!bTj8<.&e"_jM@6Ip)b!H
%8%A3pFXDOLh5mbj.^n3E(I!Rh&Fn@6*-)O1b!)r(,He5I,u&2hI6!NWD^G8:Xep#Jg%O:`a%Z`VW^qIM1G&`oph_>S"+kPX0:Zc[
%4DLs,E37?e+dT/J88ZlA#FHr<<)$F>W4klS=Y2QHNKa9C<,Yh6W_>82R_tl;AQU:jc-p8$h&D77-3!b4m&FoI8JBtDJ`eACh_G8h
%V0h(:YpL&2@%8SiYNc!<Y4$deV`hMZ!r+_)RU"G4"a>kI3duY1_Fue"$`bS.i`-%^6J>%0Kd%E3[Y[iY+46P.D,E$6FFrdTAe8q!
%YO/_4dr+%4..ZR)e]Wh5^L_.[LMV#133%lc`hR7]gY&EG0L?A"BfZ#\q'9XLkH(L;jU'HN)IX455T?^0Xi$Ii'O$9\VIhd'n/<Y>
%%V7NJbff9#\\R0\WFjHCj0Mm;QVF@?ddc)%.+/pa,--71b;%TrGV,Uk>X8uLJ?Tf.V/C0s;4.%[FW<A))fF^0HAd,!c\RgP@@*!&
%QtC@G`g_N:c"_5uc2&RHCD+>uQ5tL:_<sfm16K>tSdp_86Mhq:%OSUkWBa#-.6YA5<)g6m[/pK==nNZN5j\8MCZ971lk,1AhdNlf
%iSjN6ELdnJaAR-jDWH*bcc>Y#<q_;gJm?UY7U1a94J*OEPp`sDa;;Fh*Hl-GN#%KQ]J[ZmHNT3J>jEP3pVHs%=DE]?]P`LG@$O&J
%Y-K(d#hjP7G<^-t*[7po/#;1KD*oCA1g:+g/p_RjJRg-?O'/+56]Ws4KrbC+\\"MM&*[E9ji!Qq05o:f]`cH)dC*XC10JDgG3\SB
%5S<h%C?31-c1V9=q+&`:hPm;dc!o:G:WLJI&@2h5W>NKWTAI,pbGJZaf:^U9E_,P?E,72n-Geq\M2U,,a#_2j;hqCu*)0i%2WV3X
%O@<0/PP&LO5kTK>l39Y5o51+.j4%&ce[mfB[!KhK'OfOq?/rqgbqFT._C*EbrohCq=_2pUm#]IG#.iPOk9;/J/_s-+2RhJcEdUuK
%[MS4T?l/$Yg_UL4/=CdclO<<)XeE6?,XlLLXiRnr3BFmlb">1"712D`/`FPFodFhm;O.=(XW7Ga//=XXHY/.A7Z1S0(5to6ZuW1D
%=g4`A8XdI=2&7=9BD8@)Tc\eW"/,tEX.N3\:8S"h'Vr_M@a1?(>Dju?!E;K^GgJ"t!>4h\hp5@8A<s&%9;g?d2!JNjDdG:4iHDhj
%76aV83\Ut_WJS-9bbdtSC"r.%7V%#1AT']LO&Pkm7=G5EdAh5sFTa<$J6Fo41L0BTJub\?<=M*CVL)9B,=Fd3",!"#Xl9M[pR6$s
%X:@k,DqDI%'sq/t\6=,?SE(A^T?m_i/-]j_;^f0?eK31"[H(+;nKlnc2#aZBCSa"8$0LO-kHoi5FKR.;E<!1u%JIgXE<kC/Tbqcm
%Df?:?WUnU(\fi*m;"qqDSQ=QDZZRo.FHgr5(3P&])S#'11E>DR:T-V[Q2+g"(0'Hrb7g(0$;U^sB$4uWO98_\rIW?%4MO_CbBI>u
%*]NRl8f))rIV[?-c+;V1BGrL&Zkd`R0`AHH0<iH6[ohN3dVt2G[@<s<+hmZ@e@j/rYt84\/\#:\UWQoPl_a)uWHr:"F-is@+[($K
%M^@dqn,5HKl/kG@Tq5\rYWM1]+2\03\*B$Epi+%l__5tdKRnY"nCg5_WpO;sUbQb,)LoRb-B##Mj'Td7EUOes2$nc&C4]u-2ou`9
%l+RQImUHBRK'28'1##9t<:lEicR+h_X!7.#h/YrB>(n>KSTj"DI+/B\5,Bs[lOAl.1\AL<-(BX_EI2<8r.;jT7f0JLh7oi1'VB0A
%?_&ar2bhn;freFg1V^!#UY+\[ijV:>\ag^]qI!kuY[@U+!38kQ-"/8qD5Z_X&o?uTL<Q(rkJYE]oB[SokIUO%\Y4J\$"q81i\KK(
%X!"PS)"JPa\Asa@)Lu+'%Q1ke$>42LS!%gB0l_da;!]3SmZu&Urj4&?9FH"QnLMCS<nV8)lT43a(LY.hm_r;55V-H5ZnO<t>%RRc
%#pO<*H!5K"GiVP;,Z&0rr@@M=$>=Tr;J-/]o59n6:U(.lFq&hb;L9FWN?DsuYt>]qZR.$%`W#Vo*S"W3!d8c%j>PEm()8:pBM[j[
%D'1A'obNTdiCdOEbu6:\7g([N<`G+Tp=g,ZOR$n0Q5=$7.I"<QNs2Xho+k1;4PET5RU=ViMDC,Bg!,Q-LM_X1]+T)p+kG\*2;B-N
%'!'AFW(,*]]QNl1:JfUTY>mIE'<IoAG?>p)fEuIsS.b;cV!CFT=h+W8;Y/FqV&8!5>\GT$C=pRrF_UX:46uP_28==Va59W7Y%t,7
%&9#33FJ`-oe"csak+ugPRQHuJ_[j+*'mA>@$!MJnNH2/*,U!%PnRf8?RMN8G%/cnqDB@fAhl>h?m2#9BZ'HJ"UpS>2=@@Zj@]op"
%rlJbLbP_X@PL?&\30n.,-Kl_m&tI[+ZHOI!db3M*<B@0Hh"prMWR`M^qIu^0+:B>"a>:^0TP,36,hd;GUVA@+2Pfp%"_'9Sb7W1]
%_92SPj(ma1$FI6`E6o[FQ)eBO?=4DG!l-"dQ!gt,?^>4YBil'B=)c=MarF9X?:<oo4k2V2,t_lI0H:I>"FZi<>%!dH$BtP?K-PU1
%npI`=)t)g!Ck4AnC=0>gK#m9uX(ZmjF).+,;nV=!cln%"=<-%^#MD8Qfe4&\Zr`5%[U<eF]i?7`*pFGNf8sp\r^JuC@Cfu*U,5$3
%"fk[Zh1SCJf>Z>kaRa5TN1Yhc(""5G?0o8%7u6PA#$Ok7m$Jrt-RcY>];pb*!OR/)FQ%1kDk?+1!!!W752%L6hSH.;5sVRo5<?CK
%UrePSOH<)0!%!JQ1M$@O%.gsdN0s0/%ii3V]K.p:k<mS]cP^$;05`\\<^dO:0=`N?bSQ+dB7\;<V-1)KV'%CVl8go7=ia975p_HI
%gCqemTt=ZDa=?`_0Z^]N^?C"]\8k-5nX"'B8MTBR2u.^@pa*bt0G,kJd>A+dhG-OHM-5oG4iXRc)j"cjp&N..Gn9Gp1+X9\$;JqO
%NTIr*2Q7S^qH?r&pAcXCM.f.)[]sMFi2Z;\!BDSml9\GKpT]WNY<5mNj3#>N;5Vbe#Yr_d/u=KFDp(oo_SA`%QDLJNJo7JAf9sXh
%Y3G*1g:=5P`I:CmQ\Al^(QMfc+Go@S@F;IC!FRT,5<:h9W=*h9=-WR;4#H='\\KcP/^&EMit]q?/fRFQLeUHABspdKJM@QHCb\\G
%baLh:D`un4?Q3OI]3TF."a7ei8f59WgS`oNho5>ZD9ks#GSf80doVY.4aajA4`(.(+ukbZb$cf'*ka!)XY/q<cP>eEVGZ+)(?o:h
%g@jf8`@G]X$XL\[P\AEe_fhZtJrc#\#(+:s(QkWlYX`L_E2o1QKP]$geQcH)g[6Wc/S*V:Q*ELs[_2tLr50;Tm7=L_2^-o`1tU%c
%ZL,OBI^Y>Ta&SlT%(p(lN^KCccuKfW"^c"!"uTG<K_O`gi#u;<>dlkd+^6?0Xi!_+U)i#V[MsZTLNhN@[\*XM&^*PM<*Yl@6$7YY
%WC?6Qe;u7!'5H(!O=g6@og-q?`5gdWr7)Cq!sKUL"eF)9_gBUN,d2j3@^[M-M:f3[*\<p.B\V]fYHOTNaJg(R>4L,Tgs0,df_l8+
%fG9FpIf%m`ih>+*j1:$7@9ZQ*LD+tk82I!qT*:HmcH\6&,<l:E:QO[RQtRbK.'s%J!;0rO"J=&eC5]/a($9[_LP3[S!8;j9%tJXC
%6usblZtuNqrZ5-&5b5b"3[2$\Y&QVqEU=sR!C/QnDtbbc\BUW\>!s_H2c_dA3Ad)f_bJ&^I2i+<Y6N.*?8lm.6HLW^QZ2]ZNp%;#
%'k/1LGiBh=@-kVLm#bM8]1Y27%'&tUl/\gl\sD1"KK`\uF1&K<bsSKQf#Me6m(LcdDVo5r@J<_QdablfY4RB17KRi!q&HiW=C#]i
%:N49i2r*E$#A!E6TFt2T9E_:ld)WM)F,RSBFcPM"WdF)S26[Jd`*>s5YD^J*B73lGp9l0miPS6LC\_F]ZL>-*eGF?fUMgGL[]kO,
%>7/C$>K5BJ+%FQ"Mkb[X`N?i8mY=Dd(-00I'a^h'67C+I[CiR0b>>%gGh(&34a0uQb^*BtcEfa/bHW6eR$O)alY7JEK"=qQpIk;m
%@"+$*U8WYKYQhOB0X<0-&i=K3d>D9Y(r]1V-TI^Yp*Fjg<@5'eTlrsAC_:+W8?]1EKFqH^e`(KA@Z.-j=,A3]S_8E>8eYt!7r<m(
%:CauL)AFVa^l)a2J)E2:QUDLP0HTA'q!jjZ;sA8bn'<ND#Q:`&WbIk=_gP/A/o*GE<)'[;Q6MnM;:3`/l3.nllq2o0VX@LKbt>?V
%/kTHt%'pW&h;LF:A@n&G.QO@/X-LD$e6.\MaoeYSQ`Jrr6oCfcPm+d/MZemK<Jc.:kr$BI7VDDJIG.h+"^^m+%WM_\/DEMJ1:L&L
%3[Ap%cK_>[gg4#<.GHl.XDhn5'1qZ'-XIm#H6,!E87Vk>;B7)QD=PsKIO!nj0$da^PS1qMqteTZ*d/p2o7_>)Jsqm6nP.+ahJc&'
%F1,n&R]C1K1pDGB>RlriUGE(Zj[,C=/)67c$Ks)REK^s92!9U+aZk'a`O,i,VQ30BQ<4?GTM!5PHSnkKDQ'0+OnI1la-7F@W1"UY
%[3eTp)b0h@9BM2+jA$:4*C?XVOSXP?OVm4#jW=+eqpshB0dTsD/U3+P^IkbC@6ZNFpua'DBAU,jgEJuAFp_@e]p\5kWN!$5G+).M
%D[k3r7a+%U3Gk?!"&pV0Yedp.]P=dsb'4_('$LHj%&pt.h:IDGS>:=5FquCJVd-kVPj/K`Wsl&;W5AnIX@4^=8<jhd2Qs%Z49i,#
%S#F/ur8I;$_6i'`4Q)]/;d0/aH/0I[Xsdo_JlqMmQHC)@jE,m01"d5A0W8o[/7E7)XOt.dMj_uoIaZb^0ner7@1f;jL_<9^99g^I
%RNs7V#g;qGkS\$nnBITW/qPfrG/#\c.41nL>5^(V_CFcTdBrgdf:%YW(4'lsF>#!:$;l:X<Ugu[<holegoibC?9;Vq/$D[i]`D*0
%0.)Lr)$!XF8\(rhX6"N0J`,`*:o1rFGa5CC3X`iqokRR:jcl*hb%mtdZP%!L'?i<l010M74I3O\`+6o`eCoup=iPfP'osDB9Ru2h
%5>kUb5u$g6.A=-nr:8-BWuFQFQ!'&D\**[/149KJjgp,/e=b6\+'`!=l^h1O((s]<ZfnaFB9YiT(4iX-\e_pjUm"gM:>$ZBE9>8[
%Ss2X;Vm:(X61288Q)W-!,rUYB,]S=F"Y#u@d2nr?"Nh=PIb!j@9%ghdC+m6b*Z?n@q]:3R%3X<B4<NNo&],t;]e3d&5Sp0rSGF(i
%iJ^`!dN>"Z2u[G(pTcm(@<$/Z@9N,,'(1RG#Hg(UK'25bHj;UZ=E&pCqbQ6Xib`ncGmE5jO'"TDH=Fm(r"t(`rct%'+5`?t/]cIV
%-;ss4hTrYbU8)i$ic)$"E<OlGDNHh.CRZ:*m$X0"?c%i6HfPZSdc`c_^jRB4@Qfq'ml,/$bXc$r;#feR7K1C*YQ+52bE;hF\$p;T
%l-KAj1%I[R=s&!m%Xk96qlbJGh%*lO@Cp^SF`W7o*4k:[T:@CZO!"7+^\R`pJ,&=+*tCm+#Pu_)&,ktsG7XY5hu7&6j>CcrrpgUB
%J+#n>8pf@SV#:N_K:"L\#o$Z9^\_Y=<a;`kh%JH#2;_j7KQ@GGKZ`W:&kYteM!$EAm*;(jmbkO,G1c!Tp.S[,qqJS+Zo?K`\pr+2
%Q$6U8s,SH_YG5<Jk207ee)f5ErYJs0,L%haq[VJTNj;_k?h=+I+[OT3ot/3N*r&6s=fgSeQ="70-nhWlA[nanQm1(s)&VR6_ZA<G
%%<r,sO&tXB=Y&3Hn3+s;kV@<(bQ&k-EKDY7"9DG%7V^:%&J;lLbt^G\FiG@Kb#9J-!4BntObtEILR!QT0-`7r#gl)TOV@r3c4ndh
%O9D29P.!'+hhY5%C_B6X:+X"DKf>lNFX_=_!2<@Oj3sQ>+3Fo2XNEhq8nV;0l`T_H*'"@'\dg85W(UaF1t("V=K#3nW0;^GRK)OS
%3De<0[l+-GQbW@gl,V,YfZm(YP61]N>(/<4HIpolB9)pILTBJ!!0_csnGP04NXsJL<P<UM@FM;!_5&]eM'h38=.LXt=1a8pJ#TFY
%4_0\I;6U<C=!GJ8[u"l7Q/b!Bd,:^dEbls=X.[;R%t0q.S7p.S(:MX,4VT\H_nPND?^Nt#RATKcJ5SEb@0m50^QD4=jXu+P2MH^<
%V*T%S/+L@CWVhL&>[!h6FpLm_Hjcf)oI?mi6.MCd1TRIAFLZ7f1P^f:b^tjK&@eXbY3S?ZP,&qjCbEtkKJ4PmFb\&sqT[*m(;JHZ
%p(&Lma3D_oiLH/!Uha->J&it"p(ZAB"iAfP738I]pd)LeA]'Ei'#;BL9@BTVP>9OJ=onJ"HWo_>FQ=Muls;Bn,kBH)>CrTh#ptMD
%8Y9mF'L%4e'tIr\"/T_ZWF[IpKTjT)"<f.$Q8R64dRs2"1)doF+Ad'O@rd^9,[eXG_2bENC`>OK?,Ilh1`b!8SO46lYIa=?:^AkL
%`LscgHKB:QLELu@'AV3bN[OE3@Q"TQ)lo%WcTSiB#8pJ:ps)..X-#E9EW1nd73hG%J/a6.A!-P<J'_[Rjd@=lTj1[gXIE+=$T)YD
%9JeM\iJ0GGLKnY8DR>OK('c9oGi8\NgrdkK,9j9k9!WL"@EiJ^_8rX9;*V'JN2@G`2.-qW=)j>\-1F2^?Gr\Wh"@TVcUjW["C^!r
%<1+.QZe?@\-6[5\#%5XN/Pru1P-PPI]5/uTY]rT:4@XRO$-J\[f]AK7aAqR6?@UFG[UN79'PINL9>3,Hj![Zd9r;7P"bJ6L!iu^p
%T?QnlpI(IQ$&-Nb4Lm_:=Ya+5"?se7!W7P5:.!]I94Y#^B)?dP_:8V=HkH<G"r"Q@R)^ZpjTl>332lnd+=b'\%+_Qj@>%rL=q`6(
%dO2r3f<a$(K4jeEA>lQ%oe>o?\Ao]94PAiqodYFj5-9=+BoSQ&=UT/b)l@3+1C<n%=I`7O6p+9_p8M#i_0#C)a&UnSe#Q]gCpO2D
%=[qa*kK(:GQ"tDK&?ibWs)=Cc;2k!"d"u;Aj7#H.oJm!PX-u,]5UQlD=/?<I$"=OZ_os1%U+h]P;KQBcimffbYfO=8(ut+#drG"*
%Xe&ha#""Qsc<#ZL6F>1."jMOFg^]6V_Na+I3M`5W:7Zj9=>lD0;3G-6Z<;1mM%r85"m%dWY\ET#Cmn\^OEI+U9oQuR'uj5r=W':-
%`/,[X4%LVA!J6Uqp^in:+f_RHEs;3MBIi@/>EV\5Uf%tj8"Vc&nYOjFW9Qik/J>>I984jc`3$g16rG1@6r4*/jJf,,)cEoc\irL:
%irq5E$H-HC@NGWDN/LLaG%,[DNa^pY@EmbAk+$qNak)0[r5WBlJ,(H#afg/CD6UeDV-a2d^V;,6mk9m`qS1WHf.-eD(143d>lW0f
%omcM(lUNhR+6#fB?<sam"[!J>Xp56`'u\,/9B))]oSP'sqo_4@T`J(On_ZR`^T^XhE2ac*\mS9^q,pb?bElR"mrn<jc/uTOTr:K/
%$%M=i6Ocr?WJ!lq*=>HZG+u-e.++#'Ek)KKKdSjdbc].W/d`)AK4XM(k?9&eOk_t1h@5+)l1/4+8ljpL7*N4V3>'`/M#G^hXH+^&
%?;']5U-9G=6kX:RM0kY_\:Ho3=lL0e<$<7[Ka1P`R5d^d2PW<'Sb?Q*kO<UG#!9n1Ou"&79-S[E=i#.B=$nQ8BSI<e;ORC3!sWYo
%%nu\F:cd-tD.)+J37&bnXU5pZU16>B*?Mdl_:'d^IM,c4>oaF-+'!jkRe;JGEa)1;DurErj>eLV<4rK7)4K`=6a15r&`R"#MTT6/
%PsB%4DLjdaADRJQ??,n_.'A.>-&)U1@p/QXArY:kYH$Eo.cZ88E5g1mhZF;7-;/<V0^(nE:(/--L2ppsa;@lc1/582A^q!AP$)'9
%cnUU`!?hF+-0qkjV[hd!MsumPhoF&cA,Q3Xr]`?#5O3mL!tLj%.B/+4*>%3?08Rb[n$tT#,#e5JQP7F>9s,5dQ!8gZaOPQ#kD@+)
%!/YmS2:J^WB(p9&HfH]OJ`@!A%9HasPcc5TMBj8>[j&X^jtNZ+[@7n0r*T-B(6a!=.,NCPbh(@P_?e:X8'YqHkc:RC3[1%Z:83`n
%@=#Ch'qUl'"lE6.[.Kd7@FI)t;LjUp29-We0%;#PdnYTWWF%JqUGEo>ku1*<Q#XQtj?@mrm$`5r*j<u(bXX9t?;b]CrcFd[3K*Po
%M?CG(n'f7?F<(W9KjYN)6</>#"Z9cQECUA-'PtV)'+^k'QD[\DR2B;&cOWM!:8NH"CP4W-EFhKsEb81=aAb"(S+bC6XF7WAiX"(=
%D7JDM/igNAj`%Sb0R.n(SFWI9'm!6'm3CLY1$##ZKhaN@H]B/CoDfuMYB2ma\ITYr/&P9t*u\M*&n"6MLb^i\pY(gVY9Y+8-:PP0
%:=/**Dc#IfG3)tHp]fRuR/=M5^-U*\GGa3.cU9j9nuc@#Y,>!4OJ,7o45bc;S1,-9)@bCpPgZ&gjW)2F-a&n)&+J1p#6"3t?AT)U
%VC2Tp)J(mN7\Pc7OsNpP>_+Ylf7/@?jL=XYQfeI7l"$$:k4m?u,"-Fp#PCo7%Rg7='4sGBdt9P@J'B,;n#nd+#Gn0&>2T?qH?*fZ
%"LD"Jn.47OqD>rXB'hdnXO-dJfZ&^D]nesaTWY+(AMkiD*s.C'm0k\-.$7&b!`))mZ44"C8:4ar)rJQ8-&68HT4gcF0<*gJ9cHtE
%6!:jWRl8Eha!5ESY+];'cPAFPCco4(b?`m;8n5!c]>/,IQjYIjIHOCFllb2*5:."##Nf=MPbEf!mK0;;,m;C/3!F;o.4"ds.FQ%V
%EDpIB?NYcs2asg7R3h`b%Cq9I?HN(>rjQm,>ht-t)$-^6TW92b"">jHNff>YU`S&B@fOG@/7u?a;lSAdrGV$@f`q[koknPZ)jLcX
%^oi^]D,aVWCtssVWbpg;1FcA\X1DeW;]e=O8fo<i6foEU=";Qc(+Y`G4j7_Q&Os\Y25Gu6di#Q:'r&ge@)`kq*g@aFD@0cK1\?.h
%e[o<W-ITSq+L>su4IDc:jhYJ&GBSS^rTK!QPT0aHJ+#ig#Xtg"P`\CBQNr!HC=^5+Y,R%"f^Am?\f,`m&-:!o_ca3@((9cT^\221
%)15D?@7!\^.3n045bOTV[K:8s2hanedVk4+6.B%&frtKh#rf\#/?(3$6VrC)2;b)g`(M-3$nqK]Sd\+c(P`b3aUJ8jJ?q8%H#K?N
%9Xb7[flYPn%$/ue`0AiR4lA)ljrYpm5l(Js/GC_QY&_^]m%#-mpl)4%ib1^m71F?9"S;:\^P!>,"fIuRrAg?P?lHotl/c>$5M;<b
%R!b[tmAS("cMPgF&n*3KlZSn&@Rl1I3]SXF+Q-)%%4Zl^6AU.`+O:'r0U]f]3^o>9H50n";542Hg@[?A`X(pLP`t>iD'3#(@;oGn
%3l_?>cj*Ks.p-HGWWu+I(dOE[JrNbR0kLE\fkH!`?h",-F7V3!B&oUr\k(LC87Ae>(Ej%aY:Re_UjC?D0VdF[UJ?:33._Dh$Akl4
%'W.+.&UGs-D'\*fl39T$%Ok`Ai&1mIH@(Hg(r/gZ:cs9]`r_!k1/nS8I49Gn)%pp&GuM?k=Z80g@6Q"d4A$bPJdkp!^oleRn,uBs
%8/.WB!M_!L2Ap6\e[kWm-cQQ]1fJQ$Zjoh6Jk9`4i]AtO$S?-t]cCA]_S*?:C<X8aRP\XpZOLG'!A#L14Qtj=O!D5K<#^HloKZ1$
%?RjW0',$8PGY3d8`EOK5$"+Ee#^R8`31l9YVU4BMAi$/0J`=0N:0iqj<#7"OfI2B.g!HC<VIP>dY[TaaHU,QiqoOfBiY)?\6Y;8M
%.5b\a3*A->F]Z)g>5K!fM7X&OJ70u\`id[iO2>JQBoAYh;f+;NcM?5)h^DMNf_D,'T084%1u``E=]g.n`c`@r7@ORDE3Zt0/Dg\W
%6Z$Q]Vc=nB2>W8s-kmr1#AkQh>Alkg7<-hIZ'2Y0WH0D2*XJeKSE^5p<+0CK'h!K/FPmHkR>n]h0]c3i=KTi#"X^m-O_d^A[Ok<3
%P#$h^Ul[DO906pQYq$+8ZNt,HPK@DJ4N!.SnCi/oJgC^Jn#i"L4cXJI(4GS#jHPU5YI+98;lEa!&ISQZpi`Jl'@c=9*M-L'[@Jke
%UeRII!s3_>Q&>$l'Xg^C\f=-CTu0Bl`V\Dq$lC[Q);uVGP/G3C=F&RV5j52u=6"%a5+(Wa;-Oi677TUc+^\UtM,1i<U>l.U3)!&)
%D[b++-qnD2"A4>+"=X\U8p3QW9re(#IejUB&pX8l!1i^a4mG%@"$rq)c(d_&lI\F:;Ou)h$E4_7PJgC:'[nO%e#1=F-.IbYMF1=:
%l!B?9K1U"KP^J+C2fU_,nZ's.WrhuAd9+W"S9;fp0"uRUj+&r^:%@P.[cU#H*`-+gEp;**-rn(KHu'.MBrAbB/k!$@JqO"rESB,u
%Z_S$p7)XD-'cr_QHMQ4rM$UEB$rA'eC8T]rRj,'hf/]/\;>Y/VWt*caVD>Bf?.Gr0ZHbYM#E(mndXT5^)Zn-=?ZlWs+*fP.ggq20
%h8*q4E,'slJaSXS$>:*tT$U:@7,j%ogDe_Ej')F#:P@b19GGEl(s3(cRVW;)3n<kK>n!2g:BA+)*")$V`8Ic:6Y'OBbDhX=3iVUF
%$q*kgK._WD+Hl:<C$T^U6D@,p(q>fG'2_"PCQH78R-(.(NC(E5V:PrWR,T':>p5O%(ooVUq.WRn.U$1tM@];'5hp9YiRG9<",9oQ
%;mq-K)G7t#<!CQ&$U7AOeVV)%\ZSaE8"58FMYIRdAcq(uOe*4eFI$\sfn_+eOBGd:RpS%iD'<bNW`uc*P5#+C[2+5m6*bALFn;q0
%P/YqW;j4D/\0!V1j_7%'Y?J0#R?U)/%QPp<KoQWs;2[1;;laWmH23U5LRajn!=g%8(0!kD1(Y*LNc)[(An*S-H!Hcf8Z"Z/1.HB=
%:kKlo^WpLe:@q@_D-_fOML`gdKOb_rbFr%rDe;->nA:cTp!I>b%W/IL>tDFRK.XeQHE'H#.B"NhYa:tFOGS,=`E`l"GFIq&$s=N0
%,m!p<h;i_B!7*;8FX#JD\?<)$G)<&(qJ4QX(=D7@A3D[_UM,u:Fs85dJ/>"p>TalL3ac'cE"N+%1DjJm%2JQ\)4121SN8G$;P'C-
%lt/tUQ'Y(OZ>XC[rg&L*]4#O:=nE]lqdS%BTp9=$*`KUr=Eg9D-uC-=D?M<sQq&1plnQ^%[kW.]M?%@Fen&2uV29[C0n$ak!Dan_
%#J=!O"^i*+9n8SXdfh#K=rKV">68^oM]C;"h^RRg9i^0<RYKpd;/%9mB<5WiLll?s'e05Bc/R%`DTLD21TT7]6Un1k"9R,$EL[-D
%`j<@GY8!FmGX@UOMu;^P-NVk@ZWeLpX[AR_/0=t=TdMct87<oI.9#r=PFk!ue<,je`[n83N[&$)_P]Yn*+`:1oUBI?nKkMsh2S(c
%ACUh06?!=S'WF[dK:Z$9e3^,UEu=YSSj)(,1^S\>)]*f(r_Le_!Q^3ZJ>;7=:C*ukSWUt@X*#qV`SVBE/kk+_.Wkf7IObOg81fUm
%H]e),?r;&^o//L5n46b^2l=G5X,7\rb5!3W8MCJs`sC;6UMbOl#684<h(IP)?Ad(D[+)Cm4M=[3#G#G/QEupeI=Rb1%!?*#X`dD7
%B\AL_*V`4`W,=85Mr9AQ#K,XO*WQIe;u?nHCaD^fUk]5<7M0_%"-R5*_A(8[!/P)l]IA:Mc.9DM]SRmO'_WE,?U7uIThlV1BHZgX
%B`<bSYl`trMNiL(N#jk`<lQC#1I1K253V"(qr?U,CZb,$_u+KkU7uW;ef)n46q9eQ(#X1P'-(a86EZjORIC>.Q3XLe>!7P>NZaWk
%Z(M,f=.9$g-!N?A/eFO?\[8X":(s^eh\(C_m*<*J^I$K&jl,&Up=iQZZ0DldosI&+I4?"F[onrn<a*<9>3as1d@G8r+_[)B'Ld#]
%Z/UGI$>0rhgjKu'h)c+u\'.+'Z:`*Lj&7NL#eOJ[HW.R*+fukn(V=q/Ws0CKmLEdc'c*(%$J(o9A`,dj8TE+pk&QN8!3Z*>$)Fnq
%k?Kku2g(0odDQ0TXRq(R$H9/:GoQLHdBtC"&o3Lu=s7WXAXsr0I'&CfQ:&J.4R"n_5+?^nZj7W+ko)(N<@!(HUT2m4YUXhNb>2K*
%<S#(nVFfpLJp%Hs\(0eu_Z:f8l#%?uiZc:ne[UqG*9,F4n1X;1c;0b0AC7MklOdZWEP`ohk.5=)6>tR^/?6TVJi,-fdKrr8di'WB
%@Ktj!;$B5LYncG5JRK28Kue4dZWCpAk@^!F8`1qpo<W+ggU5\XXbqt^KD/58CP%eFT8c:/LH+aFm/a8XdgnM8kruX-;V3)TV<f8+
%K(Q5P+YnH-i@6hC7eI%U`2bqaZ_F#t9HFjSZ`&0NXJshqL;JPq_@[Zn,Ms3-[<O)R0_-obIqU!/?=Ct"NRItJ.BCZ3>Y<U+Ds%k=
%D;oYGOnke4\,_-"@,Gs@W9TR]3Zf<@.B!M7?Pq=u)FP`@RXBOMmJnpf,[c<WLnN-IADD/"5Nq7-46<\T9lk(C3K;'A:r0sMBLopf
%duV'k'9Ai<GKq984e4XtAO8h[#]ir6Z7rDqOW@OTUm(3,j^#O%5U@Wc]JQWcKa_a:ePS?T_EV'S.l07jSZ>GK2Q'3d8S*mn0!+>T
%)Dh5&"A&iMUnd8kN$N-e&ABhHNaS8:KFpqBI@h5ak^b8BZp_gs<:I>[TC/%uk#sU>k.o70ZauH&`:,OiTR(H-B35O&^=:nKG9cdS
%$uPoRo1X9e92rGh]5i3i7G#T><b9!$A5l*j5/r7Pop5gQW4^-Aj:WuEF,srZKTn^#pF5fEIEIK&S)ST6_bP*dirm%a2?d4)9J$;_
%6j\fZSCG3sbl(>k5s::q/QV7$n<'k^8s1#,7IcQa!d5*dpust&<6.ere/WE-Mg)QQeh2qMDP[*%5ZlX>Jrt^2.%hi$U[b+A1Ds<>
%+Y-Zab)GqOP(ejV6n[#[6kC*`E<)]3']I=1To4EA/bT7NR<euaF]C4E)mcPk29No*:#/]M'*+\WJAERWSa5tm.FWEj,^,FSTo?^,
%%^RFe8MBaO0&_U'WYdT9L/i6/+gFhG.0,-4\)$t(V]95oZM??!>l1TtkL,S.GKinK'9ltQnV%WHgo/Hi1S3@/pLOBk:mtXQg&FY$
%(TZ$JEp`!;66=O]i/"=IA13bPi<8$`^:G^6C]U`_RblU/%s%!d$D*]sTVb\)!8_-e#q/dEJ_\>HDQ+i.iV_c2#6A-j9!L#6c.p-l
%0i[]'7B)Ein'I4."Q<"!fZ?o2a+7'Y\MXUS^n9/b*/c]fU9_mGc7"u.j#^*^Q$u]2Ppi\HZ?etPT<f(n-L+Z6lYZ-eJq\1Aic.\L
%lX-B?L?.?V1TFPO,DOC\"(:^*pq6e/UQgp=^op[5(HUiso^$E>fpA?EN[K]9%<G06!<n!Rh#M\,9aXrFi4g]^JgLt+YFP2o9(%mn
%;3p6p5(:(m'pni1DG:LB+X9dpUuUlY%VODp3jsi2j<;h1U5U;;=2<37*bWl)!Ea!DcGm[6/UWb;l;V=oI4`Pb,=/mU'cAQG&U:5!
%XC(/LT?Gs=^'9oUAF%\O_cJs50GKfENuBegQp?KqA_Q)On)A==&=0eDY+VjgM]!5:%^O/tAs$6HG`#\n&7;>_&:b@<aq&gnl)rP@
%H@pK"#:'jEX2DIPD'ElbboG$5"005+q]9=*2&(SsNZ&W`#F.uQWeG/8NS4VXpRL/Jl/Y*P2'!Q4pY"#$gis0(d1tSU*r3o];^[3*
%-TjB$mb3`0\Wr`gCE'R1?MNPp&jMltKSjNN62,$E!C393ij:Gb&^:$L4;TM#Ye`:[VD6[IY1O7Hpt9/5lDS-[)gi'raoG4W<)"k'
%=lj)+Alo$o[ZF[equ]4+G=CPsfnugj(/%eDaa4t#QXZYXJt'7A[b'kU:^I)GJPCr^!eq2'6`+)4K0M@HD'm`RgT4at[jGIlG\7#;
%b`a$beYW[I#ja<g$MS:48iS@&3rpI&.kX*\;:PIkE7n!SIhqk5[2L&RP1%/)HIU'_*lj:o7p.WI[4WA<AE??TSEm+/q5/+r_RdMj
%l_tJ\0P%)d8I[_FU^Xd^fSkc6blO>4(:kq^h)LhX<Roeg9F,MUJ9,8=KO01n,&r5+!PrqoLr,!VIV8)K/T[f[8.6i^`dApDVN-2W
%7D[l^+;$k`F60ZGf4FEDA-YA4)0\7[`X@VoR7o?'Ua\iViF*NeHPGG3.)gg:\=msXEP\*kJr@:Z^+#XHYbf-NXFRXfi*W00#r/rg
%>=k^M*IEL110&[if]1JG'FJ#C]I"P@83U#(29P2T-l/U#Z_S-cZPY@.#9eC)/$%\Z:FO@g^hZ^%it11A)?tjjNJV8W[p-5?IF6<=
%5[oNsE__:]h\6mD(4%SjZ@uu<lR[h:4e*7JqY9;VIqWC^j+u0rpfTa0;nWZ[V.#uM:J2QHMojtN0HV5"0/>i@F%qi7.V`#:`?3-s
%-T,F675-Yn<$hm.IO6<4bi0eC8Ic^-d<TnrPgudDLr>^[/9B<EZo-.%DX]>W'Bp8,Vo7]HRc`(_';WW,^,U;JqP0b+HDp"s]Zig3
%5,aO172n%O2C?70HGkG"I_$opg@(L#WZ0s^-AiCmk+n`u6sbo"WfEq\P$_7p[jEs7&W>m!$P/KM*>ZaGmUrEPQ7'trl'0"0m[+Ln
%.?2GoJXE;MIi=TW.aXG3!=6Eb@K&"nY/L/_p"Z!p[G@+A%!PHDighI=^st30nCZm1DpC_n<Ukds'a7;(i[qlJC$bEl()aq*X7`AE
%.dq]Yl$i.*f9@Sje>rtO%"B%PmC"V1K*\F<XPe>!9uE^=#0Cte@\RWP3*I#O`r%34UI?OA,-#sE!TV]Er`GI1CEPPc7n;!E1uc^N
%-ik^nhaW5m8OJot)j<8liD:(eI\k%V'1Q\o3g[p(*!0k\$[solDAJ;9WEUa8C)IBf1V49=Dk[@CO8H.4ofbhBjh@4V*rZDdH<Rm_
%T'F'^oJk#+L>&JiCsh2NQ);I[RS*7f%/m,4a^f6DZU(;sXGL\k^L30sXU$E07TWfH^IYrJi)8F#1=E4."(B<4X>KT&B-"cbe:/^-
%FG\%>;5J5(H<5e<<7.Y'aT0h$&:@"k!?N6LTG')4+#Q//h6Q1q+Vu7=@f[i)i=OM5o$NUPT[?2)I3]#?hoee[*N.RfUqJ!0pK@I/
%>(_al$1(=I&!"m:0f^TR#:Cs+N\b+jPlVPs8<2M[e_9@,_c<LZrY(HoN'B=e@>?+iCfJNB\ck'FLd4;"XKRSjf$0uDbZ<gE@l!Kr
%l52o"'6RJNOPH>E^*=r!-s$"Wi1lJJ..P<M3*<Gn\C\Em+/1!@QsOtD!B\kt@XHkO:NqdsP+$;S8%Rb.6K#uG"iFT]nG7GJL:Wc3
%dgk3n3('(A\<%t1$EL*@D4M.1VC.;,5a8T&P7@XPgo0Z,*7S1&C(fcU0\_jsJ/D3Db#X+D5$A1l:e%";B_`cN,Vf[L'cZS#.Pia#
%[IeAiERQVn7c;hQkd;ZjMuOOD$ZW[4_l=PE-.N6Kr,d-t6NJfbD*_3j\PjY?QT\FNo?c:E21$GmM]2nokS#W],=Ga8gPW9S+W9*P
%#/5'[M\06=6h<&h(UPY5RZSo"0qSXW2])\TBT]SW<Q>`Z_k8CD&;c<67hf#-"&6*4@8N9Dm5n3GNoJ:-6Sd1Clnfu';Yl2QOk/Mh
%<1!gscQ)@=F/U2n)G&,#d*#4/W)f9?nm5iSQj4abrDtRSck';:s)j2?L<1tP8$E4+jGZ[-IDR]l((G-9A3SNN&%KZk:nQPlPcU6!
%Gj*/5CoW*g;#.pMTd>1TcuSS_'6[CU`Z'iJqH2Ft_aIACP#73N.QA>8Z,Q,cR:[fIPTA9m8+OR%#m+FcqS67h@1&L4CUVE>Q]aO_
%#G(d7Y:@D]_j.U3:/fb(FUfs-d#qQniqrC.9GZ29C(Y/7+_ZO,kR125gi#egfo6mYWFGBNFQK!d[:qs$LM!GFY]EMS9a]#QY,7i7
%#M<cZaY;Na-gtg4<^k;Po+2M1;[@-@3><nkS-)Rib_V=%3sQ*:rg#._Vs0\d\K3$V'fT]Y[#n3,j^an&AH`P&;$T>AX,=Eb^)-U5
%e%D\$pMc$+[&c:Eir/Nm9^Z%h_G!pm`_Y^L_QkRZp2>-$YeXJJn5'G=]W)i(^T)Me'MbK7>@SF?e4U)`bm'g4,+)FhLj^^*]PJ>S
%WkuUk*[8`hcN.dX3CHc=d"%_bJuV0[1aHSo!8\QFG>bXR,q)HGC!&CiR,:%6jcs5NDY8X"IeH=<fSR<Y2q_<`Y6s$5\ggsi\1oUJ
%eKZeo<-8Q2==b(@.4bO>A?F$@.YW")6K-IH6mZTj)=X%>e3@r^:[6!gVCdKaB(<=H?u@#;.pAK);j^rpa&Yp\bTOS+=d!d!_@mr+
%dujPi!f7'iAXDB`bbX>.^?cRJ:)VGq^.-XdH#a)]MG8h-YDBpnA-pLNh>B'Ra@"JO,&tb)Y$/(kHONkQF.Y=18Bq1%`>]:`Mh"@8
%?l&3SNCN\]7Bc$)TlTOaCkZd7[kLL#L>j<I6Kd#qTfS!6'[3[gE@'>Njrc<o>-HLk%;(Hai6e:AqZR><Zsok@EYN.?AjuFG9XKu`
%Coj51MafUS+0I,k["lW@&:-i%MO#`DQ8-Jm%m'ONis6AOI;],sg3hu7o(X*$kUHT;a+$`'OXX_E>7ub[jod#<O\^e^IE8O&$QU?.
%4tKf8EjoqSZGd+k1]<K@h)3I=_?(aFe7+jf1i"T:Ol6SI_>:Q.]9q#A9-,`qc$=iI<;V\L7<a83-,>R"b7%O\<FM>cdp"r2+Db]e
%,ie)ZE#."0_+lW$K3j#<HPQO0Cf93g,G>$=]ieM,9U$jG-B<Uuc>GcD.GR+;R`gI7XDg"YS2cdb%o.p8p;)$91DU9Qfs@,e8R7;2
%A/)Z2MuC.8XgEGH,-l!!2kD7$?0m9]G&.LXMLV>:q5<fZ6Q&ad`Bi"ATh22j8/5cOE;r79+-@\-onX4VT-ccF1u!`r"cLlp-eRYO
%]'J=QHWNMQ&CP10*Z)Fi.d6/Q66NhJjl',/V[Q6KXnS'dE"NIu1.64-\n"&lgeW"EnA:p&1R>`38[-1l<^[4EU$?)pi4oh`CBGR4
%*SCkKAp[tA)5WeYO2Q`I2-5<;\.hh0VF56h?@)+_3LTjLPWY*V#8C)R!#^!lS%)>/'VBB5d[$-G<$pV=PFq8I*Jb//-3hAnT@F/b
%1b#+`pVo2Le4'b1"Ya@9$95Y/!ANgM%nJ/R<3g$?>,G2a1rI>5+`5WTZ]_IgA"4>DlD5ml)dl:<X&q5@irY"@/f7jXRLbRDij:]%
%:"`PN"<]<.?4M*HB;p9UnXX,f,SnQgTfbuQ:<Lgpl.At9k.G*dER:qhWZEo\^?n3>5CFYoqG^,!.)k7ITKORg#L\L(,s`9f@JM#Q
%`$L;T:QVja^ri>$)bcbF2#@Z>UKGMR8</QpE6Y+*XHhTVDGB22^i:&Q>pctl$94gI>8`0&ZO$]805Es,HRdbuhRHt)Ro@3@TPdbM
%dU=HdG0eAE'<NH!?B5+H/]psgb%aMcHdF'5KM8tV?k4HOF5P#&_g7i!\]V"i4FB;(.AVOOU6`?la.\j/N)N/#r";J@.[[VJOL1dZ
%HcSCQ/"J7_8g5[*1GA]t+[cq#f@@*?RUEM[ZJ:,_Q>+kkOFllP/>Ff!W)RlIBNS5oE^iY%UF;A\d:i\);Uc<\<TUS19fUR!;<i.)
%+!h&th\9/2O%aGl-FOU_^nD7q/2%Mqq<949[)Qr9,.k^FEZiq+*#GliibbrXB;,M\Pm]9[Fp9k9<]*:tZYWlL$[:=m=2h>];Q)4M
%2je_i'Mh#dbbVjZMl^n7#EL&>HU:<$&OtR^@C?r=f+up?G9Q7#Mjf`-cGH[TKu*tq.'`$1q*J1k1Tm[cQ$^`l+*gepFO/MG<@th[
%_%0q+=Y9Arr:Ek)+YT`KR;Q.PO3BbM,J:fb\R]`,;r\,N6:m;*:/eLk`PFA>4<U\_&am*/`Jn84`:!GCV2aQU8.WO4djALGUe'/N
%(.$%i2H;OELE50&7_>TsC50":&lsf?`,%:iB;#8G'aLbK&IJnM>/c%Db8f]69=M^10YLe&:Vh("YZW<ZR0+*hW:r+'\dh^q\aFh?
%l&eK+]!>%2Li!?sa;V1d)Ifd*)Mo9%%i+`95m"]^eYIe5"cdS/ZUq20s!=uCkB8`H,J%laM_SlfQ)0aA#D16sZrAIpW*kFM-;p+<
%!<^h7IUEsMMZC65=-cBUOp-65ND@BI@)d.)1hEdM)KL$(e<=nqN7Y.lg+Yu5Km]oX^I4ue)bAS=$]Bp*m,Y'7*h-+nq]On-E8A-6
%\MH"`E"OMf`/6?.QuC0D,h5Df7G.$k^/U7a^Ip)CP68)NFjG1(.V.k_\n[+L2.g*aXTR(dMJ<?1<8oOomT"ocQ./6kWOZ)/J?3]g
%>huGO.;<rK9Jg/q@a'9?XOE\f&B`CBTo)IjfqP=9XgeH!X:g<-*o^A.;lZ$DkiJ^h<uJ9,3"PYmZ[#Uai<uMsSUtE&<CR'BLbqP'
%"N%uIB`joGd\1o:(5,=IV(ut4dB\!AM?oJmZY,^R2MUMRlDYKCUr3_5,i#7C93p_D4W42=9PH$_gKI0E8LBm,)n/k(A.FZ1"l[Ti
%KXDQDe]Q1&CJ9Q450@3&%m#oC09*T'`*DPae3pD3"`';dm,b-,jhRcH(;E^45^ZF*&d$S/b\"qh!_tHmEH.&pr>P8L'e>R&*(]=2
%)HTDd_`5M0hUS]7gt$(?Y3_T?;V<EbaH1F!Xg(X))*&S^H7:*I=nPe(#r62=!m"'K/>amt'*H;uKaj(h:1f?5&C<P$R"bd+_&5iq
%7VAV!Kdr"TNE&^:KT+H%XVtc?n%8>Y`8cZ.>Dsm>gJL6bZ<DnMV:h/,nVV.&V(oLMOTZCM*JqpC"FH1F=,P,.e;jHuZuX<`H*R$%
%r1H&`b`SS;A2<DSSqR&*=&KS;a(pbQqL-gc&L@sn+^s1.W5o:B_\t%"q#t0hQDpD:d=rAp:Y#/<VWN$iV.b3*CR$g$6t4j_]<k(f
%7q-6-Q\XDpoT@'4@9D(fX3uCH?:ddKc0Y[T\inb(G[8H+lqA0patme1A?/gagOp1)&Tu]9_TA<`lP(+_e3<63i/s,'b.!15:?>t]
%<P=rf%aaC5[$/WC;BO?bq+0<o/h0m?N=O`=VMUAY8B(\?WSKG;=91]/$qIkJ:[!kh3=TQF0K]l%_S.GtPiK,1=Gt%A^[L3\S#QW5
%'I.N4nD`NS!D*iFlGBm-;'f>jFWL3T["BMc=fY-o(JT=U6e2ZrBHkeSZ!!N8#H(-YU$.'i]N2UE[;]8F`VmrkC_>#.i/mHVh/nNG
%D9jA0S!d#O`QB\OX%N>j-E9GZWn%@].XYUf=gcFHKB-n#/u%L6[<QFIF/*AJXQZ%7.4.p9q-b@0h,8se7Ff>gk[f.mRn1lZ`ZcJg
%2oS^f-CI)^P_k%e^R:fcdG4IKUi-9D[qpI(ZCT-"X&7OofW;uj">nM2JDR0'RfZ8aY"KMf!01KE>GsT\Pt1@2X/lSq=)'AdT*Gln
%J8,p"X5#IbRp+4@mSh>/7;Oqf-W,%ig'gT!1=g#P_MEi1[0h8)d;schbtmNE,tUW%5ji"\WT(8@7>d[He.fCJ">Z10*o'R_KmFLg
%WV&quX?rn0[Shlp(0Wb'!afGPB?b$-2U\!Nl]mucb?Q[bAnRYdU!@4JJ.iR0jnpB/:j'R.:aq>77\7+J/hgon@1"jgN);0>33.*>
%hd"o6rA=2,,g+;K$7AP]B&$B'E>1%3+8;F2fscD-FI!oZL8lU21K,fpK"r8$[Lj!.@ln_SP?);;//D&X)n8hGogT.!$7;Yl9a@+?
%<$MnTp"f6aOj\%\1FS.*P[26,Vs1cOaju6QB(\iaBgPFbF%&g[TNJh,0;=\An`E:&p1<*99HHV#!_e&\-E[h'?(ZLeIW*e//=gWp
%T!]L,Z43MG_%EC+hU'8Q7d,JBIelT%8ZDNnc`3d>BX3QrJ]ctQ=r'<kPYEW;MMNrONGCe\:U8kD!tEXgeX;*h8`*W,WWA+Ul&q0*
%W_PHrg9`,;etc>C')!KZR?OneB=(#=klFe>C^?@oG[V;<Z0%<NPQGG7GFaFnPUtBa2f8,![W%(DCQ_G%J'!>21M4SK2G&j[HeAO)
%&d#T)j^C)4SahN)'>n^5BRu9,OI4b'e.f'jg@f&7];[D8)SuL)Z[%+%1>iPhYn]na#0hsE2El'cfdMo#ETnl:oM<r'MjA=UG.iHQ
%I3kRR.ft7K<HC%$"mY,.-Z!N'"S1uk/,a6uLn'@a6A%Z=oJC2HSCrW/C`L1pq^maef%l^[SIoae75\.9(JX'_?2Sfe,BBTWh$D1\
%*rtk1ZDiq`@\g=;>G,,17<'\U85Nqte>SN4%h`P+-E<YB#hlq#+3]Gu*hlo?9q!]G$SX]$Ofo_0IDnK/SWW;p@q-tGWNW'?oVQkK
%_qK9>M3Bo"RK`bZQ<McA'=9;!^,VKJI:\j6Yn$=LL(^600$(+67PO)k&$W?Yk(>:8\jHsOA<dj!#pq51!"S0gjYYblRsDIm/:h]j
%k9(\[a<B$$<k-)1>6SND<7=fB/d76I;Up'qom/XZi-]A'MWsDfUF;]/@@B7<?nseiHb)QS0i;Kk:pAcEN#8Q-#H7(9,98n#C%CbW
%3F-kp='8%@F0oGmC0!nJ;1$ubgf2jE;PfmXY-PJNCt-4Ld*#4/aFQmHN+H*Wao&7.aK!Bs<#%?((_kiL[+fa80a!eu.QNC`AX0q,
%iVK@s:NnO,]M[59^qVM<o(IuWT7X8;l!ZlHNE2hU(eC4`\GeQEHT#qq+r<VCc1"3G,Y&b=G&d9%oDJILe7:`mQ?-D!<C8>IK5XM.
%%Nr2CPjYL4VE),+Z``U_pi+4CZj:is[(l(jB?)&j/2DRGYE5mS&ZHYi,8.n9*F[CXBYfJBO:4G"ncr%)0pi;(;9p0-MONcjK(IDR
%^6QiCe_,6S`fQY]<hdH6;=Q/FF<psc.OL;VA\*mQcI_F*hm8#u)dW:-]9$":,ZQrjBM'aiNSp8_VHn)=c-6K'A(3P!GZHU=$BeXG
%D3*D56ZboCoQtE:2<RgqrsVTl2L-J4\3Q^7Ya@GLU0EV@)6*kq^fcj(/2/cGbUR'f,oEmCQ`(3-8b-g#L>i>_-u_V=58^B$%#jM+
%6h0J(./j8;PA$K8_YIJ7gEkMTY5U>n2]/=Ls%;dAR;3<#G:aYjN%ekU'9l+S4iK'&5#)'j/f\VaBi/-^X,AA0U5s%\9>Y7PK1B@&
%WRdf\*H3qp%GBN[o$<CO2au^;j4+^upoJq+X>KE;4U"J&7/i/U=TV5u>p83M-#IioopHLcs!>L*R+F@7D5NR%^hE7q""4^X9VR<>
%Q!Ea@mV/mK7.1T,&]L><]&+X8'RY.h?QcV&]CDQWO:*<D11BC!7\.0R8EDahPMEKM+;:*Nc0;erdq&=kGj)!=S$`68L<RBAn)S-M
%XRr\jX&_ZI7$NajQbDc/Sf#G2#r:<hpg%uBCCq_M&$!347LD$eFcT@>e$?:l:XgRrNL&Pqr@b!\nu5O$PU/M9QU5,\Uh07W'!E3:
%TuOse9ds991s1t#/SkVEPZI$d,$.Hrr?5BI8mB,=UQtgtq@sZ"J=?#X/g@Fg9i2S.!4.RDBV\MX:&8&`JQ0bsIJe0t.upmnRp:&d
%:=]Q2ZPg144I[>/b[suj\Krh[SWXfX&E-#VIji::"p`<pN!S4O85Q",/Y5MeN9/V)Q%jsU6k]]*7YgtCnepfq_7\G-)$Hs1<Mdq&
%S)SQ9.lD_1>DoR#<VU&*7i8h!JgT6F0qR/?ef#!<H:Ws>gUGZ5(,D-^27B#(j8Gp+T?_UrQE@stFE_:$,e=6i?1t,]&CfZr!5*!2
%!7V(@+9jWa*+2dugOLW4;a<!OhTEh]L<tqGLr6VN//pJAO&c!N!(0fOri*OHKT'+iXs9r&FlN[*Mp8IEQ5A0pU>1gFUR%I(^1oUg
%O.c_,W@Ai]fc9m$oc=HS<MF/-[1#q9U?g/OiD[QD\dnI_r%ebV-.ao65"uT=#**Ef\TJ+h--uTaKib#_llde@:LGrO.3DEJo0kL<
%`oqam194H.%8F\c.XeUTc!o'!J585Fl:Q%l_-"/?+8GPG0+&\Pc0Q8/:md32e@Xq$R_[,$+TtQU[F-K)9MQ7O1Q*e)_RPa?Pd$@@
%HmPM2&r#XjfbR;/!1p3ds'>DiU(<Te=<9^u1@Z]H>D>t;nOr/2QqMKm*K6#\D&OQ/]L,]Dj!!=!H.g-Rh3f[`e]k(^)ZXq:bmfj(
%`-Oig9f"uLd'Jb5&o`F'/:%*q,D4_]](kM"9uJrcpH['9DZ+>8%mNr'':E&**u//g?:36E5!^HF!=fDI^dVD#=i)n]ZNF:3,bpI$
%khWs%?:;7/\-0uW(gIMj"KB=h$L>^J?L:hr>?Ks!HD:(I\u>s"l7<%nRoUJ,d>)1rG;c>#$h]4NI`PQ1Lsk-[qku1:0!YVKWU(@c
%JO#"1kT).I-P&96kog8L)P\Up[AIXm'JaO*M$SZL1N,pjOpJkHA>at"/`'ib6NVF)HC=Jl.U:7/9Tl=$)([XVk6qZ"0kPBGO90E0
%_fs/$`&!L5Dj^>r&oM*W?cd?[9>NTVXsFdBa>Xhsi23.qm3WTj)iCJ+)6OikW?Z0XoG)+l._1B56!_*H%CMGe\("<$3IK2k:LB(Q
%&"6&M%%9gTfiPHMH!*iglC"IcOEP&ujEQ@%P20Ok.h5MP22_qnms`jDE+=g/&sga8`[8\0,uWN#d'T[\b+"2B&=epE5=GW>T.nJL
%NT)Eb;aB;dS`VC%c,&ouEg7p'-_5EdUh[^WNt0`G]5Jc9CURl.3l9UP;[]J!8^U5bfc=j,"?5a1q75P\hgYBZn.K&VpP3,TU:pKi
%DdIne&&8%]O2(T]I/2#OiP52\YQ%%"dAqsl6)Hh,rdZV_I!%-/%HKS0bO<0naZkI%<T/QO-FF.s;3<-(Pt>0>jjhS(8bfJ'`\RHQ
%oMhrk,2F8ClEBY=s7N:9Usc_:qS0C)JpcGJ4`Pl`jMe[]<Wq-]5F]T>'SX&S6nfH1YDRNQpJmnJJ.:aCT/.bT<tU0VLu\0!k<J^1
%rj!]#mp&5D82u79RS_g*P0jV?,Qq1_532(A1L!I/*/$;6V^8/b'Z9C3s4#@0dK#gq'pe^C&g??09-qZ:4D[D4?5;pl93Q<gJMceq
%5%]Tt;[&d(=1Qr'O+1pA+0EZ"Agu_g'SQ.E+;-`08+NF2&QQ%]iV@`+A%?P;Xq7%T!@-Vt;0uU_Ya6[Yp\X,<GoRFmO^aJ*-PjMn
%XEt%C2S^/-\--ZpQl>q=>m1HUEO)2^!.lMQ1[4T&j+$d)"TEEJiPE0r<f/lSKdE((Up`Onr7*>!c'Lr>m#cG2J-/=ee<'d`kkNE_
%TDCu@ntW?h-b/X+gB%c('MQYb1uJJ$01FTKLbN3pNG:p(e\-a^5#?aibf>`8)I8n&le'#b:_=K@ZDYE)H()8).P%7*T3]<E'md'`
%.Z^p)k$UW<>7TpgA]7!(kocR1$)PM7P/ecW>d$3\;qNb8k@IYZ[Mo#'ge$Tr%780=AfI`SQZ'Lp-Vs4Z9sQ<JbZNf:)s_kdGcMr5
%GNs0*C-iOP.()\VH:+Im%pQ;2!SH7e_'-u,,.&%pPi,Fd+]#-+9c_RFZ$NT:O-(rUqUWGMW):CXWhtDRa'quOosl>fnk;n&S0Sc!
%<(K#N=_F-=U^*I[glDEX2Ig9>BApA,M"!*d*97tDUQ^DjX+Z(GPB]3cCb0/8dSb[UfI,LlX<nN)O>nH2NZM@"%RS+(RuM0q2U8.g
%(,[SU8YiUhS:cr07'21%K>*hMCVVAG?$9Lg$@]96)nJ`-:G\jAU+Kc`b(i.Lm$7&ngR7!@bMita#MSL[_j?_NR"2Pij;*?+N%.Rl
%<g=d:%fm(^N1dcOo\9gB-%pUN[3]7CTtm,^Z:UbWp7e9BP)1Y4iRsirWRFh%U6c?NUZ)pE&.9E`Y0n`'&57l?)):XZLb4@\,N5HT
%]qf$9M+^fnmX*ol_f8g6e#XA>N`/ofR]&M5D*kQ\&ShOLp/U(FC"S6u+o0\?c0Jo,Hul(t"uXKiTDiYZbWf\=k6H?PU5N6/MCtYP
%H?m*G;@Q[>Kd+H%/-+3qCOJPsl@hH^+a\p39#!7u'#!L&ciV[P`*3QqE^6Yq&/1F6>,hiC[0D'0Un)-'V+*7uWG7=MTJP'8I46LW
%@>nuS1F@N.6ApLDX/.X#eNX,CK?bcjNiJP14n$Ms_:%K0-St$+FTWlsS)-b0pkYMdG&XJ-rO.WVHR\(\Qp+7^.Y2'9f5:i(P^71#
%0-W#s*D*J&-_/$Z9asXC@1lrmW]E"dpWqtu(LJ1bK^]1U:./&8dP?bh@`#XjFACbF=08gNq>e)X$=r5970)^OaMtkVIf)u:s1c'.
%rWDOOnHdpqG]'mtT.97W0SZX)K&]7]aLoBQXJ#fH197![mW4N%e,V"HU`["JXB5LWos36>&VW#@@i.L<]'o\hPrZZ`MS;2=&30=c
%]YS*<qLkSO=-f)dQ?fj2@Cug!Q4bJe!2D`@O.d/?TIi17f[:IWpAnm',S(&eCOK0;Xg6ord)Jlq^S#>7`$:D\1RS4J7W'5IGG[qX
%`#V7G5Z:2,M%<IIjC=r>?jcK;p*LoKq_GV41k^"HO&2c=$WYi-+&4fH-"s[*rGIL?jE-A7ItsW5745UHGW,\Tr0cm^W45l\H&BDm
%Q1si*HX<bO"]H;+=D4o,4C=DtJ,!qeqEO7.kO2g=Tfc>md_?R\^cE"X'd:rf$ZqpE7_&7)`VuRiJ%?[,OKu1'KFk+^@m!TubI*mR
%[OU*5P#)>rjRRkQ!.\*hdOdGbE/&bqL-d+0ncA&N<"1$W@;D0[6;rNs<7mN&a&Hc7.CpS4K@0h0CP/b&Y;c7MD<l%C-f"H`9TU@L
%5YA*"=\kZpp#j2;I8Qos^BfluR=enn?;J*Y$N?9dIuX?5$*>Q:#%T6j0bPF4&V"NZ#)%)L(?FBeXS@)FEN>_8WsCQ$\f-lQ5lHS$
%q?4^<2f?BJ_nZ,i[=s,+-`jgbrVeQ6IXc3hf73YcYI4!!?H`"kYCE]Tr^/6N>X,atTnVh4i]l%UC61ZuO01-rq/9SYZp5?=.jjE[
%O83o`J/NBU=u<i2Du\kjG'(1jlNdB$eDW[c7Os*'OQuN#B9)ua7pjEeI)`2Aq?KKGL(\\Mc?kciJ(:e6Xd[73Vn+Y'g5;=)\;"ob
%i>TFIUlICV]&5ql_*qdub3Nr]q_lX/TP6>RQlGILR$D$M&32;HmeH+)A*kV=DuY`8GRg[c")0RG=/I>?@/PVU\\WMJ]fntlO(ru/
%M&r6fl/!mK+Saf6,N]Z(>uFfY['$mG(]A6^Z:V[nbMF-9&Kf=o3^<$ukPZ@%Q%nP@H$o;6[Gt\tKSaBum95'/#t!o^/G:`C<Cf1&
%19UYt@X7G%ZN%7cHN#+,#3P*u9Rcd.Xp_<`T+/hX,3`@`*!bP8'WP1W=KXY]aN8+AIn^*46arLXQ(A6Kb*IFUlBEZPP]i<93H3V-
%Uf22-`H%_IfA6WATY'[XhV>2aqT!f2g;/(.TG)d_)mgJ/104EVF][$2a)ON9#5fQfd?-\DGL%ujC`i_/jH)`H!ML'F!(IGH_h%i9
%k.OjH4#=Ka8^9qYFcfX.cHc'(F]VYXHLLl@s2]c=SF!aOB$b7$QSaPdBbtup@F`/ie8d\hNHOL%Y$cE&Et+[0NqSQ*6$`;fQB%><
%g"b==o$&^r"jD`4,@t!BiNbNimm6\+mIQnkO7q$)cEGt4`VI#\@M@\D\gp70lG@/^3[eWOn`e*=3+J%SJ78u(gWWQ*X?rn&RYKOC
%Fh1%+gEJ*ms,8,(jLR-u;]p"-gP<;6qeQ3p8/EmWLc^HZE,2hmf*J#82?]'W#Nh'ZN1dJEF:]P\Nuq^S(cdQceDc"k3m8OR;tK!Y
%3L%+i=#Y?P$S=>ic5,m9Rp/Wh=LKksfm]XM!#Gr:=%.RZs132(T&$Y?,"Ml[@Jmp&h7^"(+<R\1iV(<E*F)HT+SfP0$-5iLX!^b\
%T[0j*3#F;b\>gdCakth9`=r'`1>#`^'S+TQD2aBDYN?RiP)l,"@t'o748@H>hUflXI>!CS#]64#_SH+IJe.un[::u4^]*ij6m8MM
%of@rJL9Z9qlpu_0UTGRa7RQUnCrF[G6^BHO901YT@XP]Hd>l1H@4Tm$B6j-%%1JlJl)?Ub<)Ab*,5Y@HO=%nlEskN^7R%i0mMGj%
%UDYeu58cKb1)1HU%)Z/(6e8XMB/L6OO]4egCYan6Z%iLf6$!h2<FeVeXb"efR.@9&>9i)1`i]uk?NK2noQ]n<;1=mY;F_t7nB6Lr
%PDLbTlAI_EYW*$ed!r`L(EW`"#QFN-oYMN4<f84"ic9Fq$<gM^7)>I.HuA.5k\SBn-b?D_3R=qWE3b]m=qJ8R+e."H+phmUQDdeN
%8YDb?gA7#TG,j70BJcRa"XXm_B!Lr#m2c#AR"S*60u#Al?oLs)Qu$96%YispAsIKqQM_kj/)"t[0bCbo+i,2kU7dnt7qgbA??*W[
%c4li"YZ)8cPp+JF7r]_Q!$)c7ZY;sqBN0uXd#9T%<MC/jF/p;cC!Y6<nF*.*HS!k:"n3)4A$VT;G"YdLj\0)u,]SAi/cN;@,7qVN
%aDUr?8jOSLe&`Ml:\Ol2N+#aX_eF90<*?_Y&>H>lNAR9m2]EtO+d7t6A++5o5h(O,#fTXKMn5po[/Et<*OY]"TmjW&6`mVIJ_7bM
%@0HJWj@`OD!*uBTSrm1'd]Fc$LqXBujB]2N2s1e*^`tagCrVM'mK^?hWnFEr#Xof43V7#<p3k#M-(PYeZHL?$!n@eq/JC?rk+-G*
%_KL:+T'UZ%ddj'(KUpZn,GBrl"f"=8FaZurSb730^]5cUaeJn]T8]s43>3"eDA<U/B-UrRCRa0-P%@1!/F7k<Z(Z440lQAZ]IdFZ
%[eSV62Q!t&/++1V\6D2/)gHfkQf)bTP3a%l<7*>KJnGs%_)W"]_i;,7;F/Jd,3`e<`/%tLQr==/;5I[C')VfN0EhG$c?Y!hTsC%2
%PaY!*E*1E5Or!`[BI<(DB#RoAJ2BM;]0Ont,^Idr):9N2)krsb.p=c`*j7]J`sS$&2cu[i04p)3E)_Ac0.*fY1h::.YSP&c3%_qo
%WL!MU8<(Hp=\Hmem8PY.;*28iWFJ"i(S?G#?g2t8iqf4idis-F)qs@t'+(au%.2E#/Xf'Eac-%7j[j>OZ>,FA79NL7k!gSe6%WVa
%iWo_>i1O^J6a\ScIQHFb4k'sN@9^q[)3tm-OQCgDI]K3k4uT/SS*?(Wn)W%`QTu62eHA\iFp#rsSOprB(BTdTA6:XJf$'YM;+M?=
%J>`l!2_,?4<Rp4/:f_F"7W8qP4:3X1b,CsN.7Dp[Vq*H-QjarE%0<-#)(T:+0dBq]3X#VlbIT$.aTK?rk6aY[L%&hfZ/ER;%]m'g
%N:iEg@(oUh*A+#**e;$gMH0m:RnNr5dD/VZ7;J/N]iu_gq6E<)G4pZt8CE9QKF>dhU&c1=G6qe>0:sBf&>Z_DP&u+<3IUu]RJ2Wt
%K6?O_O\@XcX8F@B5[_h'MQ1HDAp)$=Hn`LW3k:qu'"R"Wr=gDHYO.=6=uG[I0OG3HMY=:4NNbG:]rb-EdOD,lRBT_4-uH,D5-\]l
%[tbi9n]G]YP]/cTM<dRO+HKE\XE"Udq]Sa8oAf;?qlKB&o*mq;s2KIog9U\LGAf_7lJMQkeMfk,qgo\Bh%U6FLAs;0@*>TXS*W5G
%#g4M9lK:>6MXm;8_]tR(D([@2-;TrF@NmLqfT?CI,SYibB,1$3N.V=.kW)S"%6<>uEJ9Hs$d+"ONoZ3dH^Q]^.[sW[Q(8G;V["[H
%//Tnk>1)*sDtC,FE#H%5%AJYWR1-L=m?7^*A<n[UYla-kPnqnZeT`2YYUfu98M)ra[;pf&LCcKW7!Ij$2hDgJ#Z/'Z;EBD-/lA6H
%f7H,bEh>dpZBZumL/>b`gEeFJ#oOB5"O7sDc9OqL\aja9[B&>`Ml>6c?U;4o`"do80o/PN:if7K0jb;?No55#f`+hCI'>kZ"MHj8
%?KPXgL@nHWLCEE?B"eaj]hL8!$g"`I[(?\b8A;=_6sHXO44>m+\G[K"k(]3t)kK@.0C=e_qe2OiDO[,umCCrD*@4=gHJcjc.,eD+
%@8V.JmL/@LELh!>ZD9i*Q?`mLF0]X?SO0.'8m$r_]CN>icnB@0%d.f-8s.g0NBn)B[S4PqXV"9dZ_R&$#>sEH#pFpQiu#/mUi=-n
%[9+KUIKn),+/EZ58AS9k%82Q=#b5D_2R1/E@UDr*[Ltu9=km=_BYqnn,Okmj9!\Wcerl9ifGQWkiQ2Sr"f^VA(1"`OMUppD$(23b
%,99`>:m7KF`ES@gGldKLX&'d(i_lb:`lMI/-(XkIeEZZ[BKM<Z<#e<#O[OF5MY,,;$:$D1dU9lCY0X4['@?<pgI8&5ph1%,mD8\(
%6L8%U^g_1u%\U7-:)RlU9u/P4"0,?te$)pe&0n(s7jFjn*WV2k*04$,>?'WLhe?N?*@jc_2Ck/le058+]Qjq^3ZN[0<cb%d6*qKB
%M\BC07SfDP,a1[)gq-4G&\gX3>R/dKCa3Te`AD4JJ]&P]P7'uth0IH!EjDst)kHGHCIci:)dI?21)dM@[#i]&Xd&r?)I3p\iGEL.
%nJ`r&]M'27YI@MARR2@[nH+9?2]>X+4:?n#M-*EOSM.Ms>OMgBSZFgUm\7f=et0puaJd[fi5SMm(OQo#eh0aorb9k7heMeDe='[7
%%W]Lfpf.=1=jCGK>r33jA#g&LR<t]a'MYY1gCN?Cfc;3Y8DEsOnaM8(D&ol4d#d1`J3H[tdo`E7f/cp^A:7bi^5nCEPl2(!$=S@f
%rqH<k-WNm__$go!eh/\$X-;eE<m\b$/>0#s6[r/q&7UTmE'YH+3_e$o'[`C+!;^f)^/^?bfaXC3E.5?<R285gTj(Vc]El%``#ZuZ
%<lA@a_L`,8R2<3MW7)fQLkG;/SR9FP!r46SH]J9]\M4h?UH7)<\rGWDJ[BK>QY^rk*e`Qb?6%gq&g\2S<I3R?Qfo0%A<r.%'<<=*
%[UOJ%#P3`;].fPJ,W1r2>+S4REFSmK``NauNM87]*#rKf4:TiA'lkFh;tJ*PXPFTm3A,AC]>->k?tKEQ'^*L&M:9la&_#DXhRHKW
%,Dl/uoo`s.d+;qZZ"mHPLq(e,d41bPH=WB\c<$/NHB(+'bHBbu;:(8\A2hX#Zj,[?d%r]?9KXR3a^WW7qdA[M`H*CN")4S+BFZsT
%^,`hgQKpNXU*)t28u09ZI0P&XSBZu<A]RCgJ+c_VIP>ld_i-&8]Q%AEDI),4.0Tk"4PbP^M#U_2*6cjKbE3rAs$-galC$Qu9?G7C
%8R?2X<:_pRDi--D9`MmAlU3/75kbeN/8D!_hdW,T&Q%4q2S2N\o.o\?DQn^=q$4:q'Y'&`ESOiG_CspkCQp3,3mO;8rI^!\f%*N?
%@@L1$KZ/j><tI=q'b\tb68r'@O>`O/,IDdNoFL/b>H]1WamL74%;s#>a"lF7^n,IjifX%?B#8O`rotc+a`Y!bpR9BYMXBo1m@:%p
%:_U\X\Oj%d\sG"b%[QB6N6h2W6sn_04pB9<rV%N<Jj94Ero<nMs*T4jp%e:[IPne6ldNK/^V)i0lfIs8gMbqsGl$Otmcj[sgr8l7
%efW_]H[Yn_o1uR9G9;;3l+aI\Qf]s6H1UuAIe`W+rrG=RMQH~>
%AI9_PrivateDataEnd
